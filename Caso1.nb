(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    386062,       7146]
NotebookOptionsPosition[    381983,       7017]
NotebookOutlinePosition[    382318,       7032]
CellTagsIndexPosition[    382275,       7029]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "\"\</home/josu/PRM/RRT/RandomData.m\>\""}]], "Input",
 CellChangeTimes->{{3.717690621802247*^9, 3.7176906235252047`*^9}}],

Cell[CellGroupData[{

Cell["Punto 2: generar una distribuci\[OAcute]n uniforme", "Section",
 CellChangeTimes->{{3.717688029357265*^9, 3.717688046677825*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"muestras", "=", "10000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"listaUnifor", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomData", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "muestras"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{
  3.7169833388444643`*^9, {3.7169841973117027`*^9, 3.716984197640759*^9}, {
   3.7169856500360193`*^9, 3.716985650489697*^9}, {3.716988815888487*^9, 
   3.716988817014987*^9}, {3.717596901423724*^9, 3.7175969548865213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"listaUnifor", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7175972077589483`*^9, 3.7175972084625607`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.616], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.616], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.1, 1019}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{34.083333333333336`, 66.25}, {-95.08714543595043, 
          88.53807066880275}}],
        StatusArea[#, 1019]& ,
        TagBoxNote->"1019"],
       StyleBox["1019", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1019, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.1, 0}, {0.2, 1000}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{65.75, 97.91666666666669}, {-91.67264189719644, 
          88.53807066880275}}],
        StatusArea[#, 1000]& ,
        TagBoxNote->"1000"],
       StyleBox["1000", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1000, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.2, 0}, {0.3, 979}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{97.41666666666669, 
          129.58333333333334`}, {-87.89871693331047, 88.53807066880275}}],
        StatusArea[#, 979]& ,
        TagBoxNote->"979"],
       StyleBox["979", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[979, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.3, 0}, {0.4, 990}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{129.08333333333334`, 
          161.25000000000003`}, {-89.87553477153644, 88.53807066880275}}],
        StatusArea[#, 990]& ,
        TagBoxNote->"990"],
       StyleBox["990", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[990, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.4, 0}, {0.5, 899}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{160.75000000000003`, 
          192.91666666666669`}, {-73.52185992803054, 88.53807066880275}}],
        StatusArea[#, 899]& ,
        TagBoxNote->"899"],
       StyleBox["899", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[899, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {0.6, 1017}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{192.41666666666669`, 
          224.58333333333334`}, {-94.72772401081842, 88.53807066880275}}],
        StatusArea[#, 1017]& ,
        TagBoxNote->"1017"],
       StyleBox["1017", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1017, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.6, 0}, {0.7, 1055}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{224.08333333333334`, 256.25}, {-101.5567310883264, 
          88.53807066880275}}],
        StatusArea[#, 1055]& ,
        TagBoxNote->"1055"],
       StyleBox["1055", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1055, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.7, 0}, {0.8, 985}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{255.75, 287.9166666666667}, {-88.97698120870645, 
          88.53807066880275}}],
        StatusArea[#, 985]& ,
        TagBoxNote->"985"],
       StyleBox["985", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[985, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, {0.9, 1017}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{287.4166666666667, 
          319.5833333333333}, {-94.72772401081842, 88.53807066880275}}],
        StatusArea[#, 1017]& ,
        TagBoxNote->"1017"],
       StyleBox["1017", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1017, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.9, 0}, {1., 1039}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{319.0833333333333, 351.25}, {-98.68135968727042, 
          88.53807066880275}}],
        StatusArea[#, 1039]& ,
        TagBoxNote->"1039"],
       StyleBox["1039", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1039, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.02, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.716981996012561*^9, 3.7169820343893633`*^9}, {
   3.716982132547328*^9, 3.716982151288742*^9}, 3.716983341720975*^9, {
   3.716984199748926*^9, 3.716984209709711*^9}, {3.716985029383988*^9, 
   3.7169850402788467`*^9}, 3.716985225275875*^9, 3.716985653135187*^9, 
   3.7169857917825813`*^9, 3.7169861518447866`*^9, {3.716986800009769*^9, 
   3.7169868229305563`*^9}, {3.716987247192318*^9, 3.7169872612672043`*^9}, 
   3.716987304807468*^9, 3.716987391455687*^9, {3.7169874368069696`*^9, 
   3.716987448604672*^9}, {3.716987512991251*^9, 3.716987532157076*^9}, 
   3.716987655348737*^9, 3.716987885535754*^9, 3.716988035516636*^9, 
   3.716988077295865*^9, 3.716988185153512*^9, 3.716988234977503*^9, 
   3.716988330872501*^9, {3.716988403210088*^9, 3.716988414405054*^9}, 
   3.716988492859378*^9, 3.716988556047165*^9, 3.716988646153193*^9, 
   3.7169887569804087`*^9, {3.716988790801734*^9, 3.716988840952573*^9}, 
   3.716989159964469*^9, {3.7169892125259657`*^9, 3.716989241996716*^9}, 
   3.716989310588069*^9, 3.7169893522515078`*^9, 3.716989476096738*^9, 
   3.716991501476527*^9, 3.716991553763954*^9, 3.716991588231556*^9, 
   3.7169916960233994`*^9, 3.716991738221859*^9, 3.716991854472788*^9, 
   3.7169922236159554`*^9, 3.716992279831665*^9, 3.716992363188755*^9, 
   3.71724210232815*^9, {3.717242246235948*^9, 3.717242258076812*^9}, 
   3.717242520414352*^9, 3.7172427493089523`*^9, 3.717242787757316*^9, 
   3.717242895135419*^9, 3.717242933535812*^9, 3.717245730497601*^9, 
   3.7172459459358807`*^9, 3.7172461453617*^9, {3.717246322463333*^9, 
   3.7172463473180723`*^9}, 3.717246568622842*^9, 3.717247164275093*^9, 
   3.7172479187988234`*^9, 3.717248261085732*^9, 3.717249280143869*^9, 
   3.717249324758833*^9, 3.717595117890026*^9, 3.717595428018132*^9, 
   3.717595771517015*^9, 3.717596642941225*^9, {3.717596903732236*^9, 
   3.7175969578127613`*^9}, 3.717597209490449*^9, 3.717687530129074*^9, 
   3.717687637362399*^9, 3.717687904847226*^9, 3.7176880685231752`*^9, {
   3.7176881334530983`*^9, 3.717688139271999*^9}, 3.717691326249311*^9, 
   3.717756863810544*^9, 3.717758699455834*^9, 3.71776570219987*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lamda", "=", "80"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mu", "=", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ro", "=", 
   RowBox[{"lamda", "/", "mu"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.716982142241506*^9, {3.716983562084832*^9, 3.716983573564213*^9}, {
   3.7169918481830893`*^9, 3.716991852502636*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Punto 3 : el generador de numeros aleatorios basado \
en el metodo de transformaci\[OAcute]n inversa se implementa en RandomExp",
 FontColor->GrayLevel[0]]], "Section",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.717599284011466*^9, 3.7175992863431396`*^9}, 
   3.717599340977661*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InterArrivalsTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "lamda", "]"}], ",", "muestras"}], "]"}]}], 
  ";"}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.716982129845159*^9, 3.7169821479245863`*^9}, 
   3.716984203976016*^9, 3.716988822884779*^9}],

Cell["\<\
InterArrivalsTime lo que calcula realmente es que espacio de tiempo hay entre \
las llegadas de los paquetes que es exponencial lo que se demuestra en el \
siguiente histograma\
\>", "Text",
 CellChangeTimes->{{3.7169832994192142`*^9, 3.716983300420478*^9}, {
  3.717597269363472*^9, 3.717597286635532*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"InterArrivalsTime", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.716983304492599*^9, 3.716983334781171*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.308], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.308], Thickness[Small]}], RectangleBox[{0., 0}, {0.001, 766},
      RoundingRadius->0], RectangleBox[{0.001, 0}, {0.002, 716},
      RoundingRadius->0], RectangleBox[{0.002, 0}, {0.003, 678},
      RoundingRadius->0], RectangleBox[{0.003, 0}, {0.004, 593},
      RoundingRadius->0], RectangleBox[{0.004, 0}, {0.005, 567},
      RoundingRadius->0], RectangleBox[{0.005, 0}, {0.006, 518},
      RoundingRadius->0], RectangleBox[{0.006, 0}, {0.007, 440},
      RoundingRadius->0], RectangleBox[{0.007, 0}, {0.008, 435},
      RoundingRadius->0], RectangleBox[{0.008, 0}, {0.009, 386},
      RoundingRadius->0], RectangleBox[{0.009, 0}, {0.01, 357},
      RoundingRadius->0], RectangleBox[{0.01, 0}, {0.011, 334},
      RoundingRadius->0], RectangleBox[{0.011, 0}, {0.012, 325},
      RoundingRadius->0], RectangleBox[{0.012, 0}, {0.013, 305},
      RoundingRadius->0], RectangleBox[{0.013, 0}, {0.014, 283},
      RoundingRadius->0], RectangleBox[{0.014, 0}, {0.015, 259},
      RoundingRadius->0], RectangleBox[{0.015, 0}, {0.016, 228},
      RoundingRadius->0], RectangleBox[{0.016, 0}, {0.017, 203},
      RoundingRadius->0], RectangleBox[{0.017, 0}, {0.018, 207},
      RoundingRadius->0], RectangleBox[{0.018, 0}, {0.019, 177},
      RoundingRadius->0], RectangleBox[{0.019, 0}, {0.02, 181},
      RoundingRadius->0], RectangleBox[{0.02, 0}, {0.021, 132},
      RoundingRadius->0], RectangleBox[{0.021, 0}, {0.022, 142},
      RoundingRadius->0], RectangleBox[{0.022, 0}, {0.023, 135},
      RoundingRadius->0], RectangleBox[{0.023, 0}, {0.024, 132},
      RoundingRadius->0], RectangleBox[{0.024, 0}, {0.025, 114},
      RoundingRadius->0], RectangleBox[{0.025, 0}, {0.026, 104},
      RoundingRadius->0], RectangleBox[{0.026, 0}, {0.027, 103},
      RoundingRadius->0], RectangleBox[{0.027, 0}, {0.028, 78},
      RoundingRadius->0], RectangleBox[{0.028, 0}, {0.029, 83},
      RoundingRadius->0], RectangleBox[{0.029, 0}, {0.03, 76},
      RoundingRadius->0], RectangleBox[{0.03, 0}, {0.031, 81},
      RoundingRadius->0], RectangleBox[{0.031, 0}, {0.032, 75},
      RoundingRadius->0], RectangleBox[{0.032, 0}, {0.033, 69},
      RoundingRadius->0], RectangleBox[{0.033, 0}, {0.034, 53},
      RoundingRadius->0], RectangleBox[{0.034, 0}, {0.035, 47},
      RoundingRadius->0], RectangleBox[{0.035, 0}, {0.036, 54},
      RoundingRadius->0], RectangleBox[{0.036, 0}, {0.037, 50},
      RoundingRadius->0], RectangleBox[{0.037, 0}, {0.038, 52},
      RoundingRadius->0], RectangleBox[{0.038, 0}, {0.039, 40},
      RoundingRadius->0], RectangleBox[{0.039, 0}, {0.04, 38},
      RoundingRadius->0], RectangleBox[{0.04, 0}, {0.041, 34},
      RoundingRadius->0], RectangleBox[{0.041, 0}, {0.042, 31},
      RoundingRadius->0], RectangleBox[{0.042, 0}, {0.043, 21},
      RoundingRadius->0], RectangleBox[{0.043, 0}, {0.044, 23},
      RoundingRadius->0], RectangleBox[{0.044, 0}, {0.045, 29},
      RoundingRadius->0], RectangleBox[{0.045, 0}, {0.046, 26},
      RoundingRadius->0], RectangleBox[{0.046, 0}, {0.047, 18},
      RoundingRadius->0], RectangleBox[{0.047, 0}, {0.048, 14},
      RoundingRadius->0], RectangleBox[{0.048, 0}, {0.049, 14},
      RoundingRadius->0], RectangleBox[{0.049, 0}, {0.05, 18},
      RoundingRadius->0], RectangleBox[{0.05, 0}, {0.051, 8},
      RoundingRadius->0], RectangleBox[{0.051, 0}, {0.052, 14},
      RoundingRadius->0], RectangleBox[{0.052, 0}, {0.053, 9},
      RoundingRadius->0], RectangleBox[{0.053, 0}, {0.054, 14},
      RoundingRadius->0], RectangleBox[{0.054, 0}, {0.055, 3},
      RoundingRadius->0], RectangleBox[{0.055, 0}, {0.056, 7},
      RoundingRadius->0], RectangleBox[{0.056, 0}, {0.057, 8},
      RoundingRadius->0], RectangleBox[{0.057, 0}, {0.058, 7},
      RoundingRadius->0], RectangleBox[{0.058, 0}, {0.059, 7},
      RoundingRadius->0], RectangleBox[{0.059, 0}, {0.06, 4},
      RoundingRadius->0], RectangleBox[{0.06, 0}, {0.061, 7},
      RoundingRadius->0], RectangleBox[{0.061, 0}, {0.062, 2},
      RoundingRadius->0], RectangleBox[{0.062, 0}, {0.063, 1},
      RoundingRadius->0], RectangleBox[{0.063, 0}, {0.064, 5},
      RoundingRadius->0], RectangleBox[{0.064, 0}, {0.065, 2},
      RoundingRadius->0], RectangleBox[{0.065, 0}, {0.066, 1},
      RoundingRadius->0], RectangleBox[{0.066, 0}, {0.067, 2},
      RoundingRadius->0], RectangleBox[{0.067, 0}, {0.068, 4},
      RoundingRadius->0], RectangleBox[{0.068, 0}, {0.069, 3},
      RoundingRadius->0], RectangleBox[{0.069, 0}, {0.07, 1},
      RoundingRadius->0], RectangleBox[{0.07, 0}, {0.071, 5},
      RoundingRadius->0], RectangleBox[{0.071, 0}, {0.072, 2},
      RoundingRadius->0], RectangleBox[{0.072, 0}, {0.073, 1},
      RoundingRadius->0], RectangleBox[{0.073, 0}, {0.074, 5},
      RoundingRadius->0], RectangleBox[{0.074, 0}, {0.075, 3},
      RoundingRadius->0], RectangleBox[{0.075, 0}, {0.076, 2},
      RoundingRadius->0], RectangleBox[{0.076, 0}, {0.077, 2},
      RoundingRadius->0], RectangleBox[{0.077, 0}, {0.078, 2},
      RoundingRadius->0], RectangleBox[{0.078, 0}, {0.079, 2},
      RoundingRadius->0], RectangleBox[{0.079, 0}, {0.08, 1},
      RoundingRadius->0], RectangleBox[{0.08, 0}, {0.081, 3},
      RoundingRadius->0], RectangleBox[{0.082, 0}, {0.083, 3},
      RoundingRadius->0], RectangleBox[{0.083, 0}, {0.084, 1},
      RoundingRadius->0], RectangleBox[{0.084, 0}, {0.085, 3},
      RoundingRadius->0], RectangleBox[{0.085, 0}, {0.086, 3},
      RoundingRadius->0], RectangleBox[{0.086, 0}, {0.087, 1},
      RoundingRadius->0], RectangleBox[{0.087, 0}, {0.088, 1},
      RoundingRadius->0], RectangleBox[{0.088, 0}, {0.089, 1},
      RoundingRadius->0], RectangleBox[{0.089, 0}, {0.09, 1},
      RoundingRadius->0], RectangleBox[{0.09, 0}, {0.091, 4},
      RoundingRadius->0], RectangleBox[{0.092, 0}, {0.093, 1},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.00106, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 0.053}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.716983322913105*^9, 3.716983341880041*^9}, {
   3.716984199813018*^9, 3.7169842097950068`*^9}, {3.7169850294684143`*^9, 
   3.716985040392836*^9}, 3.716985225427144*^9, 3.7169856532167797`*^9, 
   3.7169857918841467`*^9, 3.716986152106784*^9, {3.71698680027048*^9, 
   3.7169868231976147`*^9}, {3.716987247343855*^9, 3.7169872613528643`*^9}, 
   3.716987304882861*^9, 3.716987391540799*^9, {3.7169874368867807`*^9, 
   3.716987448708712*^9}, {3.716987513070759*^9, 3.716987532226913*^9}, 
   3.71698765542083*^9, 3.716987885611615*^9, 3.716988035849143*^9, 
   3.716988077377801*^9, 3.7169881854738617`*^9, 3.716988235088767*^9, 
   3.71698833097057*^9, {3.716988403308384*^9, 3.716988414486205*^9}, 
   3.716988492978516*^9, 3.716988556135705*^9, 3.7169886462297153`*^9, 
   3.716988757083852*^9, {3.716988790891511*^9, 3.716988841114587*^9}, 
   3.716989160089765*^9, {3.716989212674081*^9, 3.716989242154252*^9}, 
   3.716989310769409*^9, 3.7169893523893547`*^9, 3.716989476230527*^9, 
   3.7169915015890837`*^9, 3.716991553879979*^9, 3.716991588347467*^9, 
   3.716991696120387*^9, 3.716991738353444*^9, 3.716991854572929*^9, 
   3.71699222370343*^9, 3.716992280169065*^9, 3.71699236331365*^9, 
   3.717242102403734*^9, {3.717242246345793*^9, 3.7172422581858807`*^9}, 
   3.717242520494886*^9, 3.717242749420301*^9, 3.717242787853766*^9, 
   3.717242895252599*^9, 3.717242933627885*^9, 3.717245730573229*^9, 
   3.717245946021656*^9, 3.7172461454665194`*^9, {3.717246322579419*^9, 
   3.717246347404129*^9}, 3.7172465687341413`*^9, 3.7172471643770247`*^9, 
   3.71724791887414*^9, 3.717248261200079*^9, 3.717249280282981*^9, 
   3.7172493249797487`*^9, 3.717595118125654*^9, 3.717595428100442*^9, 
   3.717595771694441*^9, 3.717596643029591*^9, {3.7175969038702087`*^9, 
   3.717596957953629*^9}, 3.717687530475996*^9, 3.717687637676793*^9, 
   3.717687905179497*^9, 3.717688068663262*^9, 3.717688139407646*^9, 
   3.717691326371851*^9, 3.717756864130067*^9, 3.717758699647764*^9, 
   3.71776570249492*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrivalsTimes", " ", "=", " ", 
   RowBox[{"Accumulate", "[", "InterArrivalsTime", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.716984205773682*^9, 3.7169861179005547`*^9}],

Cell["\<\
Acumulas para saber en que tiempo aboslutos estan llegando los paquetes, es \
decir cada valor es el momento en el que llega un paquete\
\>", "Text",
 CellChangeTimes->{{3.716984559630926*^9, 3.7169845714671288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ServTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "mu", "]"}], ",", "muestras"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.716984207636053*^9, 3.7169861164826803`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FifoSchedulling", "[", 
   RowBox[{"arrivals_", ",", "service_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "checkTime"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", "1"}], ";", 
     RowBox[{"checkTime", "=", 
      RowBox[{"arrivals", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"checkTime", ">=", "#"}], ",", 
           RowBox[{"checkTime", "+=", 
            RowBox[{"service", "[", 
             RowBox[{"[", 
              RowBox[{"n", "++"}], "]"}], "]"}]}], ",", 
           RowBox[{"checkTime", "=", 
            RowBox[{"#", "+", 
             RowBox[{"service", "[", 
              RowBox[{"[", 
               RowBox[{"n", "++"}], "]"}], "]"}]}]}]}], "]"}], ")"}], "&"}], 
       ",", "arrivals"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7169850368817263`*^9, 3.716985056306603*^9}}],

Cell["\<\
Aqui se le pasa los tiempos absolutos de llegada y cuanto tiempo tardan en \
servirse. Checktime es cuando termina de servir un paquete n. Entonces \
empieza con n=1, primer paquete, e inicializa al tiempo de llegada del primer \
paquete porque cunado llega el primero esta libre, entonces en el If sale que \
si se cumple y por tanto el siguiente checktime es el checktime actual mas lo \
que tarde en servir. El If compara si cuando el paquete llega se esta libre o \
no, si se esta libre el siguiente momento en el que te quedas libre es el \
tiempo de llegada m\[AAcute]s el tiempo que tardas en servir el paquete; sino \
es el tiempo en el que te has quedado libre (m\[AAcute]s tarde de que el \
paquete llegue) m\[AAcute]s el tiempo que tardes en servirlo. Esto devuelve \
los tiempos en los que se sirven los paquetes\
\>", "Text",
 CellChangeTimes->{{3.716984349969042*^9, 3.716984452231378*^9}, {
   3.716984517810286*^9, 3.7169845474395742`*^9}, 3.716984581615164*^9, {
   3.716984613236692*^9, 3.7169846555353537`*^9}, {3.7169846958409348`*^9, 
   3.716984701824019*^9}, {3.716984734290468*^9, 3.716984840627802*^9}, {
   3.7169849206607103`*^9, 3.716984932360804*^9}, {3.7169850945114107`*^9, 
   3.716985179114246*^9}, {3.716985358814015*^9, 3.7169855610067663`*^9}, {
   3.717597305235734*^9, 3.71759732024896*^9}, {3.717597356902858*^9, 
   3.717597357430312*^9}, 3.717597430599399*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Departu", "=", 
   RowBox[{"FifoSchedulling", "[", 
    RowBox[{"ArrivalsTimes", ",", "ServTime"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.716985027270927*^9, 3.71698612217959*^9, {3.716986797995035*^9, 
   3.716986821023897*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListStepPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ArrivalsTimes", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "5"}], "]"}], "]"}], ",", 
    RowBox[{"Departu", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7169857869629793`*^9, 3.716985789751068*^9}, {
  3.7172422371770267`*^9, 3.717242242354823*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.008770830568312389}, {1.9999999999999778`, 
      0.008770830568312389}, {2., 0.012852879101821592`}, {2.999999999999978, 
      0.012852879101821592`}, {3., 0.03674195398128591}, {3.999999999999978, 
      0.03674195398128591}, {4., 0.04167335822780036}, {4.999999999999978, 
      0.04167335822780036}, {5., 0.0452090362971339}, {6., 
      0.0452090362971339}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.033960727818798817`}, {1.9999999999999778`, 
      0.033960727818798817`}, {2., 0.05023171290103494}, {2.999999999999978, 
      0.05023171290103494}, {3., 0.07293639332976348}, {3.999999999999978, 
      0.07293639332976348}, {4., 0.07649278389242169}, {4.999999999999978, 
      0.07649278389242169}, {5., 0.10896203129117624`}, {6., 
      0.10896203129117624`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6.}, {0, 0.10896203129117624`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7169891601581984`*^9, {3.716989212765177*^9, 3.716989242236266*^9}, 
   3.716989310986856*^9, 3.7169893525438967`*^9, 3.716989476489181*^9, 
   3.7169915016582117`*^9, 3.716991554029312*^9, 3.716991588457144*^9, 
   3.7169916961847773`*^9, 3.716991738462039*^9, 3.716991854633357*^9, 
   3.716992223757316*^9, 3.716992280247447*^9, 3.716992363387711*^9, 
   3.7172421026567802`*^9, {3.717242246446473*^9, 3.717242258253458*^9}, 
   3.7172425206073837`*^9, 3.717242749493544*^9, 3.717242787959879*^9, 
   3.717242895328411*^9, 3.7172429336927347`*^9, 3.717245730648903*^9, 
   3.717245946098319*^9, 3.717246145629587*^9, {3.717246322641449*^9, 
   3.717246347461001*^9}, 3.717246568790105*^9, 3.717247164481473*^9, 
   3.717247918935446*^9, 3.717248261258457*^9, 3.7172492803488693`*^9, 
   3.717249325148869*^9, 3.717595118923074*^9, 3.717595428156721*^9, 
   3.717595771791965*^9, 3.717596643092753*^9, {3.717596903981884*^9, 
   3.717596958066414*^9}, 3.717687530623769*^9, 3.717687637807548*^9, 
   3.717687905314732*^9, 3.7176880687815437`*^9, 3.717688139542799*^9, 
   3.717691326497529*^9, 3.7177568646346407`*^9, 3.7177586998162537`*^9, 
   3.71776570310373*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListStepPlot", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArrivalsTimes", "[", 
       RowBox[{"[", 
        RowBox[{"origin", ";;", 
         RowBox[{"origin", "+", "width"}]}], "]"}], "]"}], ",", 
      RowBox[{"Departu", "[", 
       RowBox[{"[", 
        RowBox[{"origin", ";;", 
         RowBox[{"origin", "+", "width"}]}], "]"}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "1", ",", 
     RowBox[{"1000", "-", "width"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"width", ",", "10", ",", "50", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.717242254502927*^9, 3.717242255158173*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`origin$$ = 1, $CellContext`width$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`origin$$], 1, 
      Dynamic[1000 - $CellContext`width$$], 1}, {
      Hold[$CellContext`width$$], 10, 50, 1}}, Typeset`size$$ = {
    360., {109., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`origin$1782$$ = 
    0, $CellContext`width$1783$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`origin$$ = 1, $CellContext`width$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`origin$$, $CellContext`origin$1782$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$1783$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListStepPlot[{
         Part[$CellContext`ArrivalsTimes, 
          
          Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]], 
         Part[$CellContext`Departu, 
          
          Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]]}], "Specifications" :> {{$CellContext`origin$$, 1, 
         Dynamic[1000 - $CellContext`width$$], 1}, {$CellContext`width$$, 10, 
         50, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {166., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.716989160187405*^9, {3.7169892128618603`*^9, 3.716989242331955*^9}, 
   3.716989311150941*^9, 3.716989352632983*^9, 3.716989476705092*^9, 
   3.7169915017018003`*^9, 3.716991554067951*^9, 3.716991588500001*^9, 
   3.716991696221815*^9, 3.716991738504258*^9, 3.716991854649053*^9, 
   3.7169922237971487`*^9, 3.716992280277726*^9, 3.716992363415771*^9, 
   3.7172421027002697`*^9, {3.717242246476297*^9, 3.717242258279443*^9}, 
   3.71724252065003*^9, 3.717242749578876*^9, 3.717242788046598*^9, 
   3.717242895413303*^9, 3.717242933781468*^9, 3.717245730690031*^9, 
   3.717245946183288*^9, 3.717246145646393*^9, {3.717246322666019*^9, 
   3.7172463474861917`*^9}, 3.717246568814598*^9, 3.717247164583062*^9, 
   3.7172479189591627`*^9, 3.7172482612817297`*^9, 3.7172492803665657`*^9, 
   3.717249325223884*^9, 3.717595118997635*^9, 3.717595428179873*^9, 
   3.7175957718284683`*^9, 3.717596643119739*^9, {3.717596903996901*^9, 
   3.717596958079687*^9}, 3.717687530652717*^9, 3.717687637842484*^9, 
   3.7176879053478117`*^9, 3.71768806879947*^9, 3.717688139586479*^9, 
   3.71769132653476*^9, 3.717756864667342*^9, 3.717758699846263*^9, 
   3.717765703231292*^9}]
}, Open  ]],

Cell["\<\
Aqui ya se podr\[IAcute]a ver cual es el n\[UAcute]mero de usuarios que hay \
en cada instante de tiempo haciendo la resta entre las dos funciones, sin \
embagro, es mucho m\[AAcute]s facil de ver en el siguiente apartado\
\>", "Text",
 CellChangeTimes->{{3.717597458698657*^9, 3.717597519706202*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Punto 4 : calcular el numero de usarios y el cambio que sufren en cada \
instante de tiempo\
\>", "Section",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7175992175420523`*^9, 3.7175992268231688`*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumUsers", "[", 
    RowBox[{"arrivals_", ",", "departures_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "users", ",", "usuarios"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"usuarios", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", 
         RowBox[{"j", "=", "1"}], ";", 
         RowBox[{"users", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"i", "<", 
          RowBox[{"Length", "[", "arrivals", "]"}]}], "&&", 
         RowBox[{"j", "<", 
          RowBox[{"Length", "[", "departures", "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"arrivals", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[LessEqual]", 
            RowBox[{"departures", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"usuarios", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"usuarios", ",", 
               RowBox[{"{", 
                RowBox[{"arrivals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
               RowBox[{"{", "users", "}"}]}], "]"}]}], ";", 
            RowBox[{"users", "++"}], ";", 
            RowBox[{"usuarios", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"usuarios", ",", 
               RowBox[{"{", 
                RowBox[{"arrivals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
               RowBox[{"{", "users", "}"}]}], "]"}]}], ";", 
            RowBox[{"i", "++"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"usuarios", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"usuarios", ",", 
               RowBox[{"{", 
                RowBox[{"departures", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "}"}], ",", 
               RowBox[{"{", "users", "}"}]}], "]"}]}], ";", 
            RowBox[{"users", "--"}], ";", 
            RowBox[{"usuarios", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"usuarios", ",", 
               RowBox[{"{", 
                RowBox[{"departures", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "}"}], ",", 
               RowBox[{"{", "users", "}"}]}], "]"}]}], ";", 
            RowBox[{"j", "++"}], ";"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Partition", "[", 
        RowBox[{"usuarios", ",", "2"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{
  3.716986101721117*^9, {3.716986578800132*^9, 3.716986654316492*^9}, {
   3.7169867400190887`*^9, 3.716986750563664*^9}, {3.716986843578473*^9, 
   3.716986889839007*^9}, {3.716986925711093*^9, 3.716987193192535*^9}, {
   3.716987228720057*^9, 3.7169873022250357`*^9}, {3.7169873860720367`*^9, 
   3.7169873890443983`*^9}, {3.716987432006722*^9, 3.71698743431914*^9}, {
   3.716987489188664*^9, 3.716987490257476*^9}, 3.7169875297361526`*^9, {
   3.716987574915576*^9, 3.716987580044162*^9}, {3.716987700426395*^9, 
   3.716987701662175*^9}, {3.7169889538017807`*^9, 3.716988954290711*^9}, {
   3.7169890031133337`*^9, 3.716989156894669*^9}, 3.716989239587813*^9, {
   3.716989299856583*^9, 3.71698930755443*^9}, {3.7172425899567757`*^9, 
   3.717242621743637*^9}}],

Cell["\<\
Esta funcion lo que hace es a partir de los tiempo de llegada y de salida \
calcular cuantos usuarios hay, recorre los 2 arrays con diferentes indices \
que solo se incrementan al suceder una llegada o una salida y a su vez se \
suma 1 o resta 1 a una variable que representa el numero de usuarios en cada \
momento. Adem\[AAcute]s del numero de usuarios en la lista se devuelve el \
tiempo en el que sucede la llegada o salida para poder as\[IAcute] \
representarlo. \
\>", "Text",
 CellChangeTimes->{{3.717598377631772*^9, 3.717598519789237*^9}, {
  3.717599183299677*^9, 3.717599184046094*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"usuarios", "=", 
   RowBox[{"NumUsers", "[", 
    RowBox[{"ArrivalsTimes", ",", "Departu"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7169891850560093`*^9, 3.7169892046012897`*^9}, 
   3.716989348957137*^9, 3.7169894605529222`*^9, {3.716991777186656*^9, 
   3.716991784821947*^9}, {3.7172427386259203`*^9, 3.717242740647992*^9}, {
   3.717242924134203*^9, 3.717242930497307*^9}, 3.717243466902399*^9, 
   3.7172458111948633`*^9, 3.7172460805431356`*^9, 3.717246307123158*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "usuarios", "]"}]], "Input",
 CellChangeTimes->{{3.716989327610087*^9, 3.7169893292151327`*^9}, 
   3.716989461525221*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJx03HlUD+/7P/DbEiNkaMoLL7xKJSKRLKH7opQ1kSJLq5RsISRCluxLSuqd
kDWyRknW7HuSsmRJlqx1Kyqkfq/Pv7/zfc4/ncc5c87M3HPPdT2vcyoj39lj
/Osyxmx2Mva/n///cfZjXHlwRQT/vy3420e9+u0csx6Y0cG6h0tG+CUBC/7e
YbH/0+y9wIxevQ14ZeN+AFii0vCra/eZHgKWyT3WPq7q7GFgiWa0093zKyUV
mNES72/jbhYgS9SjXX2z9IGngWXad7THr4bbkSXKjV9rtH5mOrBMg6Z1yvyX
jKxQXpMt6V1TzgKr6L+LH9eWvj8PrFBJzDKb83UuAatoyFmNY8D8y8AKjW57
MVpd/wqwiqJHT7xyXEJWU53qGitpOLKG5nwQW2xnIqup/4/lO6sOImuoIKx3
4SSWBawmWf6+SjqJrKGN/9bu6fwNWU1t7UPTXL5dBVbR6inK31v9rgGraZeL
W0Xv68gqatJk53CN43VgNZ3qc2pcyW9kFSUe7v/v37CbwApd2piy+m8RsoqW
vogK2R10C1hNzvxuA5cXyCpaY7fQy8HgNrCaug9+Mu7HcmQVbXl+OvuI6g6w
Qr08vHTnr0aWKT/2Zb/4GGSJyj0HTjDIvQvMqKjnkagH35EFn3J01+82S+8B
M5b251nz0TXIgj/qpPtg8tAHwIzFN9ENuP0TWfCxfi/86nZ7CMzIMsGs4T3T
bGDBHSN9ltbcRGb0z3bkzU/yI2CJCm6c/aR4IMs0sGfe2z/zkBXafHjuQ8eO
OcAqiniaNMbGAVmhP2mbb16YhayigBtTWHkIspr8ThQGfOjyGFhF/qtntQzw
RlZIv2jI1q1ByNrvrXlIcOPryGq6Y7XLPmB/LrCGOob/8muV/QRYTb7BlVvT
PPKANXR1aLTew9PIahoycPup2Kb5wBqaOyQs44UVsjH1T5jcZlW9p8AmdH5Y
/dNDDZHNaEKS2DpS/xmwCSWfN7JUOSMb06zFd2Pq+SCb0KzVHeIsw5HNaGHX
QOOB55DNqXeBammTHGQzGhr83fv2O2RzMn/7LMvn0XNgM5rxpl9ZwpwXwCYU
0fjvBeUgsjFtiH56+eJ9ZA21ej4jfMk7ZGPaEmr/fu7gAmAN5dLK4BZNXgKr
6e1wh/1deyNr6OGII39S+iCr6drX6rxnnsgqcn3m+eLsKmSFJm5Z35+dQFZR
phhcv+maV8AKaYKan+h4EFmm2xf3BXsfeQ2sUODE+pN7P0fW9mudLKN46Q2w
Qv8OTMoexZFlOnan7oxdw5ElmhZk8eHiGmSZVjR64Zm4HVmhv22Dh3xPQpbp
b2mukfF3ZIkm7LdaFK1fCMxo3KHzkk9PZMHDF394NSsQmbEjJeZLHNq9BRb8
zfgTEQW9kBn7sXHqsuR8ZMG9Xc/kbWtWBMzY/H5rXtd4IgueaT9S+XAOmVHQ
qMst0u4gSxTiqtrf7gcyo5udvvZ7r/MOWPAIv4NT+s9CZrTuvGPZpQPIgq84
+S+vUwGyNi88sowbZvIeWPAOw33/PeXIjL329O3mmI4seI+E4Aaju34AZuxV
br534x0fgbV55/2jeYVNioEZNVhh6lETiCyRyZyCnWOnI8t0ammWTfgyZIks
/wzxqF2HzKjtr/4JdtuRJYo3dBpf8wWZUWrGkIfZNz4BCx49K2Vjtx/IjOKO
z/fv2+ozsOA+/xo4ZBgjMzbDbti3SjdkwWvrRib2CkdmzMF6ARuciCz4lapb
Jad7fAFmrHh8oZv+dGTB1V7nd++OQ2bM/4xF7J5u34EF75o87thpL2RGa3ab
V/14iSz4mB/PQrJ+IDOqvrCq4mjjEmCJPOLeljv2QJYp1OpEzCGBLFHf2755
2T+QZZq9Yb8na1UKLFHs2PedpnVFlmnRnWY2j2KQJTreVzfkv53I2n512CLq
Wx6yQnNuDU+w+4SsohmfLBZ9rS+A1bQqp0vTDV2QVbR+kJXjxFHICl27Yd7o
rCuyTJrHHdMUd2SF6r8borc3GFmmIfOKT3kcRFYoJy1nyoGbyCrqentK5oNb
yGoyaa4xf1KMrCGrb6eioz8jG1OHS9/tSvV+AGtoW03lZKPmyGpyvxFc86I1
sorMhuX+TemErJDeiguPl1sjqyg152THlYOR1bSx5e4vGW7IGrpy5maPy17I
xkT5M9eZeyOb0NGrTVqxSGRjqjFqfqHbXmQNdbpbc2b+OWQ1pZ0dFnEeWkNf
raNyEl4gq8mx0uX+5kJkFVldqr3g1bAMWE1xQ86Kks7IKlpTY+B9rA+yQtsS
v2rm70SW6fnTmhWN9yBLdGBgk+urTyHLdN9haTP9i8gKxY7SixnxBlmmK68f
340rR5YoqKKq96AO5cCMrBZ/HxECLbjlXuOI+jbIjP7oNh+xLhpZ8DvS6zWT
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
yIIP/BO7t8MFZMZqLOOexOUiC15kNJ6vf4XMKG9Kj4VL3yJLdGPlF9MLH5Fl
mnTqS45fObJCSQa9hzT5iyzTOWe3bXbVyBIxp8N7E+q2B2aU6T+kvLUOsuAX
XYty2jREZlRm86LmioQstGsVtnSSLjKj0Un19Ns1Q5aouvuc2tWGyDLVW+jR
v3crZInG7ys9bKJG1s4rzRZ4TYCW6PWoZk3a90OWKf/Vv99Kf2SFtrr8WnzU
HllFTSZvmdDJAVmhpXZ5p+yGI6soq53J8U8jkNXUcN2S5euckTXUf1G3wPaj
kI3JLinAKAZaQ8vmeCUsH41sTNkfrH98dUXWkE/Hq7v2j0VWU75vckwrb2QV
pau+uhgEIqvp7L5Dn2gGsobM9/a8vngJsprSrPt3XB2OrCL/Zs36RS5FVlNq
cZ/6VRHIKlJF3ts+YAWyQpndt5e2XIMsU2Wjm1Ym0BJ5jfq0M3ITsky1v6/N
HLMFWaIpDy6llEYjM8rXnVv7cgey4JOLTpkm7kVmpNd24cRzh5AlynQvuxOT
jCzTxNG9a5ZmICs01+nJQ7MLyDIVub6OSYCWaKHrr+iNV5Blul22YWoZtETq
lIxW/a4jM1qun3NDk4csuO90S4tnn5EZu5tStKvhF2TB06ab//72FZmxur9z
eha11gAL3urkhX82bZC187r71fBr7ZAFP2TRYFhKe2RGwUUblusaIQtuU3E7
qJcxMqNEmz3th0NL5O2R9LaXCbJMi3pV2pp1Qtbul5LqS9gqMtdZNWxUF2SF
+pR+DrjQDVmm0exgWZ+eyBLNu5t6Ylt/ZEYrP5j2bG6HLNEJP58ngwYiM0o9
7etuMQxZouRdB79ZDUdmNLCPmGk9ElnwCVKXNSegGQXsXjVKzxVZ8J23Wp4e
CM3o3rtfs/THIgu+r7jD1mEeyIwmPM4yNZ6ALJG19VGbpEnIMmVt9l2j548s
UfOX85JspyLLVMd8jF1KALJEbRN3b9WbgSzTiJjDK9vPRJZILPSxGgYtk+fr
UYHjZiMrdLPrtuwrwcgqOrs4b8O2uchqOja33Kv+PGQNHQhs2/fufGRjWh5l
9KtmCbIJ6TywyvwSjmxGS9c+udMnEtmcypv/16YCujMZVJ2qX7gO2ZzafPhw
oxS6M31JCLr/aSOyObVdYtOqMgrZjHpvC1u5PQbZnHwsL0r2schm9OtFg9N9
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
2uXAJmYjPNb4HFm4g9mA5n3/BGk7mY1oMX119Qq7mE1YOK+dKYLaiBFvOz6x
T2I2IWpZ94Ht9jIboabdrF5qH7MJtafdetyb2ohHI8qF1NrPbEKrrwE5qSnM
RrRvsef96MPMJiz3fVz4/RizLRa2Hra0xDlmO+Qeslrf7DKzLSxtij66XmW2
Q7sK93a3oLZHnyljg9s+YXbA/saWC1KeMtujNGZmGnKY7XA8fNeGebnM9til
04WefMXsgHcXVu1yfsvsiNjDJyKav2N2QM3YXR2eUtvDafFPr+fvme2wcMy6
dePyme2xcNBo66nUDigvRw4v+43ZETGPH+e5/GR2woyg3OA11I5Iul9jSPg/
Zgd8zL55d2kZB2JHHO5buO6LxOyAD38TPR5WZLaHod1w+VNlZjtsOt7j7FKZ
2RZne7Zu6laF2YTXFm+fD6U2ovGk+eUrK8wmDIp7VueaFbMR1/95ecbaMJsw
71lc0wl1mG1xbFVkYO26zCb0ntTrxSNqW7T813LwpHrMdrg6OkfEm5jtUTE6
4s64Bsx2GCM9/pxvz2yLv2cd2sxswmyCflHb48OaMhvxvu6Nd1taMJvg3L3R
hOYtmY3IK9tL7k1twJzBTXtcasOsR5RFb/9iT2YdbPelxDt7Myt4Ufzm4PEu
zDJm9X99eLgvs4Ifg4d9KNuVWYd2f14eKuXHrMffYbatagUwGyDFbqt/jNqI
le1mP/o3iNmE+D/PB8YPYTZifpd6d08PZTZAbH+btWcUsxG9njaJaj2O2YB/
3puPjRnPrMescSFZ5ycx66As+3jSaSqzgufdflzcS61D/euHH0XPZFYwr+Nh
T8NsZhk9drfcnj2XWcGTMaFbj89n1uFon9gHudQKLgya8n38AmYdGvz40WHX
ImY9mrfusKtZGLMBM+x+dn4XzqyHy1L3onWRzDr0uNnyz7ooZgVJf2pXfx3D
rEOJezHtG8YyK7h+w7NtFrUOLud3/H65klmB/strRVvPLGP8h1rF+RuZJUy8
vOtJ6FZmGXsDr2fG7mKWUKL/w7mPkphlHFt4xmfMHmYFwzYWL9u2l1mGU/sl
H8fuY1Ywbci1t6+pZTSZ/2aHx35mBYkO+wP8DjDLeFIn7tCOFGYJ5jgU3/MQ
s4w1jvVjsg4zS/h5tbxLyBFmgUv32+fGH2PW1JWlRjV9Ty0Q3XN71MdTzJo6
/3Ktcc/OMAtMrnixxOmzzJp6vMyzb+svMgtc/X0u1PEys4T7V6bX9KaW4dD9
2KnX1BIm9ateNPM6s8DlSYGb19xkltDc0mDznVpGW4/6Fe/cYpYw2vFThOEu
s4zvjnsylz1gVtBiabfl5R8zy2gzb/mFFtQKZh25FbGcWoekh9O7z3vCrMde
m5DfsdQ6/P088XhWFrO53gVurX30ObOMc7/s3lV+zazgrUU5/eG3zDrk/3Od
U+Yds4IBuceCC6llHOx1oXZOHrOCkfsvdnT/xKzD4S2/8vdR6zHVs0toiMas
Q86H4XGRX5gVWG8aJI3+wSzjv75iycO/zOZ6P/JiSto/Zhmem8rJedQSdnok
1PkjGhPL+GwVeHtACWYJhX2KGw8oySywuNfQZy8kZk2VH+n3LirPLERlP8sW
QZWYNfVDx5XLYyszC3FiSsayKw2YNTXMYmqupR2zEFdD6s+EA7OmXm61R33W
ilmI0nKVj0s7MWtqCe8dvet2ZhZo8Cr9aN8uzJo6odOHNquphTjg3u7R4W7M
mmpjsyk5cyCzQKtGgRGdgpg19UH+wIWpY5kFqgTn/xs0jllTb7yJf/twMrNA
vUt1m1WeySyhu2dCh24LmWWUOFEu8244s4LGrZuXqxTJrMP+Lc8uOlArEI2k
6P+imWX4dJtTYfRSZgkLa/Sc8COWWUDJXbHLO45ZU5vXvty0I7WAPOtsr34r
mSUcOhJn/SSeWeCm/VQc2MisqS2O7jJN3MwsRHFYdf/5W5k1NcYuqHJEIrNA
5Fr7Pgm7mCW4/rey221qGUmeh2932cOs4P2FLakBKcwyguPmhOccY1bQZG/U
sJjjzDr0G3Pxk0hl1sPHtLh2UhqzuV8/iJn5gNqc1zrsmjTvLLMOb4Zv8cqm
1sPC6/0kz/PMBpRaemZ65AVmI25VGawPuMJswIA2Lr/irzIbse5Eh6NvbjKb
MKuveDXzFrMRc85NHzX3NrMJ5VrebHDtLrMR7dL9R1e8x2xCr+aX3ix/xmw0
59XbCX2ymQ2Y3iKgyoAcZiMGRCa+C3rJbEJI1Z83st8w26LcrPP3O71nNsGl
zejKo6lt8bzj7VZTqO2QNvDY8G8fmW0xrMKAX5U+MZvw7HrtbWO/Mtsi3EJ3
8vs3Zjt0SwpKrfmT2R69q40IvU3tgIxS8ctcfzHbo9/mSv1bFTHb4eAIjzkz
SjkS26Lt2U1rppZmtoPVPaVgl8xsj9KilmWTKswOSG75NGZxdWZ77B77KCKp
BrMdPg284P+fLbM9Ti7auetGC2YHHDnfxrKyymyP0EE3F7iC2QELB6RuGNGO
2RGd9JcXDO7A7IQekSEnH3VhdsThN56ib1dmB+R9uuxfshuzI64vqVFo24PZ
AS83PewR24vZEdltTC1a9mF2QKB+wfSe/sz2qNh+WviF/sx2KDj8dWnOMGZ7
+Dd+FnIzmNkOi3Jv3nCazGyL7POHm+ybxmzCtWe/bM/MZjbCZKWkxs9hNiCk
i9+lFguZ9VjphaUJocwGJC6o4XKM2ogZI09XmhzGbEDwy5qOPyOZ9agidTzb
cymzAWEr550eQW3Et54O/XRxzCYsKPVOFFHbIjigYnDrlcx22B/Qw3EYtT3y
Z2dmzKW2Q+i2MbN/xDPb42btzR2OrWK2w4Ct61q1XctsiyHDd7tGUZtwe2mP
CjvWMxuRpPx9n7iR2QBRWO9E9U3MRmQ9mzqg7jZmExb3bdG1yw5mW7R4VOLi
a2oTvJMLrLVdzEZ82eJsWXovswED66WGt0xhNqJE9dgbH48yG+DpF/7jwzFm
PV5Uud9v7ClmHSJM+x36nWVW8H3Y0M0fLjDL6Gdp0f7PZWYFc20e7+t8jVmH
VUvvpMy8yayg9NW7u9dRm+fd97stKt1h1mNsT/uM8AxmHQIOHS3m1qPsk4xb
yQ+YdQhtOLDSn8fMekwbuWBIZjazDsE+7Upl5jAreNF+hXXtl8w6NAz4frrf
W2YFxcmNqn75wCwjpk6z3h0+Miswnjrdsw+1Dgmztqe+y2NWoLQO2NM5n1nG
EEfPfe+/MisYNbJ/QYtCZh1G6HKq7vnJrOBrfmK52b+ZzXm928kKKdQKyr9u
7d7+D7MO+6a1u7DuH7Mek4+f6WFdzGxAw2NrJudS6xHWeflUqxJNiHW4OyL3
8SFqPTYfuFJGKsWsw+jbYcoTidm8X18i7s2xZJYxqVOjY6+oFcjZsz48KMcs
o3LM8RIvyjNLCM7d+ya1ArOMMN0W62JqBT3b7UoeVIlZRtd+LyuNqsIsoeYW
HMqzYhb4fGmUXwG1BM9Eq3XuNZllFK809S1rYJbw7OC99/H1mAXOrchZ/s2W
WUKnMEPtqEbMAuluH2PHOTBr6vU1y7Y4OjILvLxYWbeDWlMTr7ac98qZWUB2
vDFxvSuzpta0thpwxY1Z4FVc6T8VWjJravSeaef6Ugsx965DfmE7Zk1Ny017
drwTs0CYr3eF2V2YNXWkbxv/X12ZBfwXTJpj0YNZUy8t8Cxu0ZdZiPfja0TN
7M+sqT1btHqXOoBZiLCmlhcbjWDW1PYh20t9ohai3Fv/wc4TmTV1cuT5VWIS
sxB3PxZtezWDWVM/b7d/2XUOs4AUWfSRW1OPeWcqgdRCrL9VmFxzPrOmuuzx
yu5KLYRXcOtqAaHMmpoS3Tx1BrVAY+jDK0cya+qslGafBlALUevmI6VvLLOm
Zr3yeFVILXBmUVL/2suZNRVbc443jGcW2OTQv/HcNcwS6mQ++u/9emYZ+9P6
r/fZwKwgbMvTfl4bmWUMalzmhrqZWULLuQVzjyUyCzgVt4ivsp3ZXC/Cx6fW
2ccsRJcea0KHHGTW1KfXHh3yPcwsxN8pH8ZNPMqsqXkJf7/NoBbic8P3nl+o
NTUzo+uAjGPMQjiUG6o5XWA235c9WafvUAvxYO2BjyHXmDXV73Jdm4vXmYVo
8eJLkrjFrKn36jyd1uI2s0DBtIKnV+8wS7g4ZczRA/eZBfR+PybdpNbUurcr
B/73kFmIoNc5zX6/Y9bUQ0Edfa+9ZxZi/9wDVm1+Mmtqy+XP7tv/Yxaw66P2
nE4tIWZ+mYhUavO8cOe5s5NwItbU2hOG/863YBaiaWz4sHVlmDX1YERwow9l
mQXafB1Rb4nErKn10r+71LVkFmLrm9UpXanN/SL6c5nH1EKMjksveFCRWVPl
byvf16jMLMSgikl9uyvMmvrJvWqvMdWZBWonxNyVazCb64VNg7FptZgFxr26
N/GaDbMEmy3LtOp1mAXax/lVCjcwa2rhjX95l6iFaFfqwd7kusya6rtvTku/
esxCLFni1bR/I2ZNbfow39vgwGy+bzcnvbdqzKypm34Wzw+gFqJfyn9nhSOz
pvZt3bgopQmzEI1CtLClrsya2jn+Wy3fpswCBw/197nTjFlCM9MwrXoLZvO8
YP3svxBqCYUuudYrWjILdD4T7uPXilnCIa/N89p7MAsc+Fy51h6V2dwvCrPP
1AezEAEH+ns0asusqXtO+5fcQy3E70ktlp7uyqypB+KmV63Wndncr6xc2+zv
wWyed0doHaVezAKzv0y/3NOPWVMXPxoztkl/ZiE6p/ca8ptaUy0urnNuG8gs
sG5JcPth1BK6Jn2a6DeIWYbl+6TH1oOZJfy2XlK2wVBmgeiW27e5UkvYezP+
ZevhzDKWxD1akEotweFUiQmXqc37nbFrYcMRzBJGRkQM9KUW2D+4wZNT1BKe
tz+7rvZIZoGvAxKs5dHMmrpwQT3vmeOYBULrPclOo5YQNcTjy+zxzOZ6EdB9
1bsJzBImfYrLSQ5mFrj4K+Jsv8nMmnp8ZZw0hVqg2djHt89NYTavryMO+E9j
FmLW9wblWkxn1tS27SZe7zmDWSDp793PgbOZNXX5yHJd51ALTEusnt97DrOm
VonovaPBPGaBJ+tTXp1fwCxh6+t+84MWMgtY7anktyaUWVPtRh3od5haIKzh
CW/DImYJp7YE/XpCLUNbkJtzJIxZQqcSb9JOUcsoLLn32+TFzAoi5OmB+5cw
yzi4v/nDdGoJbnc3VSugFnCQzhSND2c2543+pYJSI5gFqh7yWPeQWsKIxSPf
l45kliFXKXq/LYpZQp+tccP8YpgFEv5V/VIjlllTvzQe39qeWmD66fn9msUx
/+//HnoFlV7GLMS0gKulS8Qza2rPrV9mZlMLMT9vYsCZ1cyaeuRk1TnTEpgF
YvqE663WMGtqQMF2y+rU5rw2Zfbnu9TmeTt02tKHa5kFTnRopK++nlnCeq/t
qfM2MgssH+oU/n0Ts4S88i+Dq29mFrCe6lnPZwuzprZq9/Bu2a3MAkOX5zXU
b2PW1JObJw1ttJNZiLCE9OzIvcyaapVd70KvfcwCi6IvXHhCral30yc0b5/C
LGDaPvhY1EFmTb1S6+mciYeZBfLmjd/b7RizhFch3f6epBYIkec2LHuCWVO3
tZu3cy61EM13pybbnWY279eC/JLLqYUwSU1H9TjDrKlurYvX/jvPLNBupseB
kpeZNXVnz1OzQq4wC+HwavKK19eYNfV731SbtOvM5rwaVGvDNWpNjX845WuZ
m8wC+2KGlI+5xayppbIjf0+8yyzEqukLSuY/YtbUagc2Cd0TZoHvud1u7spk
1lR39x6Zj6iFCKxVcc/4Z8yaOrXsXd2CLGaB1K4vtxZRS6iQeHHKzmxmgVMr
Ps64mcMs4UXKj2btcpllbG705FGfF8wKDK6l10qvmXWQh+h6R1PrsSHiZzze
MOtQZdKR0ABqPRp5WHxe+55Zh6fZAS0KqfUoWZzj0OUTsw42C4/GjfrCrMew
/CWhV6l1SF69/fPmr8x6fPmbnNDjG7MB9jN7eQZ9ZzZijxy98SK1CbFyL5dW
v5mNKFtt59a+/5gN2Bxa7fqAImYjnnrl6HdQG3DB3fuVi3AmNmL8fw1aNac2
YYq2p71GbYva818EGS2Y7fBkWJWnMaWZbdG74sm5vS2Z7eBz51TQ8fLMtij+
b8f8UzKzCe+C5n3ZW5XZFkbknEuoxmyHCwPLPvmpMNsj6NGE6blWzA7oUiHV
YFmd2RFPNq4f+rYGs/k9Ft6t7qBjdsS8PbNqd6nJ7ATrwr9fDbWYnbH70uDY
dtbMLuhv+IRZNszOMJUqTImuw+yETbVK1LlD7Yy4r2EjCgzMTvjVoqOt3sjs
jGaN97v1o3bB77qjJj+qx+yM+VHfJ/uYmF1wqFKiNpzaFXlpLq9PUrvg+fSE
Z8dtmV0x39+py8AGzG7o7blCtWnI3BROBXVmN3didoP9KO/+wc7MrthQ8Y/V
Nmo3TDn0w0d2ZW6KWobg0sOp3ZDewd0y3425KSKa+t952JS5GQ7nrx67qjlz
Uxietw4Ld2duhu6PZ01ZRt0Urjfdqx+mdkNNmzXBFVswu+Lu3W2LL1K7QNoe
olTzYHZGz4yCKL/WzE6w/FA2f20bZkdET9yW+4baCQUh1Tp28GR2RHKz1ISh
bZmd8LHnA8+D3syO0IJKOPVpx+yAWMdvdyp2ZHZEZy8749tOzE6oe6H0jntd
mR0x03JZzfq9mJ0wosfp/X2onSFV2fKlQW9mF+y/F7ysCbUz7tuo89GH2QVL
X8daZ1C74rXF+yUT+zK7Yeveh83eUrvi8MiqIy36Mbsg7/ridoYBzK64ElOr
/nRqF0zJXLKg2yBmZ1jVqn87htoJNnN9e62idobd5dCVE4cwO2Hk6zXzpgxl
dkZ907TqPsOYXbDmyMiQEGpnjC5XcOUjtQtGOouBZYczu8LqZm27O9QuWHeh
q7XHSGZXDHPr69CB2gWPj9WtkDqK2RnRfaZsXhjE7IJjX2bWzaB2hsv3pes7
j2d2wYIK1372DGZ2xqrZ0+fGULtg9N074WFTmJ0RvOVxzT0hzE5w2TTukDyd
2RGmjsE9B89kdsKiLeVPjKB2xPF/78ZMmc3sgPZffZ5tnsPsiDMj1899Qu2E
7RbbbN/NY3ZGjd5ldxQvYHZC//5Xa/8KZXbG/us7rb0WMZvntR+3ay6mdsa2
AyUP9wtndkHd/i0DKkcwO6NTH/3REdQuOHXwQWxBDLP5vpXMrFEzltkFBbMX
zN1C7YyzY86884ljdkLUjtUj3ZYxO+LAVW3GaGoHzB2+d/c1akf817Ogx64V
zA44M66rV8RKZns4Bx4cE0lth5NR7q3ermK2xdA+O2a6rGe2Q8Mrb11PbmS2
RfC4nX/7bWY2oX7H72MttjDb4g4qjvTYzmzCpw8rX/rvYLZFhZ6G7P1JzCZ8
Kfnjzl1qW4QUvU9cmMxsB7Fud67Yy2wLj2WDp4+ktsOdRemdnlHbw3PWEm3F
fmYH/B7xd0qpY8z26FPr+oBJJ5ntsLRNk30V05jtsTGjRvuLp5jtMM/vSfCg
08y2mJXjMsfiDLMJO28dqmlDbQuLcV/yZlHbIXPq56kNLjLbw7h3ZMsb1A7Y
7Ol8NesSsyM+/RuwyvcKsxPyOkwKvX+V2REfhjTpPvY6sxNu+r2PC6F2hn54
ZYsF1E6wmJNSq9MNZke4j4uaf/smswOa1BK2hlvMjnAzjLx58DazOe+nyfGb
M5id8Ttat3DBA2YXdJxi0aDuQ2ZX/Hn5pHcxtRtKde5kW/SU2RXeFROClGfM
LphW8d08P2pnWIY3HbY/m9kJHezKlnTOYXZE1tOEVzVeMDtgcoKx0YjXzI4I
Otjg+O03zE74uy7XPSSP2RGlN/6+MyCf2QmNyj+Yk/+Z2RGeeePHzCxgdsLj
oOZDan1nNuelgI4V3/5gdkC3TiMm3PvJbA/RtX3hjF/Mdpjx7tfrjdT2+H57
Wv6Y38x2GNZ9/eOV1La42L/mzE1/mE2oPVPcP0dtxLWIyUv6/GM2YOTPOcFX
ipn16N0ldPEl87n8f1uHKd9Or51swazA88AyXYXSzDo0H3wxI4Jaga3d+YU3
qHXo+DC7Sc0yzHrMWtBt6HlqHdIs2yYHlWXWo0KXwG3NJWYDBj58nutqyayH
e4MN1tvLMesQ4Xfi9E9qBXnvdkXWL8+sgyGkzd3TlZgVWN+RytaUmWWkRJWo
W1SVWcKJnH7Va1oxC/To2eRfHrWEStsqve9Zk1mgalKLEZv0zJr6ZHVvi6a1
mQVE84nD86g11de6Q0gFG2Yhbv1Ms/Gsw6ypE8Nq3QqxZRZi1hhH98FNmDX1
aVETjyxqgbVJhYUXnZg19fXD2dFlnJmFGHSww/tlLsya6lHrRvM8aoG4DWdL
TXJlluDs67PG2o1ZxuUzM/YMbMZsPi/ppe5HUgs8PVWu7fTmzBLuvXyTU9qd
WWBo3JKBAS2YNXVQ/jMXtSWzEBvuzAi4Qq2p94wOec+ohfgXUN4/ypNZU437
rTwqezMLsTDi42XFh1lTfVZGbhlGLeAXkPsnmlrCzgEtj9RoxyzD97Jr5ZMd
mBW0/Tc3pqgjsw6e7eMmLe/ErKC989vEK9Qyzpa0Pb2iM7OCbsMvfGnYhVnG
8eKEkt2oJVROihrxjFrg7cOGaOjLrKkn7y7/Urors0Bfh6LWDaklLLtoP9C1
O7OMFxXqLzxNLaHX2CMf1/VgFvB4tz07qzezhL5/2was9mMW2DUhP6y6P7Om
dp0bf8uLWuBSYC3/r9QSxg4407B1ALNAhlXC4IRAZk2d9O/C/t/UAie7lem1
cjCzBJsS16RKo5llFBv2vW0+llmBTeaL4PLjmGWEPk6dMoVaQb+7uzc3msgs
40LGdrcn1Aq6N8xqHBfMrEOrGYkVp01h1sMuZUzjKGoDEgoO7bxMrcfnl+M2
v5zKrEPt+fmXfEOYFZSu9L3rGmrzeue1blVmMOuxJMzn0tlZzDoEvjvt9oBa
j8OXuyjKHGYd3B7qHu6k1mNhyq5+r6l1WFo3zevIfGYFoQ5efysuYNbhpMfu
wAvUCv7em+lsGc4sIyAjKahsJLOELruXVq0fxSzj0u4pfrExzBKeH6m70HIF
s4ymLXwKfsQzSwgNOB05ZhWzjDVdH+ZMTWCW8P3Er3mXqAXcSgXnNVvDLGFm
wtKzA9cyy3jZZ1WS1zpmCaml9pyLXM8so6dvot0/agUtx5WfUHUDsw69d9Qc
W5dajzWbS951pTZg5tRb95pvZDYit1txx6BNzCbc+vJidQq1EZPXxjwes4XZ
hMPHXRYnbWc2YsL6LR4PdzMbMO/rj8VXk5iNyKmf3/jjfmYDhgb97njgALMR
N7dU6HeJ2oB3U9eFzUxh1mPr1UoL1YPMOuwZu3bckCPMCg52j2i9/iizjCod
7a8cpJZg9bj5z9rHmAWCG0y4ufQ4s6bG/IhqViGV2fzE15zbuFFr6oyPDz81
PsMs0Lv4bH+/c8wSvi7stdn6ArNAG5/jE4ZeZNbUHqcsjpe6zCyQ12KD4kot
wXJv2cJ91DIeNUgu2n6dWcKPpT9GD7/NLGOSZ+HXBneZJdRN8S3/mlrgfNnV
Z/MfMmtq7be3HhgfMwuYag7pMItaQlJk+ZhFmczmeSmoL2ZlMWtqcrmyJbtl
Mwv8XdGgZO0cZk09kbyopfNzZoGtjUOdUqk11TnW8enQXGaB6avT/lvymlnC
gsTB//2mllExrWvXKm+YFdxKSfk65QOzjNi7i89solZw3v3R4ap5zDIy694Q
w/OZJWxzP+4dQy0wMc1LO/+JWVOTfLufb/OZWQibkilRuq/MmtpGMW29Qm2+
76nDU24XMGtq/oWQfneoBe5/nLkx9C+zppZpXq3jk2Jmgc63UktaC1diCWm3
DxyMo5bxvv7becNKMEvI/hQ9t11JZgHfp90HeJRi1tTJv24Yh5dmNu9XHd2I
RGoJFl7GZ05lmQUicSzhRwVmCasfVymbV4lZxu/Km9tnVGZWUKr26lJOVZhl
DDvUeMz2qswSZtes+3ZkDWaBKWmP3MfXZNbUyiNm/RdHLUTnz8+7NLZm1tS/
rzdU70QtxJ3GRV17GJk19WvdFp2W1mMWwJ/PVRbXZ9bUD3FfbHKoBVKMrQdc
bMisqZ0W/7dQa8QscPPh6q1LnJklLBSZG5e6Mst4mD+oZmorZgkXfy4JON2a
WeCfuvCubRtmCUuPZL06Qy2Q3nyw6wdq87xSs1fKYJVZYOpTq6wYagmTtMR9
u8Eso9wyj7N1vZgV7PQ52bS4LbMO55JSF/X0ZlbQefGtk6t8mGW8eeX87yK1
+ftuuWN63Y5ZYLnX44ON2zNLmN75uM2eLswCx4tMZ7b4MktoezJnVEp3Zhnh
2Qmv0nswK6hZ1PXamV7MMr4evj32LrWCEaPaHXbpwyzjec771KXUChbWaNR/
L7UOzbwmdWrkx6zHRN/lf0L7Mhtwr1Fa2ktqI75Z1a9eEMBsQp9tZTr+F8hs
C395Z98BA5hNqLivgnW7QcxGHLW4fX7eYGYDFqzW+3YcwqzHgBaBDdOpddiW
0Mr97nBmPcJvOKyZNoJZh1OfPmzsOIpZj7bjRiZ3HM2sw5gyn452p1bQvM7L
wLHUMtJXNx+9kNqcV1zCsh2CmGXUu93PJZJawZjuq28uGscsYz6ORBdTSxip
c+uZMoFZQDnzYuzgicwSxnidK9d2MrOAV9z+iqWnMUuYsiTHcQe1jO0fvrSq
NJ1Zweev/b9eoZaRWhDu4DebWUHB+7lhE6hl5CxInj+dWsHE/ZL7kjnMOryZ
91TOmcusoEZgxK4u85hlzOn/6cMHagmVCw54NpjPLPAqrVL0F2pzXqx04Pvb
hcwyLoR03XsylFlCTs2ZbdMXMZvPSztT+i9qTX3aLTPQdwmzEOrx030HhjNr
6uzj8V9GUgvx9fDVHXMjmM3zfsJ0JZlaiMfdLRv1i2TW1OMDonp6RTGbK+LF
mhabqDX14aGi0CvUQlSs3sDmZTSzpsZWN54NX8os4NAqy/bEMmbzvJOQ2bHf
CmZzxV85eE/mamZNNYWJrLZrmIWYPjnwvvNaZk09W3bCvdEbmQXm7/mz4DS1
hOrh22e+38ws0OrgVe/NW5k1dUKJD4V/tjELvEmMtNq7k1nC79PPdIVJzDKy
26Pq0GRmBfvqRa6dRq1D7unBPfZRK3i03f/wwz3M5np3Ntha2sss4bWxYbfG
+5llnIl6mdOPWkHmxN9uZ6hlXA6YGfuJWsH8Ssao8IPMMvzjhj9KOswswb1r
Vu2JR5llSEcSjg88zixhTkm/A69PMMvQBez4IJ1klrD/1o+ML9Qy5MJD513T
mCWcfGaRMpVaRokrQ+XRp5gVlNgwK2sitYw6jRS/k9QSflnKrunUArbbelm3
P80soTDo4sG56cwCH4csL5VFLSF64cvUg+eZZdiU7F+52mVmCU5Huh10vsIs
Y3Orhr43qBV08xl0NOAqsw7RfaTcudeYFTg3/fnc4zqzjCp7gj6vucFszsur
fI6euMks0GB/qtVFagnNAm6kFVILLFmxoZfxFrOm1tteebUTtcBrw58yq6k1
9aO745IMaoGl3/6scLvHLMHFakdEN2qBdq0mjJr3gFnCgMS+f05Ty+j9b3bR
0YfMCgZFrP7+/imzjIQ+1da9zmRWsCXIseLELGYdHlbz96+Qw6xHyTsl8so9
ZzZgdtGMj1m5zHo8zsuwa/SCWYfedbvN9qJW0LDKhzrTXzPLyB2a/jT7I7MC
Q6WMUdXymc39Rvvh8eQzs4QTM2zm/KUWMOrsfpTXmCVMSnhfyo9axspuctF0
agUvd8Tl7C1g1iE9cEZxr2/MCvKtq0ZN+smsQ2GtlL6VfjMrSHl93Gn5H2YZ
H0NKNzlMLcHyxyEL6S+zwKDv36u5UkvYsSAy724JN2KBM0nFQ5ZYMEu4+NzC
bX4pZhl24woyF1ErWLR32dknpZllxD4YmdKvDLOCujGN0zdKzOZ6/bnLarUc
s4Jv6WJVswrM5rzpkpS3mVrBSbdRXeVKzDLWinZxo6kV3M6qP7ROZWYZk03L
TRYys4K1BtfZw6jN/T7gX2tRlVnCjPdHPd9WYzbPO/ZJDZ8qzBK6+/b8eLcG
s4xfieOHPNcxKxjau9GL6JrMMvpuben9kFpBmXLPl0bVYpaxP8mi8RFqBQf3
FW2vYMNsXh+iq1m3DrOE0GrX/GsbmGU8TzqSlFyX2fx5h5+LBkZmGe6Wra9/
ozbPSyv61mxgYhb42Xnp8Ij6zOa8Vrg019qWWYhqsdFV0xoxa+qIIrlVY0dm
gdHFNxatacqsqc/KDpss3JkFcotK99W3ZNbUkr1bRNu1YhbomeLntsCDWVMT
y9a4/YhaiKXNcrc9asOsqfd+pTT4pzILUVw3/vPwDsyauvJf3OHqHZmFWHPL
EPS7K7M5r4/6vbRLD2aBSu994vJ6MmtqnMW6wJq9mc371TZzaB61pk5LWTO2
2I9ZIOy/zAMZfZkljHRenr2jH7OMayWtjY39mSU4Rk6120ctcGBQ74wf1Jo6
C5UdSgcyCzF4/4d6fag1tblv51rHBjALUXBvQIuNI5g1dceVQDuLUcxCGMfs
9ao2lllTr3TJ7/pjHLPAhGpv530fzyxhTOLesFITmGWk997/pW0ws4RzY9KU
kVOZZUQsdulzglqBR5KPdakQZhnWwb7PU6gltPCdVKKQWobDnliP1GnMEq6O
2lUjfTqzjLDzlZ1Gz2CW8D3d8/J/s5kFagxqtLHCHGZNrb7RP/8WtcAh7yeO
0lxmTW1R7YhL1DxmAd9RK3PXU5vPe0ZErUHzmQW23nToFE6tqRcf/NyXQC3w
9l1nteUCZk2d/Ma+nsNCZoGCZosXPgljlnCvTfY3nyXMMqKevW0fHMlszpsl
Ww/TRzGb5624UiPbxDIrmBuYFb2dWsbLr0pwUhyzhJgNs25+pRb4VL99+Ktl
zJpqdafqHMNyZiFW9F05azK1puZ8t8y5QC1E1sxRN4auYjavP9Iya/RqZoGA
zzt/bFrPLOFbtTc3Vm5gFojfVqr2D2oJ/j8sL+RsZJYRVG7kms2bmM3v6/Pb
bQc3M+vQ5kD45TNbmBXUmTd18YetzDrkdGy1Lmgbsx61SifM77Cd2QCbmPyJ
1XcwG1Fh8qZ5H3YyG1CrSvH2fbuZjUh/mngnI4nZgG2vLi57ksxsRERt183K
HmYDlp509TLtY9ajfqxq50xtQNjc46/+UBvh8cLrTaf9zAYkiU+XjlHr0e3i
50ahKcw6uJeoEr+eWg9YbJ4WcpBZh1eTNyXmUCu4/qhcevEhZhkuxe5Drhxh
VlDYI7ryy2PMMr6PKdOrwXFmBa0Hnb748ySzjMx2TXL9U5klVJ32+19xGrPA
uEVus0JPM2tq0txlfjjDLODh4qWcpdbU+tYd2z8+zyzw6/h1/2xqTY3MqrTD
4SKzEBnTXtqMoNbUWytnI41aIO5SfR+NWsK1B5XF+EvMMry73v259zKzguPZ
jg+zrjDL8LTw93W4yqygzzbD6qHXmGUoIyoe/nudWcGNR0V7824w6/A84NrV
vjeZ9Uge4fNpCrUBj67OHul2i9kI5+4vsgbeZzag1fKOHssfMBthsvB/8fUh
swFdS/+o+OYRsx7zJs1J9nnKbECe0XD7WiazEX1y93/u/4zZgLYo6dcli9mI
np0c1+/KZjYhNMjh7bUcZltk1glp5PqC2YQLR/4tCac2YuumG4imNqFa15WZ
iS+ZjajdqmBttVfMJpSxmnEth9oWb5wSes1/y2yHtP+ypoR9YraFYdLw17+/
MNvBY7KhcPV3ZluMjN3R4cIPZjvcbjOwSXIhsy18tgZl5f1itkPM7s/VXvxm
tsWCXPdmzYqYTYi5/vT6KGpbeIb1qBxYoimxHTpeDhs524LZFn99+9dqX5LZ
Du1rD45bVprZHt6nvrfTyjDbYfr69+MqWTLbIm3irS2iHLMJi0tNmRdfgdkW
2lZhWVSJ2QSDKcL7msxsRKx3u9MnFWYD0g17vjWowWyuN15TIirqmA04m7Kz
uYHaiNRt3WYFUxswrlPM5ZM1mfVwXHh9ZfvazAbMnlOibAG1Hlv2fJ/arQ6z
Di6+5Ya/NzLrkbb05qcwE7MOvpe9es6sz6zgkV03i1v2zDrYV+lZs2pjZgUZ
G9KujKeW4bG66sXmjswKfv/67L2tCbMOg7PGrHhNrUelj7sqfmjGbO43IzcG
zGrObETMz/SUCHdmEz5vfZSfQm1ERvq1Kes8mA04UNGtaFBbZiPeVE87Ax9m
EwYsCyjMobbF6HyHWWM7MJvg8ajV7MXUtvBwfFs7riOzCX2KvLtX6sRsi8Ql
obecqe1g5e/d8xa1ud5c/dTnsi+zCQ1t3FtZdWU2YuqM/mW+9WA2YbyVXe+b
vZiN6Pvz6+rQPswmrJCsXOv4MRtx+9veEU37Mhuwb3ZWiRB/ZiOOHF0Wu6U/
swk7X0x58IXaFg/Cjs2oHcBsh/eWx/ISqe2x69Z3rWQgsx2C+7Y9soXaFh8t
2k0vP5DZBKwe1LwqtS2Si/ZZDKc24Y/H2aolBzEbceVr95ppQ5gN8Nywse6X
ocx6dPodtrfuMGYdvlrU9f+PWo96p+wvJ1Eb0MbnqudjaiN6JRx9UWskswFe
z07F9B3NbETxh633O45lNuCk8/6rHccx65GeWu34aGpzv73YNHfmBGY95pS6
1+41tQ4vxw9e7T+RWYF79umH2dQ6PPXc5uYZzKxgjfWI05GTmHWoG1umhuVk
Zj3m9x26rt4UZh26X73W5dNUZgX/gl1el5jOrEPkBpNRncGsoPD27mHyTGYd
Ot/wnXOBWo9a677YLp3DrEP0CSulUxizOW+G35ZmUstoY5P4xWkxs4QtDS0/
fwhnFuh0fUF65QhmCbNP+Se2jmSW8dmyzTybKGYJP6+UvHckmlngaE+paEkM
s6buf/OumXsssxDJzh9a96DW1Ip6+4Tpy5iFSD159sqaFcya2qy8RdPz1EKs
3O+sfKLW1EtRzc82XcksUG50Ujsfak0V0+YVv6cWoijSWCVuFbOmRjTKKJm9
hlmg2oZ7Y0uuZdbU9of+PUzfwCxEzu7xix9uYtZUmwiL1r6bmQWcmsyPOb6F
WVNfTksfWi2RWYjOi3ZWHZLMrKm3Kp7zP7uHWYhOBUX2s/Yxa2rmje77Su9n
FqLkg6wc40FmTf1Y+oZ7g2PMQniFtVqrHGfW1JRBP0qcSmUWYnK+ZamZp5g1
9WpUwdEbp5nNHb3q0+gu55g1NWTb3thL6cwCJ5s179PwMvP//q/5+Q6bK8xC
pM2r/W71DWZNrdy6ZXbvm8wCK6NPD91KLcHmyPw/3AJp1ilbE24xa+qitIzh
xXeZzc/757xzq/vMEnSmNqadD5gFcvcuqmT/kFnCodfX24x6xCxjXZM25x9S
S2h6PvOg32NmGdv3fGpTlMWsYN5Zf7su2cwyjiSVS+iWw6zgmc5qfsNcZhm9
+v+JvE4tYfmvuOOHXzILxObsqe/9ilnCj9737sZQy1gVeEw6TC2hwYEl/lZv
mGVEV8oOGfWOWcGYUynnCt4zm+fVPmOqzPrArEf90Y/2ZXxkNmBhnSVt++cx
GxFVbtKsZ9QGjDrYrvPXfGYjHv/6eezxF2YT3g3fFrKggNkW396U3tD0G7Md
KjX8uaPhd2Z7hKwpHW/9k9kOXXtt/jb1N7MtXja71enZH2Y7pEze3c/nL7Mt
rj5KKZxPbYd5rf2+dS1itsfk76ealBHNiB3QePu4iCESsyPGfPw88k85Zifz
vOWy4lN5Zkf0d26+r09lZifMTZx6LE9hdsboRf521a2YnbC4+9LYqdSOGOxb
8ffL6sxO+FC97jL7GszOOD1pbJlKOmbz8zaVIuP0zI6ITX7/fFttZidEzQh6
UUDtiLKjMto0rsPshFPVcl9vpHbEG69vWb+oHdDG0252roHZET3v/7W5X5fZ
AX7zfkVuNTI74vrEx1WzqZ2w4PTlNxNMzI7wKfzU6Rm1A7ovuXivUX1me7y+
d+BshB2zA7pMvlbwlNoRlzqtKze9IbMTxGznQYmNmR3hsu3v9b6OzA6ovtN3
8KgmzI4YV/Lvjw9OzE6QM31qSM7Mzjj+05RjS+2CcndF8GpqV3yr/GNJvguz
CywntHSPcWV2ht/Cg0sD3ZidsGzEt/Bkamfscjue1Lk5sxPaDvMuuObO7Ih3
/8o1+EZtPi9ZlqXCWjHbo9DwZmuEB7Md/vzVl3lNbYtBa0sEqG2YTXgx76zp
ArUtfNMaZLRTmU24d73+3O+ezEZMevawVLAXswl1XjkMPktti0+/ChL6tmU2
4eo7H/cR3sxG3G0SHhnXkdmArR7Pet3uwqxH9OlktzO+zDpY/5Mn+nZlNq9f
fq35HWodkmv0ezq7O7MeVyttPe/Yg1mHXed2PAul1mO3ZXKpcGoDng75fHRq
T2Yjqqy9Mqx8b2YDxhU3ODLKj1mPohW7rDb5MxvQcPw5aRe1EbobyY0X9mc2
oWZsqYT/o9POv2p8uzCA7wiPKY88dOiUI5UUmQol3VtkjFKZyRSZxxSZVYYM
GSNkTITInMwVEt/Ms0QykxuRMe95/4Drx89aZ61nOPvee19nnWPQNmyamL3t
yyBkW07rvbLyiyHINnx42IAo26HItlw6+qB3BrQNmzTbWrJqGLKBt1puq9cm
GNmGZxxJOu89EtnAJWJK/YEhyHpe+uHMi6BRyDrWf288aBW0xnXzQ6bbjUZW
+Wzp9jEVxyArXGt29MZRY5FVDq141dZ9ArLCp5ulddJNRCaeWjezJBBaivwe
Nx4lT0YmKj7/6lnzBchSrHrzoUrXRchEJuWvb18fiyxFlzNHf3ddiUz8YzxP
+QKt8MXoFK+wNcjEdXc1LhVrkaWY3G399KR1yESmB8Jb3lmPLMUBPvHm0wZk
ov2tk3ZFb0SWws2902rHTchEY7w7bT0CLcWe28VvIzYjE1nUyTv5MhFZij+Z
4XWq7UImMi8TF7geWgru53Ch4V5kovUei8TIY8hSZN50+Z6ehkw0rsmO+ZdP
IksRuHaSl3oKmajT7BZFe6ClKF3qlt3wNLJxovb6OUJ/Btn4viyCp4dCE115
L6dWOIcsheuLjRu+XEAmEh4hk5pdRJaiW22rsv7QRIWGv7mZN5Gl2GH7eu3j
28jEJfZedybdR1Z4RWaLzCMPkImDhpwqzoeWYmbBle3lHiITXa3yyIvzkKUw
/zYnoMlTZOL2ffaX1s9HVtjd9nZWM2iVrzu89x4HrfCQkoLiVdDGfmu3rHOV
AmQpWnkMnW4GTeS9bfUQszfIUqS2d6k9Bpr4XpsTot47ZIUfBLXclw9NHOzW
LNTyA7IUPhETB7hCE53x7N/W9xuyFNfvenz7+AeZeE65iyvblSJL8exl9pg6
1AqY+EU339QAE2QpavWvtlGWQSaO2zYpo2wFZClq33TzmA1t7JfDgocNrogs
xfbIv5+uQhP5uSda/qyCLEX/Alq5qioy8Z1VfYvWVUNWONG/U+49aJWn9LWd
1706ssJdFq/OvGGOrPLFR4O7P66BrPEt08B/PzRkHV+MK7ewak1kjd0Me8t/
r4Ws4xiXKjmzLZA1Vt4cyvsOrePgqKcFA3XIeo5/effGhtrIOrZT/V2fQeu5
i+Ww/6LrIOu4earNxLGWyHquZbu59UNoA+/9s2NtmB5Zz386fno50ArZwBm5
Z9Jv1kPWc+feK6/2sEE28POl7Rr2h7bhNg+WLxgLbcsV+p3Palwf2Z7tw57H
jYS25T/LLDeshLbh8gFJpDZANvCk+/+uRUDrefaP9/+1bYisY6/UO9btHJH1
vFscbtjPCdnAy7t1GnkOWs9mE21+v26ErOPA19+9WrRA1nO11r2GeUDr+Nff
rVXLuiBrfHTn+vDq0DreSEtqhLVE1rhME+dPVq2QVW44bdWQGHdkjVWHwCd9
2yDrOHLXr4zFAlnP0XUrFfyGNvAQi5PZvdsj6/n7r3dbdngj69izmW+D69Aa
L/NvazjbEVnH9unDdjl1Qdb41KH+lhnQKg9dHOFasRuywl92vbq0zweZ+HiN
zJCg7shSDKzSr7V5D2TiUPOCCiOhpRjutVJY+iITfQjuE7PEH1mKWZ/3/pcA
TfRlw7MKA/siS1H+c4XKM6CJE2u36vsDWorOsz8MX9YfmSi+chttyRBkKRrW
erx6wTBkYschvQ1noI15vWjkx5WjkYnSw++2zx6LLMWhPQ2fjJ2ATHS3Xkp+
r8nIUnw/fmBX3hRkopCx30ZYhyJLMXZbYZ8CaOLhPrVbnJmGrPDAnlEencOQ
VT47s+eFjeHICh83iUn+Ck084s6oP0XTkRWuRYv6vJyJTDxwSsyEvbOQFd5T
c9WdAXOQiQ9M6JzkNh9Zimo/e4riBchEZ0dmDjq4EFmKko+/zpnFIBP9cs6N
CICWIkjfybrfUmSi2n+puMoyZCmCs8qvvrgcmejdpSjvliuQpTg85cDerFXI
RJsWWRxvtRbZ+Lw9W0WtjkMm/vwrI943HlmKS0fnNkqFJj7d3vvV203IUlxe
+zOt4VZk4jzXmXXttiFLcbD+j4UR0EQDknPef4WW4rZ7hd+9tyMTuz9YO2rn
TmSF91UI/FM5EZl4tmP4uN1JyFJ0uZfQ5wA08bfLNCYdWop+fxaevAdN5OKx
qnVmMrIUg1IDB/fai0x0r/Zf5Ty0FC/9WzjsTUEmmnx9epWgVGQpflit+Z0I
TXxifH3qfAhZ4QXW34LXQRMPtfuyPhVa4XVtH3wbfBhZ5Sujux+dCK2x4bV+
ezy0jo/6zh/R8giynvfsContfxTZwLnnBq/cdQJZz2MyetHKk8gGHlxpXmwm
tA3XzG9ichnalgPW3r5fCm3P6oNpp/1OIztwk4rHig9BO/KciykL8jKQG/HD
RdsKIy4iO/PdrOUvtkI35Xbbc8+fvYTcjC0n6tp6XkFuypk7HzSOgnbmSTGV
Ny2FbsTJV2eYN85BduTtkT3qN7uK3IhzNxxtYfEfsiN/uvL98uXryA7c+s6s
2v/uIjvy+Fk5NovuITuwn9nsGgeh7fnexD97jz9AtuW/B3N6VHyIbM873fwO
GaAdeMULMhsKbc9hY945BUPb8saW7yq3foRsz94DzF65Q9vyg/2L2t96jGzP
u8+2kd+fIjvw8qkd674tQHZkz7Tg4tMvkB24jtuz9XUKke35W9l1LcJfIzuw
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
6xJ6GVnjc393K++hVe4Z6RXfORtZ4elfvNd8voKscmybbaMcryIrHG+RFBBy
DZk4JGrNkIvQUljaDz2y/D9kY141/P3Y7DqyFBW+/Y5PuoFMNDZoS3KzW8hS
6KvffvzhHjLR19tdyq5+hGzM+3Ezlnx8jExcqUXDlP15yFJ4b1xap9VTZOLx
7afaFxQgKzzUJSEyqhDZ2K+fzch+AS1FNbuACU3fIRNtvxBo/xNaip/JdY+9
eo9MNHTGo0D3ImTjvNk4zkx8Qibyd/jSq1wxsrFe/O3mqN+Qid6/Taij+4Us
RfEc15NrfiMTLVvUqXLGP2Qp8uyW7TUhd2Bim8ItE/ZBG/elp69GFpogE32M
Ko1YVBZZivjZYkOhKTLRwQY986LLIRvzwuoDzy0VZOOJ/91qXr/KyMZ9acEa
iW283zirsNvQUhxqVyd8QhVkYqd+x/xWmiMr3LpGfvFXaOLd+77U8ayBLEUV
w6MNi2siE28+sKx7JrQU6WHJvStZIBOtGO5R/LgushT3ufFvNwOy8X2NjRw6
3AZZCuuOJxeGQxO5+twY/60+shQdz/Wck2iHTNw8en297Q7ICisO3cccaoRM
nJl/Ns6qKbLC95Y7Bv1shqyyXm5an9YcWeOA2F/Tc1sjq3xFi25u6Yas8dQv
lRvNdEfW8Y3RP3/3aIus589FUb3XC2QDtw6yqZkFbcNDX66qNrwdsoFP966Q
Wb0jsp57n287fBe0gUuTE5cO6oxswz+PXT8bAm3g9nXU+1oXZD13N31tM7Yr
soFvl7Nr8Alaz3OevHeL6oas412T3wWP8EHWuJZL+LM+3ZFVPlr1U2pgD2SF
39SyTjfxRSbeYea7pLgnssKv718bXDMAWeWUQ7P2jYRW2PRK5gyvPsgq2+ac
uHUaWuMT3S0Kb0PruPHsRDGqL7LGXx54jL41AFnH7od0a+YOQtbz/jUzLzQJ
QjbW25JyW8sMRtbz9+nrUwuGIOu4kKe4JA1H1vhppcbfvwYjq/zc1XXM4BHI
Cs9vlr7780hk476WtffLslHIUky0r9xk40Rk4ohOrXI2Q0uhczp29ys0UY3g
sDH1piNLsWnpz12DZiETz3X/ftp0NrLCt98EOb6Zi6xyWW/PS6fnIWvcLCdm
5voFyDo+WX9XaMVIZGO/XvjZawy0yi98Lh7rG42ssfXuM1NLoVWePN23hfdC
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
iHbaaDYWmSim5fjD6eOQpZiw16JN/ERk4sDXjw+ETUaWYkz5dgXqFGTi8k3e
fjKHVjhqeRuHSaHIxH0ce/iegZaiV+1LJ2dOQyYujPG8nBOOLMX1Cm1qpM1A
JmqU7NP1SwSyFJ3P3PtKM5GJW/fqfy0LWuFVN4v5HbTKwyoOPucxC1njU2vy
i8JmI+v4eK/RmvkcZI0vrXm7ui+0joc+3BwwC1rjJVfTteXzkHX8M+5n7yvz
kY377s+TWbnQOvYI22H9HFpjs226hWMWIKucX/1Gz9mRyAo//XPjRMlCZJXf
hm9/MjkGWWGfsc8VbTmyyvWOHWm6B1rjepmHl5esQFa5c+KilDqxyBr3f1e0
OnUlssojUtr3C1uNrPHDqYtW5q1BVtm38+PAcWuRFa4Z/2fgEWiVQ3eVLvgK
rXFY8c4UWoes8tCYvg02Qyv85m+CkgWtcs3IsD/mccgKm37+ZWK2EZn4/YAt
HqnQChev+3SsySZk4mtW964xtBRJ+9cX/4MmOlht6KeiBGQp1j25kDFuGzLR
lv/GXW9xAFkK54yYuR6pyMZ+a/n0awm0FPlTLUy9jyETvXUouRiTjiyFok9r
dfYMMlGUU/xL3wvIxnnfJDunXCYy0dMu5bU50FIcLBgVfx2aePrwVO9rF5EV
Xlz2+tYRl5BVDqthW/MjtMKVJ+9z+X0ZWeVbWxqZdspGVnjMlfh3ta4gE1vU
i7jSMQdZio4O53bNuYpMnFA3wTXoGrIUPYLrvjkDTbxuibOlay6ywpdjO1V4
Ba2yz/KQDcXQGldtfcD3znVklQ9HrjiXcQNZ40FTThUX3ERWWfdxf4Nat5A1
zljkklz+NrLKdef5UTi0wkOu1J1Y5h4yccTPRXNmQiv87uN/UybdR1ZZq3E5
qwRa4bA0tx/jHyAT17732OwjtBQhded3UR8iE01dVXpyPrRxXyoc2OIOtLHf
9G57tvJjZCmSJ3b9sCwP2Zj3qvTc6ZyPrHDjM9nLfaCJz6c/qrEEWuEWo9qZ
WRUiE/tbtc8Og5biqPOI4EmvkIlqV5uT3PM98v/7bW5B1Y/IRKd91t6u/BVZ
ikHlpwbPKkYmXpNzljt8Q1b4x6Ogn6OhiSML14w1LUFWeHfqg7zX0MShGRfr
3f+JLIWubN4Fv1/IRH24+sBV0FKkheqflS9FJt7coFHjEWUEsBSVUovMq5dF
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
s0ZVeyNrqGJf5a65U5B177fTt+9LpyFr6GfKePsz0FqKXLoiaMwMZA11i948
MHkmsprMm1koP2chq2h++4N/Os9GVlOr7/VN181B1lC/dwVmsdBqcu263KvH
PGQNtfob5EjQaipJmCatmo+somYNVZmDFyCrKfh9HX1jX2QVVV/b5fxmIbJC
L0qezXBdhCzTnoDkrT7QEmUW1ThshWaUpRk4qQRaoq67y9RefsgypU/7eC8D
WiKjzQXb5vojM7pkfP1VNrRE4vQpVefFyLq8qq74aBuIrJuXlZ+z+kMztkic
2XcOWnAWe2PZ7qXIjPUrdn2SCC14UuuOG29CM/b6lZtBVhCy4K9GL6t5swyZ
sY7d7sS1W4Us+JGk+IdToBk7+m7De80aZMGpi3e/V9CMstdmmtiuQxZ8ap2F
qfuhGes+t6U9X48s+INezW9+gmZ0P22A3Y9gZIkcI2NjpU3IjIa1Tj4wElqi
zoeD7z2FlmnXiaR3wzYjS3Ro1Tb/pC3IMn0dNde79lZkido3nVjQFprRve4b
S85BC27cpE0f623IjB7sjsn9Ay24a9Z/4TbbkRnLWzg1fwe04G1Hj35ZBa07
4MRzI4bvQBZ8eutz3wN3ITPmmHzWZy20Lm+2WeI9aDcyo4gWti4foAXXD1Pf
qoJm7EWaXdWfPciCr/lQvK5jODJjqy6HFvWEFnxC2sA2F6EZa3DOKKdDBLLg
iab+X4dDM1ZhXr/f5ihkwXfdr5g26wAyo4PrHjyfDS14u5v1Pe5CM9aU111X
DC24+5kXJ0YeRGbM44nq221owflGbVPXaGTGJiV9+J0ELXhZySf3MzHIjJW3
nri8+iiyri9s+SuaxyIztrhho0saaN3xLt7IWgHNWBurmvWjjiELPmqkT3Aq
NGPd/CR76zhkwb9te5GcBM1Ib/W1n4+gBR9967jhZ2hGp048v1ENLZG68r3v
zOPIMnWqdL5yMh5ZonlrHv3ocAKZ0Ra3h3NOnUQWfOiW9zONTiEzUheeXhUB
reubL9eV3YVmdG7bpmc9zyBLtH7bsd1h55FlKq81fFw1tEQxH8NChlxAZvQj
bPaaCmjBFzRY1mvKRWTGhthkbvRLRBa8ZeG415aXkBnzp4AJecnIgqtmvoq7
m4LM2MyPc87OuIms2y9CToyscwuZkWiVvDYUWqJvyq1Fn1KRGb3ZLbdccQdZ
IoeenzUZ0Iz6Tbme8gZa8E8W/c7/hmZ0psTnd997yIIHtpx/KBiaUc1Z/3m3
oCWq8axdehdapmMLhwU9gFZI7yPfkQOton4LU21S7iOr6eOjswX6acgqeh1T
nHgNWk0tJ0X5VUNrSHtr05vr6chq6qo/T22SgayixmdHb78GrevrMUZRBg+Q
NWRVM3vf3ExkLfWuJ16NfoisIeX0nFrqLGQtjYmpCL4AraGOtY1Gl0Cr6eH2
I0H3HiFrqInnGqdz2chaahLdOi0fWkM3XM17HH6MrKZy74Wb3HOQNeR7cM6L
L9Bq6tyj4HGrXGQVpes36eILraaILhOvhz1F1tCbFnGPnuQhq6l+t9B1Ts+Q
NbTff0+bls+RtbSqIlxzD1pDRqW97MoKkNVUtTngaucXyBryvruoJBlaTYOb
PBw+9CWyiobYNbJc+ApZTVljTG7Gv0ZWkbdtt3kn3yAr5EDW709By5RdGjbP
qBBZopC+OdVu0IxunrPMHgOt26/9nHPPQDNKf+C79Q+0RAbPRp5zfIssU7eN
07txaIUsJq8piYGW6f6N/Wk50BI1S5jfqGERMqOxRUei7r1DFvzH5hOK/B5Z
17eWdL674wOybl6ZLWrBPiIz5jU138QOWvCqfkdt639CZvTb5OhgS2jBmw69
82IENKP19v+6hnxG1l1vDbex/4bMyLe5+fi50IKn/kq9ch5a19e8ezXML0EW
vJOj15UdpciM/n5LomfQgo/fVyumiUBmrPf4vRfdoAUfsdQj8AQ0o75zqegl
tOBj698ttfqOrOvLsUsdP0ILfvN4+ca3P5AZ2+0d/q12GbLgafrkLEPrzvfF
7UYuv5EFf3CyRfZ6aEabd5XmVUBLVPw1Z9rPCmRG5vYbUh/8QZbId4/yOgua
0cuovofrViJLVNnpV6vm0DJNzf/6/hC0RDvDB+Y0+4usy8ulmoEjoQV/+9fy
x0toRn+GnnX3rEaWqNMMpxH7oWU6si71yEdoiXrOP7PBpAZZd70yk07bQws+
/X3cj6H/kBkVSpVBQcwFWPBWRwr//YBmbN3ZMdcS/0MW/HQT+7mfoRnjHvvG
5dVCFrzef/KQFXWRdceruG0fAa17Xg4bH4yEZmTg6nC0Rz1kwe1Wpv2ZKyEz
ytKzfTunPrJEwR9/Nd0NzWhRg+hNTRoiS1RYfv3xBWhGLYNqfQtqhCxR4+Bz
ibUaI8tk2dmiYx8ZWaHrV7q2i2uKLNOH33fevoFWaMvc215lBsi6vj8w+0AT
Q2SJ7u0rWDUUWqZFfZavzoRWqM6Gd17lCrJMV0zcbQa0QFaocMZGg/UqZBUt
zxq0YVhLZDU1N5z2xqg1soYSfWbvCYHW0rCHD850VCNraFNRu5KJ0Goa3v/h
/UQjZBXVdGlhI4yR1bS9U/ScoxpkDR1IeedmbIKspZrS8vvLoE0pTs/r/oq2
yGY0YMqLfw1Nkc3ppV/ZfQNoC5qeN95EDW1JHr93zIxuh2xNtTWZRgXQlnS1
//AnpmbIFmTp9Pr4Zmhz+hYV77wT2oLev/758U57ZHPKCHIcLqAt6F/33NIh
5siWFJ2b3MoP2poOmWzssacDsi2de+j4CrsT3TAufBgFbUuX1v0LHW2BbE2m
i9o8vQFtSZ1yTR6kQVvQWaNL9fw7IlvSrQ0eLh0tka3ptE2Nxs4K2ZamPBpz
/aw1sjWl7THfVA1tSTvzZp0w7oJsTfWL45f2hLakOlW1//6EtqZ3jnfbh9kh
W5JTUPBLh27IFnTH0+X+K2hL2vvkbkXr7sgWpPerMPQatDlpEvvNO9gD2YJ2
z3gzY0BPZEtSlo/tWL8XsjXdGhbmuMEB2ZaYQXm/ro7Iuus1Xm/iSGhLMp/7
Zc9WjmxB6XM2rbsNbU4WWSrVSEK2IM9DVZo1fZAtycvfdW4YtDXVitaLk/si
W9KJLWQdAm1NXRMv5SZBW9KxsdoJ2f2QranMqiShCNqS5izM1P4agGxBte44
PwpyRjanB+tUfvUHIpuRxU7eoxDalK6Fn4uf4YJsRvltjFZsgzalycmPU/ZB
a2np5XPWowYha6i3sf700MHIaso8aD1qsRuyhkLatJSmDUXWUtKwAT5voU3J
LOpIZSW0li5MeDC8/3BkDS1bZmxTdwSymtLKRYUaWkUN/Ru7+kMrNNzf8PlW
aJny+bqk/dASndzS85jfKGSZfhcMW/wRWqK+hZ6pPu7IMkXltpvtOAZZodbR
o1oP9UBW0ambx5utg1bI9dCjqwWeyDI5ZhRkffRCVmjz2ZynNhOR//95U583
OUMr1LZJmF6dScgqWmX6ssPVycgKhaU+nnRhKrJMh/4ld4qZjizRTfLfdwVa
pourGpucm4Es0bTuF1SfoRmteDQj3WsWsuDlY9fkrIBmzHHboOnHoQW/1fbr
zU/QjI3pneLLfJAFL7rZJeg4NKNB9uXt06EF/zHuY3zgXGTdE6+khJyBFjwu
eE2PdfOQGRt99tZ6uwXIgu+u9+jOIV9kRhdHWFiOWYgs0Wi7Vi99oBkF5dTa
1dMfWfCjlT+CA6AZyw2cO+/rYmTBjw+MDf4YiMyYX/LKsqVLkAUfpj8+bC80
I6MuSeMPQEtkf9cp9hn0//9f1vFWryBkwQ3Hbd09A5qxMw2npLVYhiy4tu95
r6XLkRmFTzUbbLQCWfChiy+bFEMz9iN6eeSRVciCu0ZL02zXIDNaG9Zskhe0
4H8dt6z2XYvMWF+v9ONT1yELfuhB09hIaMb6dx3+vNl6ZMGr9o9q3H8DMmOT
Vvv/ddyILPjKhXKE/iZkxuwLt2VmQgseEdM6YtRmZEZK58LIg1uRBU9bPsCh
AppRxuDfQUUhyBL1sRi8dNg2ZJkWxqu7OG1HlmjqFNflU6EZlad9ndJ2B7JE
7Noev/bQjL77x5v5QAvOv3bOjIJmzH1YyJr/diPr9lvNkMeLQ5EZG2dXOtYt
HFnwpGPavpnQjMUvu1A6LgJZ8L0lTb1aRiIzsnrr9nj/fmTBVT5ia9doZEZL
trfIvQEteGCmWu5+CJmx1Oi+qjhowZPpg9ENaEYre78Oc4pBlojaGY2cDy3T
ttFDxzyAliima5r928PIMs3r2N2i2xFkidRuZq7F0DIZ3eo6pO5RZIlWbn/0
+Tg0o9LAcf+9gxa8d/cj+0fGIjNWx+/71tXQgp+adsHE8Bjy/z/vPjLgN7Tg
x25nXQqKQ2Z0sveG8dXQEjl0mdDW5Dgyo1dhd9O8oCVacz2mehe0TB7qG8fa
xyMr5Dwkb8knaJmSOq0Qi04gKxRzdtuF1ieRVfQkdtjicmg1tVjw1L7kDLKK
fiaF5I06i6ymMyecHb2hVfTtTukc2wRkhV4d/NI6CFpFkZFjn2ScQ1aTQ/Bt
n97nkVVEMTeCM6HVNLht9Bqzi8gq2ulY8WUOtJpSfmx3Xp2IrKHIR+nBFdBq
IsOvp7smIauo6fQu24dBK5Q0I9pyNbSKbpdOTU6EVlOrojpr0qBVtLHW1spm
l5AVen+v+dIYaBX5/niuBF9GVijSb9XDx8nIMlW2Wba+7AqyQqcOLEy/noIs
U1hfv/hSaIWspCv2O68hq6j658zjg24gq8k/rIfrFmgVuXilmh+8iazQ2jVv
Bn2Flmlo8v5GereRJRp2wP3wuDvIuv26h9flQXeRJYpwa6uefR+Z0Ttfh3cr
05H//30Nt3v1z0BmbMPH2NNLs5EFH+5tdewXNKMnCaX2/R8jS9R6XvvVY54g
M9qvzFx4Alrw26EbZl2D1uXNzMb3v0FLtKxw6Nc1ucgynX6bve0atERdLt2o
2+gpMqNUl3alA/OQJVp0IPeFLzSjfg+MayVA6+blmAf9y/ORGZszdv66D8+Q
Be+SvWKO1XNkxqYsMTy7rQBZl/dN+vJcaMaWZ24/seAVsuC56WZszGtkRoZm
7d/qFyIL3uNZkYEamrH3311MLkALnnP/x8pab5H//31X7TcNhha8q+3hrROg
Ges2xivjIbTg1UmNpk0pQmb0L/JY3mZo3XrXmBr6v0NmbP8WTf0UaMGpz56D
T6F1fVPdv1fEJ2TBTfY7FmQWIzN2/WLn30XQgvsmbzxdvwSZsQ/auff3CGTB
T68++PQQNGMdTLPGnIcW3O5cRcqH78iMpdzrl1bnB7LgttZnvYygGf2pdXdZ
B2iJ9OPvd90BLdPlULb1fRmyQr7zJLsXP5Fl2lx5rJ/3L2SJam1J0w+DZpTZ
NjYkB1rw1iW5luHlyIxql77aU/wbWaIe3mabBDSjO3/8WfMKZMEtbnQ43BGa
kXF78wO+f5AlanC1Mu1UJbJMeZ0GeZ6BVqibyf7ZP6FlOhk598GLKmRdXjb5
tujNX2QVXbMY+G3bP2SFBk67m7UdWkXjTy/a0JANAtbl5V0Td5pBayj5xmyv
PtBqyiqd8fgmtIamjiyY1UEPWU0ZWS/MZkKrKKyzbKbURlaomed1Yw20ih62
ed/pKrSautv12jmrDrKGDqojqqPqIqvpdP7qFdfqIaso7UrjcwXQavLpX950
UH1kFXkYbgp7B63QWGml85QGyDK9vLMlvWVDZIni89a85dCMfAeGnRkLLVH0
b/vFMdCMrGaEXzdshCy4c0ZUjyvQjM58/Hi1WB9Z8M1/8uYlNkZmzDIk0bgM
WrffvxberWVkxi47vw1/2hRZN2+HDa6YboDMWM/PVzL/M0QW/PiWhXuaQjNm
eF9ls1pBFvzJ339XRzZHZqx948I2r1sgC77R7V+HkypkxkaGTlObtkQWfNKr
1u77WyMzFpFyMtSkDbLgcevXvqlnjMyojkuXwfbQEnXdf+vPTGhG8d1/bguE
lujp09TBVzXIute/lQf9gBY8/Nht1z0myIztu20yMg9a8MnJP7Z9hGaUoP+5
w9y2yIJ3OOp24T40I70NCXbz2iFLVC/tzpQiM2RGE54YfSiHFlzww23i2yMz
GmKY3raWObIuL19Yds4cmtHhi665vaAl6vPha94KaEZBLvE/46AFnxYSGXAF
mjHrWX0Hu9ggCz6vzO3EXmhGL1hE5oBOyIKXNTh9cio0o0vOsUHmXZAl8hs3
P9cTWqbOboE33e2QJZrf3Orqc2iZhvmcrT29K7JEC/UeT+nYDZmRXXVjDz9o
ifo/9FSadkeWyd7AZWsptESdXY6sMOqBzChyaKO5r6AFb6Dfx1lA6+adrfbO
kZ7Igs+x/29LETRj58bHN/7YC1nw5o1Lvg/sjcyowrBWYj604FnRF2drHJAZ
G3jD6acxRxZ83Ri7gUegGXMz2hv5qC+y4FdeVoT9g2aU7sQetu+HLNFDk0e9
UqFlGqD9bfwCWqKN65NkZydkmZKmG/RZAC3RiDoWKf79kXXX+12LdgehBb+5
/vnaGwOQGfu2J19JdkYW3Ga3eF8Ezah8Ys/XJdAS/fR1ttS6IDP6r5dBwEBX
ZIkqn2cYboZmlDTujt5xaMFNw5s9/TAYmZHXhOw2s4cgC37NzT/b2A2ZUYsM
4+CEoci6/fabd9dSaF1efNnvwYnhyLq8NKb3pYARyIz6eLah0pHIguffNbCM
HoXMaKW27MRhaImmLTCJu+qOLNPP2jH680YjKxR0Y9387LHIKiopSNo/ygNZ
IfuRT1fX9USWqXt+7vAp0BLlr9C/FAbNKLSTec8EaImqfzb43WsCskwjYhvE
hEBLlLMufexkb2RGy288z/8OLfiJh9Mvt5yMzEh/V9nfbtCCM//fb5ZCM3bh
zckBr6cgC/7ApkWXrVORGRva786f79OQdc+Lh8+YHdORGe3ZWZp/EVrw2SP0
TN5DMza32Vj/vFnIgo9eMST9NTRjtlfPh7nOQdadb03Mb5UPMmOFsx3HD5+P
LDgtfFSxCFrXN+qV7jkBLbjjEsNZob7IjFwy0yOeQks0M/bGp50LkWXa/r39
oD2LkCU6/fXVnWPQjETgxE5Gfsi6/XZ0brtoaEabL2c/3OWPLNE5nyXdPRcj
M9pS9UTPPRBZohk7wj8fh5bp3Yrnp7oHISvk/HJHnwHQMlXf/XjKZBmyRBal
Q23qLEeWabjPlG2noRVqNXa9SSa0THYnw34MW4kskdvLDfbhq5AZVdc54PEZ
WvDNiaENWqxGZqylafrqtcHIgofF90uttxGZ0WOZRXWHFrz33BW1HaAZGZWt
aOG7GVnw4Fqz4mtvQWYsIcZxxlBowbPXL2/4EVq3XlV893doieKfGg1UbUWW
6e17+5ULoCXa/zF2XQI0owV6Meu8Q5Al6llS8TRkGzIjbdGcRrHQgrsPG2Hy
A5pRkevB1dHbkQUvHGmV1XEnMmO7xNc6dUORBbczXxa6MQyZsR2X+qyYvBdZ
8En+x79uh2ZsWdhsnz4RyIL3eVfdrXkkMqN7m0eOKotClkj/ulPvbgeRZTLs
Y7v9J7REg1p+LTwTjSzT7ym9Yv8eQlaoQc7RK+1jkFVk6P80NApaTX/a+piW
Qauo3Zyw9dmHkRVqeHRdmt4RZJmmdygs2QWt0MRvS7bWikVWUd+2G277QCvU
rKRVjtcxZBU9ndt/y2xoNR2LvREeAK0hjzTr0IvQWuq+227OHWgNNR2b73AP
Wk31dr5+2yQOWUMxyycWND2OrKWdU1wMIqE19CBw2cXT0Fpab+wWqYlH1lD2
4xexfU4iq+mlTYTP3FPIKqpynnb7DLSaap6f8np+BllDyUP+lXY+i6ym6JcN
ywZDq6hW6vjURdBqGm1sd/EStIoM/lp7ZkGryfvIt307E5BVpPR0MnkErbvf
OwxTdbmArKKrMQ9X7oRW6MWqIdtToGUyz2xReh9aoiJNYkXCRWSZKC916Uto
hS4dl5rUTUJW0QCPj7MUaIUKGtwcdv4Ssoq+pWdUZkIr9N5yW0DMZWSZFrU2
+FErGVmik3v7e7aGZhR07u1Qc2jBiwPPGAyBZnSyOqltBrSu75QW9XC8gszY
EfsF5ykFWfAyz14XJ0EzZnmujtd1aMFHvTv3/etVZN2KTZjW+dYNZMFvzxT/
fYfWrRcL9zW+iSx4C6uVTbyhGZU3WlU3HlrwUxOamuZDM2Z+4+yYQmjBXy3d
2SntFjJjK5T2rf7eRRY88Gth4Mk0ZF1fqlpxpXE6skSqcluDVtAymfmbTrWD
lqhcNq4Iy0BmpHeE4qugBe9UODV4wgNkxoLvFCx+m4kseFzIu+hpD5EZq7FM
77MDWvAPCywm7IHWndH4Xz8GZyEL3rHSJGr9I2TGFl5tG6h+jKx73h5+ehAD
zdj52DWDb+chC97g7cuMnHxkxhaHt/Uugxb8fvTF8AbPkBmN7DSkXhC04Ebj
Or1NfI7M6LR96M8f0IK3r1l507QAmdGVTfWeT4eWaNHm84+6vkBmFJzeJToA
Wtc3ix8PfwnNqN3rjVZfXyEL3jDO5p33a2TGzNY26/MXWvALHwJWDn+DzMh6
6omNdm+RBWc2xrv7vUPW9dWDir3be2TBV7YcPCkEmlHjpJ2v6n5Alig7eOSA
VtCMGtrOsrSHFtx7VYN9B6AZS5YUq5SPyIIXbVzbxPkTMmMOIf8i7nxGFvxa
z8cFVl+QGW0a80nfpRhZIp/jEWvdoBlNfjLI+Sm0RHx+z1nWX5Fl6rGhxLrW
N2SFDOOa7dgALVM7PsLiFbRCAUV+eVXQMn3Uzl3uWYKsUHjTr0P6CmSZNr2f
HjgIWiGr2IxGNj+QVaRePa7/SWg1TR+j8XIpQ9bQ3XLJ7+FPZC39fVSjKYHW
kOXEwCELfyFrKWr9syi7cmQNFWd3CVkEraVaA4q2rviNrKH/vk2UbkKr6WS2
16BtFcgqcjNv5GvzB1kh85SpppHQKppgb+j4EFpNrd959rSvQlbR1MKxD19C
6473K/W6319kmab10rv3Elqim+2b1VGqkRm5L3ePsq9Blii52Zx+1cwVWKYl
hj+6TfgPWaGUemn7FD1kFX0d4b/XHlpN/4V+GHezFrKKHvawt9lUG1lN0+IM
djeoi6yi64sumi2CVtN669ERadAa0lJmz8/QWsq17dLPR0LWUHinzWGnobX0
wd6k7Yr6yBpqwEbYpEKryXjNQg+XBsgqCklZ5vQMWk3dw5p3GtUQWUWnK1Jn
+ECryd3Bb0MUtK5v5p+av6oRskJThjfYvrMxsopqdxz7PQpaIctd9QyyoWUq
3l456koTZIn8KoPGvpGRZdpvOOyiswGyQr87HNa6Q6uoatwq4wWGyGqKeliz
b4mCrCIH5zphz6AVGhJlMdK4GbKKuuz8MXBPc2SFysfOVue3QFbRv4e1fGa2
RFZT89p3x66A1tDqdwFhO1sh6/bLtV9C26qRVdTI9t71ydAKjZkrimKgZdq3
8MD8mUbIEk2ZFeBqa4zMqCI2MtBZgyz4C+Nnvg+gGXNad7PJcRNkwXOmVa7I
hmbM60/12TlaZMGPp7p7R0Mz5nI0LPMBtC7vOq987NsWmdGoCQ2NupkiS9Rr
8QKfJdAyVX9Y+bAQWiLR+frFVu2QZRrRpWphCbTufp+Quud0B2SZPP0nr7kP
rdArg30rTS2QZRLvNx6cAi1R809n5wdBM2J9j3s+skSW6HLWfyfbWyHLFGS8
SY6GVsgh7+r5h9bIKnJKODLHygZZobYRtVbNhlaRb7cmPWVbZN16X/yQ9B5a
N+/DW64R0Ar5JF5Pad4ZWUXXij7uGtoFWaHQ4PWVEdAqqhv/a3wqtEKZp1bb
v4WW6dmYse4BdsgS9cue/3hvd2Td/famXbS6B7JEdq8vzXOFlsl+2rImiT2R
JYocWd52RC9kmZxm3lcfhpbI2b2KjvZGZvTllM/oY47IgudpV/5O5ciMtXnj
+0hDyILb2rc47wPNKORSQr8IaIkmRR03yO6LzKhkqaNVMbTga5u3T2/RD5kR
3T6ZXt8JWaLHT/qFBkPLVDdqcojnAGSF5n39M2CRM7JMozO8azZB6/LOvM9T
MgYi6/pyD6tDF12QJYowPHGLDUKWyW/smMdPoCXqNi3ca7srMqM3I5b3TICW
6L/ZdOw+tEyGiya1qoSWaGFOL8OqwciMUj9/f8+HIEt0sdfWRuOgGVlq0/MW
Qwv+q++Y1/3dkBlN7LxmzAdoiVo38U/3HY7M6Fmx68zL0BJ5br/3peUoZJkO
JL4/cxpaob8XHTc0Gocs01czn6P20BKp//Op6umBLFPAjKiH+6Alogs721yC
lslu3eqKe9AK9V7yyTbeE1mmqwa+q2eNR5aoYuM721VeyDJ9WNbAx3wiskJf
bo0OdIJW0bfmr6KPQ6spbfOq7+XQKurrNS/hnDeyQreih+1sMQlZl7dizuUk
QyvU0f1fw3JoFXVtvbpT3mRkhfJzn0x8Ay3TlOSMui2mIEtUkHrnzz1oRq07
zo+bNANZ8NJQl/57ZiIzVr/w9bdlPsiCb/1489r3eciM5R11Kn01H1nw10+m
ro5ZgMzYoblyn0WLkAU39O6WKPkjMxowprSSoAWPnHCiYPFiZEZRdr2/Fy9B
Ftyhy/lKCkJm1DnSbnn7FciCD7zyXxhBM1Zccv1TELTgG9KyBySuQmbMRhN4
uusaZMHNtnyOnr4OmbGXpXeuzIIWfJ9DjWGT9ciMnU4fH5C1BVnwILMN2z5v
Rdbt1+4qp0MhyIJPMhxrfh9atyOs6CdCtiELvuZFwzUttiMzNpdpeqRAC57R
ION05g5kRt9z+N64XcgS3bHcfT0VWqYrJbV6uO9Gliivrp/9xT3IMj2cbP/m
FbRC1rM65BdC6/pa//bpdcORJWp2mlr5QDMyaGEY5r4XWaL5d8tfG+5DZnTQ
wdIiAFqiefZbY/ZDMxpmVHtBQASyRMuamO17Dy1TlEHnhHaRyBLNTFedeg/N
aMgL7xe/oXV5ud6xB8f2IzNWWtB71nVowc+VvzEth2Y0u2Pwhq9RyII3bP9N
6nkAmTHP4sAsKQZZ8KVT97eOgGYsp84Mvf6xyIJ3GzVXtRiasUkj0+MCoAW/
mmGZaXsMWbffJsy7uzEOWfCNRoeqL0Iz1viEV7HZSWTBy5pdUt2G1s0bt0QL
41PIEjm+PbvfBZrR4VWqMYehBT9S2DT3ATRjS+1XLs+BFnzBqFROp5EZG5Jq
vboMWnC/HcG2f88i6/Z77bgMowRkwX0vGD11h2bMsM6nt+vOIwt+lh37e+AC
MmNjK9oq7knIurxStKL9kMvIjDWzXG6SAC24+4qLLlXQjB1t2+CrSQqy4KFL
+/WbexWZUZmr89JIaMELnI2mP4ZmNE7bfeI3aN1693LJcb6OzNhOen+y2U1k
wR9Q2Hw/aF1fNK6uo38LWXATx1ZenaEZO846H82HFvzAPJX3c2hGgS61uxqm
IuvmRcCzbVOhZfpRfNthLbREIwK9bHZByzR5t/WRF9AKOas+7qx3B1mmLq09
F5pCK/R7b8aRv3eRVVRws67v0XvIarJ8tSTrArSKjCPavWh1H1mhp7NH+9un
Ics0clDJ0YXQCk3PeaY/Lh1ZprHBkxLjMpAV+i+2f6cXD5BVdDKlqXfrTGQ1
9a2xj9wFraKV5Hdq0ENkheZHHFq4AFqmIV1bd8jLQlbIzyE8vM0jZBUduH34
+ihohXJS/JKqspFluukUsivyMbJECeNvtkqHZpRf7enhkYMs0Y3xW45NgNbl
rYw9F5OgJWq4RD3l0hNkmY7uTgpqmYcs0a1rC/V6Q8v02fVc4935yBI5ZV3Z
fhia0TIflwMF0BLVqrc3oNVzZEaHjpg8OgMtUaPuG/tEFCDr8sK/OkH50BId
7GmY4vgCmdFtP0sHH2iJyrbJprNeIjNyCKntsf0VsuB1W9Zr+d9rZEarNrJO
n98gC66+Kx+aWYjM2CjztNHX3iLr+qZl3x+F0Ixx9bF/+kXIurzS2mFOCDRj
0WsdT7x7hyy46bymGfXfIzOWkb/wc9xHZMEvny/+fg1a935T9S8UQAue12OW
xvUTsu55mzKjsYCW6GVVpz+LPiPLdPBTg+FvviBL1DlvcXKfr8gynXD46xn4
DVmibZHmw6NKkBnlzJED3glkwbP6mL598B2ZsYvixbS3P5B1ecv47JCpP5EZ
2zBuYdz8X8iCtymqF3oYmrGDOxK/ZFUhC77kms2zVX+RGdslXytrU4Os63vb
exwshWbs1buK1MZ6g4EFT1hbuX1ibWTGlhxsGPK+HrLgnSL+C50sITMWlyxJ
nvWRdX3tVEQ5NqOENYEFydCCu9WL2lXQAFnXV5LqWyzRR9bdL43Wf1gHzSjO
IXpJJLREWZeKfY9CMwqJbaiXAy14oLQ2omVjZEY711sP7gMtER97YFLHpsiM
/JYlbMeWqPesT5Up0Lp5k+g69qcBsuA195bsdTNEZtT2SkHeZ2jBQ/Ly59dR
kBl7unOi988WyIJnelqzZSpkxqo2Dxlu1wpZ8Oup7Y4chGak/jSigZsRsm7e
VF29dxqa0ZMrVqtFG2TBG066OrWZMTJj+ad2PKhjgiz4qTU9B62BZiykmSrY
3xxZ8IMbZqj3dUBmbGOClX+5BbLgTfpZPRnREZmx8VcOTSmyQhZ8y6IOV2Ot
kRmZ1c1c9RRa8Inpj/vo2SAzar5/a3VPW2SJdl4IdkyBlqnripwSs87IEkUa
s/1u0DLtSOt3bhu0RDk7zq9c2A1Zpsqns5bkQCuU1HfbuIbdkVVk1+j6qsY9
kBW6NM0v+zm0TG+btX//FVqhmaP27+rZC1lF0e0+rxwFrVDAl/uB/r2RVXSp
NCBiDbRCg55/HLwRWiZ1n2keN6Almnm4Sbeb0Iw+zVn3eKEjsuCHs2f8aMCR
GcuJcqx3HFrwRIf3Vh6EzKhTpcnBTdAS9fl1YfJVaF3fm9zghNQHWaH0ZMNw
B+j/f95mWVoZtEI738+o3a0vsi4vRg/eZ9APWaLw1yfvtoSWqTg7Mu8ptEIH
Ltxp1qg/skymegs9Vw5AVqhyWNmBf87IKmrl8affwYHICkWEbu7zbBCyiiKD
bmdauCKradjIoPCRg5E19Euv+nUEtJrsv6+5bOyGrKGlFzf8ewutpeHudzws
hyJraPyJQv1v0Gqyq9T/LQ1DVlFIF5G6AVpN2sJmt8qgNRQaHB7eZjiymhpM
WbOtLbSKZrs/3FsCrSavn81+lkJryGj7rJlBI5DVxOZ9ixs3EllDpuYZmfHQ
ahq08qh9gDuyhnrrP1R/GIOspdhevqMbjkU2pRYP37VcDW1GkxdL1ovGIZtS
2a+blYYeyFpa0sA0PsATWUMlffXuXYVW066tRan/oFV048n+Gb3GIyvUf/S8
su3QKqrlHr/3DrSabnebdeoLtIb0ApK2NPdCVtPHfy9PZ0Or6NuyJgd+QSvU
0urYVo+JyDL13tdu+kZoheqaKF1qTUbWHe9U264DoBUa065w3MMpyCp61j9g
0htoNdU6fGvTZ2gVTb4Sm/nfVGQ1qXsec58HraKEY9q92dBqalliPbDWdGQN
XcjWu3UFWk3vPJyOPoLWkOOXAZrOM5B193tTbcZGaA3dPlhQ324mspqKaPDc
T7OQNeRrm3hFmoOspcV/49NfQGvIIPLyii8+yLrznXBuWu+5yBpyrldv5ZZ5
yFqa1GpS1aj5yKb03Zi1uwmtpRtVzXPr+iJraO1Sy9F9oLWUZXPzVq+FyBoK
e1vvcugiZC2d7XJ57R0/ZA29/6hvWccfWUvhj1xeLoLWkJu9f/hGaC0pxr0S
C6FN6eViNrB2ALKWQmpNHiOgNaSuN3FGUiCylgbeb9D8M7Qp9U3f/cV3CbKW
/hSd/Ld6KbKGrHaPv7ILWkspVQZTzkKb0r+J3i+8gpC1tHTR698zoDXUtNbv
a/bLkNVUXlTu0RtaQ2en7skdCa2mgrDh+vOWI2so8tJD913QuryWv7jXtBXI
Glpk9qVTPLSW9L1ul3ZdiWxKb/KNWAi0lvz3xLbeA60ha+Lri6DVNHxugNcf
aBUdn3loncEqZIWabRg1tD20TL+a3h3kCK3Qn82rnDZAq+jzYEn3K2RdXsjt
fFxeg6yimVfOOd6CVsj8jX/nbGgVuWyMavAPWqEFA8asmbkOWUU7XPz2mK9H
VlOHzOoTMdAqmjW2A0vegKxQ28+2qdpgZJmcW3+cMXgjskR7ntU82AUt09Nb
X/gNaIVq+ncI/gYtU3fX+BD9LcgSHa5c4dxwK7JM1//Yju62DVl3vG63C1rv
Qpbp1embcztA6/py9UzlMLQubw6p7LopFFkhh2ftt2yDVlHrjE3t46DVFKvx
G1kMraKzvj5zd+5BVtPVzQc3VUFr6MqzW75mYchaym9zsd8daN28O3Ln8blw
ZDW5Ot/fWbwXWUVTlqRlG+xDVqjv0wbvyqFlStm4sFdFJLJCl1pb+dbZj6yi
Opv/qLdCK2Rc/+TH3dAyLasaN6N+FLJCf8+nvPkKLZP8q7EsH0CWKDjTLfIk
NKNnz7KfVUBLVDK+fqrLQWSZvtqVuF04hKzQFSki8nsMskwOFqk88giyRLUv
rB/dPxZZpj6dLAeegJbo04ZLJ+gYskzelglHn0BLpFkwpduGOGSZLD0ytWbH
kRV6NTzXfvwJZBVZzgysaHUKWU1XVMnWXaE19Pfrhec9obVk8PlK1+3QGnKK
z/1wHFpN8y6Ps7p4GllD3Yp7fIs/g6ymOR2N7AzPImvo0Bllz6gEZDWdDdD8
O3oeWUW3TtUe/eoispocx/5wqpOIrKHujmFhGmg1rY74WXc7tC7vmL/r/gda
Tdk/dvjNS0LWUCINmr4PWtdXTLeOrobW0LyMOqr2l5DV9CAs6dxeaA3Z15l/
edJlZDVFzK1+TcnIKlpPwc7+0Ap17bhx92Vomeo1SHzwCFqhuj1XvfgFrXte
hox4HJuCrKbTRilV+dC6vrpbU/gOWks7Pbx8xlxFNqW1ZZdfmF1D1tLEx+Nm
e0BrqE/t1HXLoLU0ze3EFOU6soYu7Wx7qdMNZC25pmyadAZaQ0163J0g30RW
0+zD7kdioTV0/dfkk/VvIWup1glpdiK0KQV+fh6aA21G92ZYVQloU2o2uNR6
cyqyGS0eah/c8zayOc3tM9DtJ7QZOYZ+71ENbUqvZjjMGnIH2Yx+3HHpOg7a
lIxH+dwPhzajGnF4/8K7yKZ0d9v7t5fvI2tJcja+YJeGbErX9m1svBPajE4V
tqo/Lh3ZlFZ/blceDK2lYzW/fnTIQNZQrxUHxw54gKymRuzkCc9MZBV9r/hq
8RNaoebVK3b/gZZpeXC0V/OHyLq+Ujy0Vyg0IzfDfcvToAWPzR9yMDULmbH5
Dq2H9M1GFryjw7Q3nXKQdSs6tmr6Y2jBVUpPe4MnyIwq2n4dTNCCr/zU6tQe
aEarLw2IinyKLJHBVbXxgDxkmRYs6HJkJ7RCziOdHn7PR5apU5pnYftnyArN
+HItfSK0TO5N3jRa8BxZoqVO7rvaFiAzutVznFfgS2SJvk98OnjzK2SZRvuU
L3gErdA7HxpQ/zWyig4WbjfqBq1Qhyddb2yCVpF6u1ngkUJkhSzW7exsVoSs
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
nWudXXgUWeNRIWHjv0Dr+P28Y/W/Q+s5oPWQRH0aso79E0d/uwitsVvv/nFT
jiGrvDQk7EJ4OrLCl6pOqrAMmjhzZsiHMpnIUsR0X316y3FkohDhHZtyAlkK
3+IBcVGnkIk9Noxz2HYaWQrPCTcyd0ATJX9v6jz4LLKp7/Gb6xWykInJ6Vtc
R2hT34+vuWcqNFHw55u3F5xDliKkx4X6bc8jE/nvE0sWQpvyyrOjnsegiR+W
7nn64QVkhXuvmh927SIy8eRb23sNuIwsxbb+TedOhCY6ldPBbg20Ka/0Kjn3
AZqoReU5AVuuIEtRq8CpSwo0sZ3fnmonoKXocMv4Y0o2MtGe/JWZb6GlmDEl
rVffq8hET8o0H9zgOrIUuv5fV2k3kImLfgVdHJiLLEWTlTE+06CJXFz7GV5B
S3Gx4Gxk4k1kYlH9+ctj0Ka+5PRlxT1ooo5y7PumechS/Dg7f0giNPH6Ir/e
JbeRFd49yupR+h1k4sdDosefhJYiyvKyVQ400Yq91Y//gJbCPT0iL+EeMtH0
fVM6Zt9HluL1zc6ON6CJftZu/eP0A2QpFtXoqdBDZKKFf35Vvl6ALMXv/de/
i0fIRJXdu3Z3eoIsxffojJjR0ETroy61rvEcWYrR8+KD50ET1SvwSiv/GlmK
Qq+eaw3QxLcPOwjtDbIUVrtKRXR+i0y81H1Pi0xoKe5umPdw1ztk4tPPk/+M
f49s6tu230qthiYa8jjjW+0PyFLc8Gvdrm4RMtHZdwl9AySyFIcd1nV4Dk08
uuuWpeITshTrvoxreAratO8XWp1Y+QVZipcTb3je+YpMfGDU2qO2xcgK1+k1
qHVHaJUPJ0YFnodWuNz2+o/zoYkrPn3a7jG0FP7dzwZGfkMmCi1p+K7dd2Qp
1L9pzl4/kYmyX2e49fuD/P+8sf/KvL/IxKuyF0aakR+wFMZ37BEETRz11T7m
ArTCp6vt73/ODJnYOKHp/XelkBXu45we1K00MnF6hW9jRpRBluLpzoT6Dcoi
E2/YkbykJbQUuTUO5VA5ZOJuoaPXe0BL0SD7e9Yac2TiIGvvfVwRWeHlZvfm
j7NAVnnE+7RWbSojK9zcfb7lUWiVC4+ErxpaBVnhG+63dsyGJuab874nQStc
Pb1c37sqMnHLHWbKp6rICs9e4x0ZXw1Z5ahXZ4+5acimeZv7pJrRCpk4ZNCN
HgegpSja+ynGowYy0YvwwylBOmQppt3PH3CgJjLRndQGQbNqIUsROy8nehU0
ceBQHydNjyzF9bba7BHQRK2CclMLoKVwzGhyaWsdZOLzd1MvP4Q27btKZXW1
6iKb8mL+Bu4HLcUHt+GvRxuQiXosSbyZCG369/58FmlfD5k4wTczdxy0aV73
xY67BU28LC0/vYERWWHvq90UtT4y8XGLQkUPrXD5fQ2q9rdBVvli1boh3g2Q
NX45sPPzUdAq35qdUH4OtMaxb+ZN2wSt49TM87OOQWucVP53rT/QKge2+Zfl
YIus8ESfIUOG2COrbD/31pHqDZE1Lk5wMHOG1nGzketrlnVA1vP149UvpELr
uPbVIwsvQGu8rWz5ipojssrapjpLtzghK7xIF9P5DTRxdmaU5yZnZIUzi9Y+
OAmt8pE8Vb6C1nhnl/5dprgg6/iRa3rTA9B6LpO84KhXI2Qd59OC+2+hNQ4u
aL9CdUXW8UL9s63ZjZE17ulk8BraBFnHtz/k9j0JrecHEVXLbGuKrONt60SD
QW7Ier6h9zn6X3NkHT8MnLlmQgtkPQ8rs2LwypbIOm46Y67Xnf+Q9dxx2LbC
19A6pqqtz+S0Rtb4xfQTVSu2QVa5gv+JAj20xp6OXfu5Q+s4/j+7Gx7Qej44
sdaEidA63mW3OW4VtMbrY3b0uwatcoeICbuHtEXW+OFS/4JwgWyatz578p5C
67lDSZmcZEY28KaZvQeegNbz34uzn5h7IOt49EvX1ErQGre5P+vXMmiVu/dS
b3TxRFa4zJ7OmZFeyKa+M765zwdoKYLHT12KTRRfTty+1g5ZiiOHo8ymeiMT
9zYo0b06IEsx/EXf2EodkYmi/9W63aETshQB5Tut8Ycm6rNi2wXrzshS1Gvc
wHcQNHHkyA/GEGiFL3VOWBsJrfLKrpt96/oim/pqz0qTu3ZBJt400S5lRldk
hQu3vTv3E1rlZ5m2fdb5ISucvXDk1KPQKluY7zT/AW16fa/2Rb+gibf0iq81
uxuyFOWcHl2+B010OcpuSu9eyFKczA34lQlNVMaz/Oba/shSmPnYJjaCJrrr
cuuFd29kKfZqDtGToIka5++ZVKovshR7hv8t1Raa6PfjUWOd+yFLcfaieccT
0MTLrafcXTsAWYqoRyunn4EmvjfarWydgchStLx/0CcOmsh37977bwYhS+HR
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
cM/IdoNfQxPn5K5sv68MshSJ82+V1C2LTLTmfFmH5eWQpbg9aYvVJuj//38l
3vMTzZGluH++StJnaOLf31IcExRkKT4VXaqilUcmXrNk9YX90FLMdigoMq+A
THy+Yk5XD2iFPZrGzBoKTdyw0r6tJdD//764ahe8KiITdxz789oWaCmabLz8
t1QlZKKnQ7v8ew0txYaN3dq2sUAmCr0Tc/gLtBS63ezeqzIy0YF29eQKaCku
jZApPlWQTTfyuaiKTtWQpag6Zf3SmdBElf9FR3yGliLlUceJ1S2Ridr5tZwY
CS0Ffx5UPx+aaFWM7tNHaCn2Nxr1dLaGTPSg/7WiJlbIUsTtHzzXE5qoUlxc
23QdshQbnXZcLlcTmai57cGObaClWN7gbGFPaNPA2ntcD4OWotuu2rX/s0Ym
lou7n+gMLUVhaYsJvtBEdqP39GyjR5aifN+WJRHQxNvOrcp4C63w7kFTzufU
RlbZOP2iV+U6yBoP/u56fQy0jpt249EboPX8e7fH0MfQOnblsLYudZE1Dmql
vWNolf/1OJ7fC1rj3qXPXVoIrePrlr4jOhuQNb5a0fv+GGiV5+Vm9+pXD1nh
l/8uP9IZkYmfHxl2Zjq0wqOrVXmyFpp430hx5im0FAFvLzV/Bk0UMGEfe9RH
lqJ+lVbru0Kbzlu/0qGZ0FLsXNlmEdkgE83+wGb6BshSJLjkrFsKTTzw4YV6
Z6GlaNq7zeG6tshElkGGvCw7ZCmc7YSXTUNkoopFMnMGtBSfi8vHpEETh476
pB/rgCzFxDltu0yHJh716KR7XUdkKaZn9rMeBE309mrfMWOdkKVYMK7h5oPQ
xK9fdj7UwRlZCve28b59oYkmXOtbfQS0FGUHBC0rgCZubjXebZgLssKNH4S4
jIEmbj2i8b0z0Kbz0vbIi1KNkIncI5OvTYOWYmHLim/vQhOXXJ7qf80VWQrf
Eov+ro2Rie5eXvzgQBNkKVbR3atlmyITTU5um2bRDFmKupXvfRgBTTTJQsnx
dUOWotndsn7+0ETdrG4Ur4E2zduDuePeQRNN/WC15m9zZCm6t4l9obZAJi6s
4jNrFrTClpkbq52FJm7X+VrwE2gpTq/PfMctkU3vFzG97wFohf/9KL2gGJpY
t+ZxXqP/kKWoPe2LtSs00cfoBWm/oaXYW2vgm1GtkInvPfT0z4OWwntu+Mbv
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
oSF2f5B1vOqN9cAUaD03O5Tc1Ocvso79OIZjoDV+tWu/R6l/yDou5W42sQha
z3usp5x0px7ABv48+PfpjdBG3uZx9WQitA3vf79p8ntoWy7/X5Ok6mbINmwz
7XKqAdrIX3KejImGtuG1k3rlxUEbmXoX9P0fXXf+VtP3xQF8izgoThxcunJd
V5I0IFPYK0kRIrNUMoVoMCclEUKSeVaSIXMiQxpMGTKUDBVK5rHtU8bQ937/
gPf97fU8Pc85z91rr7Xev3RrGiBrqFtq2ao60FpakdRn8TBoHdl2nRewHlpL
tb48uHIaWkOG5BJUDK2l3caGR/9Ca2hKVfItw1rIarI8v/P0BmgNBWT6fauE
VtPl4Uo7L0NkDRl1rpl+BFpL9Se6VJZA62ho9ePVzWsja2nCvmNXO0HrKPrU
o8NDoc2p0YapW/yhLWhKeaIcAG1Ob78ez46B1lHHeZnNWB1kLSX+tDpUD1pH
nsPqVnaH1lLrMe61E6A15PHkZtN0aDV1elpcIwtaRT9D541rJCGrqVG9Ve1a
QKuoo+PRXtOg1bRnwzWaC62iPhR0fD20muq7n631H7SGJvkv2j+vLrKWPnc0
e/QLWkf2gSPaR9RDNqcOmR/N44yQdbSwoZ3mFLSW+keGHPoFraPBFTu3WBoj
aynrT9v0NdA66r7EIPo6tDlV2b8Z8hVaRzu4OvdVA2QtndxzamA1tI7Uf0LD
5zRE1pKqV4eAETKyht4vbzp7AbSaPiWfUj+B1lAn76thrU2Q9fUWMv9JOLSK
hvuxuIPQasoYl3cgBVpDroX9991vhKymAQO+FUY0RtbQ8hCV90wFWU29RnwM
DoTW0Pk/HXuGQ6up1suifUegVXQvfpRndRNkhdQ+mY/imyL///+Vz2l2C1qi
PSkJe39CM+qXsOZCs2bIgo/o+sijGpqxJ7szg1upkAW/MltrfQOasQ2hg8tK
TZEFr15mesdLjcxIzmw59wK0RBHvLLYYt0RmlODQrNlVaIna1ahoE2yGLJN2
pWS/DFqhp27RD/ZAq6hz4quvvq2Q1VQZ+YofgdZQ4339s35CaylYmu9yW4Os
IZ3Dj1cWrZG1VOWaP8ZYi6yjyf+GHMXWUskcmSZBa8jy6KXCXm2Q9fe9e90I
tQ5ZRcGF6dbx5sj6vBP7u7gEWqa36c9zarRDliggwFA1FFqmErdtHVdCK3T0
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
VtONy7//XYFWUcCzc72eFSCr6fCMJgVuD5FV1PLzlr/tHyOrKd7/U5IltIpc
R9bwWgGtphXJknsRtIqKbxxct/4JspqqH/hvOwGtooppZondCpHV1GXTTYMS
aA2d25vU+j20mh5c2dr2M7SKvhTv3+9YhKzQs7CZfu7QKhpr9igoCFp/330M
J/kXI2soLf/ABvOnyFra87hx8B5oDSX8XjXxB7SWmoecOvjtObKGwi+mpHiV
IGupa3WzK0egNRRo5BSRDq2m7/NS44qgNTQv7IZveCmymp6ntH60BVpFbVva
70qEVsjx+mI6Ca2iZ/1NnK5AK3Tm9vCPujJkFW31LyqbBq2mejWyI4qgVTTD
zzW55ktkNY1YZT7MFVpDD33rFByC1lLGDSttAbSOnrXyrfkXWku9r7hlhL5C
1lBl/LM2O6G1dLPJFDoAraNu5if/ZkJraYWFU17318gaajvDx2gWtJa2bgwL
3wqt31dvWNXKgFbTtn7L2bc3yCq62GqSiHqLrKZeVtPnrH6HrKF1o6P9jd8j
aykq23aBJbR+X4196ur7AVlLrZIX2+yB1lCNXUPczn5EVtOc8IO6TGgNOU+5
+fHwJ2Q1fdvvprP/jKyhgscJjQdAq6nPcQ+nCV+QNVS2r3jkfGg1rSWv4zvK
kVXke7prj0vQaqq9ecrYm9AqWmVkZHkXWk2nmpUO/wGtoWYDNy2aK5C1lJbZ
dfASaA0Zvf4Ulg+tpjbLby4z+g9ZQ4d9IxQ/aDWVTG2avhVaRblHKgP3QKtp
f4XHuwvQKioYbTKqBFpNb0L2eNeoQFZRxPtmg1TQCvH4O119oFVkMKbs2MhK
ZDU9XfD5v1vQGjrbtF5GMbSWNq5rO2HjN2QN9W2/0e8qtJrEye1jrn9H1tAN
i8heDX8ia+lEPVdygtbQ7n42zzv8QlZTfZt2lSOgVVQvp/3FWGg1hTgv6Lod
WkUvg6vGm/9GVqjXTuvEvtAyzfnn77AIWqEOYbTuBLSKLk9b1Na3CllN46JP
eC+A1n/fzp36VkNryT+ryYsLf5A1FKvTPLoIrSZq51Kz7V9kFfXcmV+jP7Sa
WqzwK5kNraGlMza4rofWklXxxnmnoDVUv7TVUst/yFradPyxjye0htxPfLz/
AlpNtm1/hjeqRtaQof0qm1bQatpV90fmaGgV7b75acQ+aDWlm3jOj2bDgTU0
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
Sz8AzdiOo2adj1ghC37x6repFdbIjH12P3/oIbTgJUvKXjZui8zYOuf+NUxs
kAXv+bJLvbnQjJ3XNfl7BFo/r+SaA09DM7a1JPjSl3bIgleuPtezsy2y/nlv
futx8/bIgg/a9mjYDmhGFje7/DoDrT+vrkUFxnbI+n2R8KN0CrTgLcpTfFZA
6+dNZo1FsfbIgls0WtvwBDRj2Qm1LKkjsuB2SWOXHYNm7OnB390XOSALHj5k
amEBNGMLa00cZOyILPj8U19OJ0Azemzf7Kd/Z2SJul+s0Wc6tEzt53g+mgct
Ub82fzOvQjNaXf7z7HVowRM9xmefcEZmNPTJoKa/ofV5Z35g67/QjHKcgr3r
uyAL/nL2v4Km0Prrvf7uxglowVveXGZwFpqRYYzHCEdXZMFrafwtgqAZhdkk
fM+AFnzUlzq8dxdkxpq0mTb9C7TggcF7jB3ckBk9abe5nhO04P2GbotxgWbs
fsNBDxZCC151UOyZ4Y7M2LeBXibnOLLgvF1m34aEzKjj7alvpkELvr7T9joJ
0IzOa62nv4KWqENRzZ85Hsgy5RSvdo/viixRu++RkbnQjIq6uGS6dUMW/JP1
wXs+0Iy+3KsfOwJaf71HKjZMh2a071POwsXQ+n2/JN27EprRf84N1v+DFrzQ
fXFB1+7I+rze1n1kfU9kwTv3NUlxgGY081G3HyHQgtdZe7t1IbS+L146HtnS
C1lwN6v59dZBM2ahbH3xEVpw5fKmBs49kRk9vew3PhZaon3d05stgZZp5aeh
c/ZBS+TcanOd/9F13381vn8cwC9F3ajc5Y6DE6ejkkRmhFzvyEpGCNEQUWZm
KXtGhbLKiMqOykr25mMVIU0jKxSukLLyPd8/4PXj8/E4j8e572u+Xv1w+got
040DjcbrD0RWaLj+LC5Dy2Q6PXbgAGiF/v5p3CAKWkUvarIeXHVDVijy/DB1
DbSKWM7Ga20GISv0fOS4+uHQMtW8j9hyDFqi9pu1jnehZTrhN6nQyR1ZooSi
TyvXQ8vU/d29/oegJVIVBd64Bi1Trw57yuIHIyvUam7gzF5DkGXqNnterBu0
QgsayBeCoGVKjLB6sH4oskIBVTf/XYOWaXvdK1NGDUOWaJCtxtAfmtGJtNcF
O6Al0juyuVs1NCPjFPNZbTyQJRprbH5lNTSjBU+cQvKhJTKMGUldhiMz+nPl
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
UdAqz6xl5vMQWmPvf6XFT2ORdTy6z4+iyAPIeuZCa6VGHLKOl07MX2YP/f/f
d+rQ3w1a5a9XXo4eAq3wNtfq/UOhid3zu339Ay1Fg7nZ35bEIxP5zpj5eA+0
FDMHWExMgSZq6VU08dFBZCmG/zB1egVNVLjVfM2uw8hSvPJKME2AJhr0cfHj
+UeQpSj5U6f1Smjj9YYNv/IJWorXx/dvr34Umai95+8f7ieQpYi3aTJ4IjTR
x1v1B5yAlqL3lJxb56CJ1495b50HrXDFRefuxZ9EJpajsjduOIUsxZ68LVFH
TyMT913yPdLiDLLCg5IPua+FJrapVuRdAK1w7tGpoZ3OIqt8Nb2o+81EZIUP
lnlxouo5ZOLuTq6byychS+E2c+mRUGii/oZ3RQ+hpQi6/btcmQvIRK4VW+6L
SUaWonBmYu9YaOIV+vRVqdBS2IQ/DTC/iGx8pV+/3gRaCnm91wE3aKKx166W
2QMthe/G8iO/QBP7jden215CVtjiUUvXqdAqdxn1+P5qaIVrli8Tdwpa5Rk5
q+brLiMr3DM+0tkdWuWOIcvn7oNW+NCA9HEjriAbz1ur8VPuQCv8OMMsTruK
TPz6TXzNntBSfPPo7jcPmvh5WA3bldBSLKv0flD1a8jG50W5H4W668hSHEux
vdsBmsg04ESr4BvIUjxtfT7wATSxbvyQ451TkaW4GtRmazA08eMwj7AL0Aof
dt7LX6GJPyza+8bxJrIUy8sH5uyAJn4w7tMcwy1khT81CH7eEpq43LOgUf+g
FY6NMvS1vY2s8vcWdnU2Qhv77u2okmfQOj4wecyYAmiNFyfUNf0LrXJss0z7
bXeQjfu93v4D/6CJW59uPaz6XWQptt/9mh4KTdSz47ejFe4jS/EyrubiVdDE
xzMb572CVnjfSpOeq9KQiWcu6hWyDVph826mFqegjdebXG1nJrQU7Zo1bFMM
bVyRv2MGnnyALEXa8dPvUqCJax4pbpADrXDEfbMO8Q+RjfPqmJX5PWiFtfzW
Zb5AEz+Nm7qzVgayFAerV170EJp46uCtHXOhpTh70dNuwCNk4j0TlmzzgTbe
b/2g1BePkYmtv6wKoSfIUpg0qFzYE5poJX056QUtxY26rie9oY2vh5NGxUBL
setssNyVhWzMm8fuL1aeIivcdo7Z6hbQKre4uHLzJGiFb93c5tjxGbLKnf99
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
WeWToGX6P6c39WE=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 125.30260579456338`}, {0, 22.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.717691333314707*^9, 3.717756872042647*^9, 
  3.7177587063810263`*^9, 
  3.717765710713564*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4QmfcRvsN2ccQ+h4HQpDpTX3fgoYSho1hj5mruwuDAV9P8qQQ+/5QiHn7OUW
jZzdhXXhIEeQlCdyyKndjZz6llEhB1XB3t85kIObckIh58yllp83cuhVe3D2
IY38UmmSHyCP/QW+cNZHF1uxTvkaqpC8TIrvMwUg+BIEXSj5WcuP63qyjRT6
rTcLNyyjPnvhB2FM+f6g8lGUSKQQ3N+guJTeqhI+hDF44kPU/vcqKXVkHAus
29YLzRS0U+HJ9zce+KI36aQtpXOqFS2ZiuK1ovhOECHuv1NJSS6oZzrcnW+U
21d03ejU6NTo1OjU6NTo1OjU6NTo1OjU6NRTp+gEIyZTw+tURsp5FTqdrba5
Z+4sC1un2UJ5IXSKk8eX0OlnQgmkU/IzGqlOz1e3unX6pPfFaHRK7fTQqePN
hkuTY1BH4ahxb9H1V6HGaHWgSsKms2GrkUJaBFGjmMG/jBrRG4vUiPFpRqNG
kd+tRtGg0agxPvdsMDV6mmYk9DzrlzF5qhvaYWDQPwa1aD34LWhsfSxDTtB1
teGRLBkrdEC9GUdnvUH/kH6fpTSqa4HMRy+nRPnQ+ugJ3HnwBLLUYT6kSZ8V
0gTZ3u/3+/6ostDhY/h+io7OOnOphcRF7+eb73cPp8SDp62k99t7ApSIUsf4
IFyJeFwJBlchJar/HUo8yYIZsVhVpMTevn6txLYufRILOvSRElEkjzp7JRW7
lXi9uQPVE0KJ/86yASG0iUpe5HWMTnIknGnL8ikWh1s76Ac/QRW8VqFcaET7
66H4Z6hXWaQSchQsunhbR3hiRETv0fD14DAq4bF5yGWPq+Ts5bukkn9QJZG/
srJcrx6N7jFp+/6k7pFo8Yn/zcjVyNXI1cjVyNXI9SckV3EPR1EqBpkS0zi4
XP8olIRxhExxIfFT29SuJYwjaLy3MOekU8JpTgnT3oZRSri05l64Ej5V1fIj
SVgKmMtVnVap5Vpx/UGAXMVIluQazVCLn6tiPExyTVSHEFpnKdpypf0Hr0iu
YtoSrlzxCaOUK03FPrBngKoBo4KvW8zt3dZ+MNwUg7M9/P7DtGMk5kTmFuMW
c9rXpQFixrmqmyCiGEFgnDac+ojxN7UYJwB468XAoKeYL17TBEFJxehei9k/
NCSTbfjukmY7MZv2EvOt1sf00NzvLgXCVyWL33hWw5fa/xISprbQviEUhxAZ
SThl64WgEl6+o8xTwh85JBzBJez7rYcIBb7eV4/DfzFCJo8h6yUrAXqSCwuo
yUzdSrZs63ktqy++MrIysjKyesNkFfSoF4zcl58LKfExEBufBDkHr0DXgCPo
mBFtOKJ1Rwb2w5OqNRCblgcNTwZhaKANSnMTYOXpdhgEev1q5Psy8u29dQWq
7z+HISXA501fQkLaOej0v3L50oHWngOg7dYAaMZLyrfs2r1w5FtU0Ry2fL8I
lO9StbwUIN8ILl/t59dXvwFiU85AhyMi/a9HL8nF604HlSRJGU96fhlJnrva
Go4kdxy7FpYkaeytfCAdVaHQ48PCVcDz7gFYn3sU6rr6YbCnCQpXfA6pBQ9h
YBg6wLUN3EvNhTzoH5JT0OU7y2RiDAQuNDtaIeMyC3p58pZN8xAyPpbKFCNw
EjIuHeCAHA+3xr8fdvZ6ClncJyFjckyKixt0b6ZQM8YXx8kxwXXNt5Vu+VrT
gyBhmgEGHhyFpMXpkJWSADFxyyDnQCW09Q/5gvZo0hd3kmoKRcDAS8V38I1W
qtxvlqRK8c1Rqr/j4OJrbP/HQ3ZCALRWgvWicklOBFoup0lWcUFC80JvHeQk
bobGPiBH35+NaMhEAyKwDjyAw0vnwKzoaIiWnwWQWdnNTsv6GQkpxKtF02DT
4J9ng/k+J/xcufnojW+w/ZI17GbyY6LwgztPqJlLlbfHm9bMIMMnHPDS2Gai
at6x0iaoumHFPcIDY/DMFWr67MxCR9Nb257qpmcqt4rozMKQTc/aXSHjhDW2
Praa7rP8LzD8Td+LAd//Va0uLLPH8t09L3irM3aUvUyrsUbU6vfU0+audBwV
MlEl3XjIOtHs46xiz0b9q7rH8KIbcLW+TRcpxsu8ASoylmmAaYBpgGnAG94A
x0KkV7XnrHgTqx1E7ngwE/ZxjgZ4y528Kz9dc0o3ALOqs510A3Dx9YJ1LJ5u
QG1Th8yLPX3/gJ8agMugeGwUb0BF3QP0UpVOeyEa8GcPkExJ0pWlLb4JG8/6
vlT36lusNzspWy/44kzJpuQwSpYFh1kebien8nA/8ghq+jmLUslKphAHGTtK
A0pO214aTsn43s8uOY9K5iccukvGQ9pMyabkcEp22Mfn60+9ppp+rgIP4DpQ
1LJ8Kvl5/6Cc/hwva9IlX7/dIV3UduRfC6fkOOUSw6KZwh//irLJ2egLaNkT
C9Ezo8V/0dHRvvGwYHk5PPYPQGflbshKSoTExBRYe+QG9PjB8/12OE/CfEPQ
cy0XlmSfg45BoENLBzvOQmb8WijtGoSh/lYoSI2H3JqeoC9Dw3mYOi1uoBPK
tyVC/JqjUNPerxbwQp5uPsoHWiOat0XhfdByfjesiEmADUXN0DcU8vDlUE+j
FR98kutplgomgb+3Ho6siIUVxfehNfjxsPZ62vuqbPLkmruySP7tFp3QU91O
2HyoVWDDuvoacyE+/Ty0VIR1OKWzMRHsvO3bPvnN+w5F9bcegKVxW6CycwCG
/E+gdk8CxG9vhN7wjvUL+2n2ik5ryTbIXBoLsTFxsGxTATT0+iHIuWghEB/8
UcHt8WeWh1F8hN4uNZLS8bR3k+cNyOPQ5GhK73sxAI+6enEKN2we+fPffkLf
21+HmUv+Pcv62/eL/wcEEe68\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"usuarios", "[", 
     RowBox[{"[", 
      RowBox[{"origin", ";;", 
       RowBox[{"origin", "+", "width"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "usuarios", "]"}], "-", "width"}], ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"width", ",", "10", ",", "50", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.716989425924518*^9, 3.716989468804864*^9}, {
  3.716989512387177*^9, 3.716989518726475*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`origin$$ = 1, $CellContext`width$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`origin$$], 1, 
      Dynamic[Length[$CellContext`usuarios] - $CellContext`width$$], 1}, {
      Hold[$CellContext`width$$], 10, 50, 1}}, Typeset`size$$ = {
    360., {111., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`origin$1911$$ = 
    0, $CellContext`width$1912$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`origin$$ = 1, $CellContext`width$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`origin$$, $CellContext`origin$1911$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$1912$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Part[$CellContext`usuarios, 
         Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]]], "Specifications" :> {{$CellContext`origin$$, 1, 
         Dynamic[Length[$CellContext`usuarios] - $CellContext`width$$], 
         1}, {$CellContext`width$$, 10, 50, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {168., 175.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.717691333341948*^9, 3.717756872058763*^9, 
  3.7177587064104156`*^9, 3.717765710777573*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Punto 5: Comparar la curva de valor medio teorica con la practica\
\>", "Section",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.716989752915984*^9, 3.716989781296323*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["Teorico", "Subchapter",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7169916079205713`*^9, 3.716991611524609*^9}, {
  3.717597532286476*^9, 3.7175975367982063`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "ro"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ro", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.716989783220152*^9, 3.716989811834632*^9}, 
   3.716991788192589*^9, 3.7172422918169928`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulado", "Subchapter",
 CellChangeTimes->{{3.717597591739798*^9, 3.717597594213851*^9}}],

Cell["\<\
Se calcula primero cual ser\[IAcute]a el tiempo medio de espera para una \
lamda y un mu concretos, simplemente calulcando cuanto tiempo esta cada \
paquete y acumulando todos los retardos para luego dividirlo entre el numero \
de muestras.\
\>", "Text",
 CellChangeTimes->{{3.7175985535785713`*^9, 3.717598609813306*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TiempEsperaMedio", "[", 
   RowBox[{"lamda_", ",", "mu_", ",", "numMuestras_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "acum", ",", "tiempoMed"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"acum", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"InterArrivalTime", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomExp", "[", "lamda", "]"}], ",", "numMuestras"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ServiceTime", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomExp", "[", "mu", "]"}], ",", "numMuestras"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ArrivalsTime", "=", 
      RowBox[{"Accumulate", "[", "InterArrivalTime", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DepartureTime", "=", 
      RowBox[{"FifoSchedulling", "[", 
       RowBox[{"ArrivalsTime", ",", "ServiceTime"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"n", "\[LessEqual]", "numMuestras"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"acum", "=", 
         RowBox[{"acum", "+", 
          RowBox[{"DepartureTime", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "-", 
          RowBox[{"ArrivalsTime", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}]}], ";"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tiempoMed", "=", 
      RowBox[{"acum", "/", "numMuestras"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "tiempoMed", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7169909953329*^9, 3.71699100733852*^9}, {
  3.7169910455897284`*^9, 3.716991340143499*^9}, {3.716991415452401*^9, 
  3.716991461975822*^9}, {3.716991493665827*^9, 3.716991545901581*^9}, {
  3.716991687674356*^9, 3.716991692286107*^9}, {3.716991734335204*^9, 
  3.716991752775124*^9}, {3.7172425062442217`*^9, 3.717242539341028*^9}}],

Cell["\<\
A partir de la funci\[OAcute]n que permite calcular el tiempo de espera medio \
simplemente se realiza este calculo para diferentes valores de lamda con un \
mu fijo para poder as\[IAcute] ver el efecto de la variaci\[OAcute]n de lamda.\
\>", "Text",
 CellChangeTimes->{{3.717598613023589*^9, 3.717598677322947*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalculoTiempoMedio", "[", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mu", ",", "lamda", ",", "tiempo", ",", "array", ",", "ro"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mu", "=", "100"}], ";", "\[IndentingNewLine]", 
     RowBox[{"array", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"lamda", "=", "2"}], ",", 
       RowBox[{"lamda", "\[LessEqual]", "100"}], ",", 
       RowBox[{"lamda", "=", 
        RowBox[{"lamda", "+", "4"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ro", "=", 
         RowBox[{"N", "[", 
          RowBox[{"lamda", "/", "mu"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tiempo", "=", 
         RowBox[{"TiempEsperaMedio", "[", 
          RowBox[{"lamda", ",", "mu", ",", "10000"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"array", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"array", ",", 
           RowBox[{"{", "ro", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"tiempo", "*", "mu"}], "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Partition", "[", 
       RowBox[{"array", ",", "2"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.716991828067127*^9, 3.716991831309409*^9}, 
   3.716991866770688*^9, {3.716991920261832*^9, 3.716992208775941*^9}, {
   3.7169922674614267`*^9, 3.7169922678607197`*^9}, {3.7169923003820744`*^9, 
   3.7169923063986273`*^9}, {3.716992358341085*^9, 3.716992359996171*^9}, {
   3.716992547346292*^9, 3.7169925705926*^9}, {3.7169926468536386`*^9, 
   3.716992647228127*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"CalculoTiempoMedio", "[", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7169922152172728`*^9, 3.7169922328378897`*^9}, {
  3.7169923803127403`*^9, 3.7169923995052013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.716991799724266*^9, 3.7169918071611977`*^9}, {
   3.716991873720683*^9, 3.7169919106189957`*^9}, 3.7169920303421793`*^9, {
   3.716992408757724*^9, 3.716992417193634*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       
       "]]}}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1h1RT76jn3J84I+2C/Q671deCOdfYMzdsu
+vp8tJ81EwR22mtGVzdvb/lo/yYQpOKg/RJOLl2VkE/2XNcXF9hyHbefz2mk
0hv52V4zpv/QV40z9olhjh5Xbb/YLwHKXl98wZ53rlsTU/xXe2MwuGzvbDOx
PmrVN/vDXzWAOq7a1+1f9dtR/Id9ENgBN+ztEv8srU/7af+wCuTAW/YdqVYP
5SX+2BeCjCu4a/93qm1KvsI/ewYweGB/tXr5K8bjDA4eEA32WlL/TztMYXQA
uSam/5G9takxD0s2kwPYudcf299v2dNxM4nFQR7kXbmn9js6C23KYtkc0sDg
mf3nCmUb46dcDqDQEVn33P5nz/yfjbcFHb6BnPv1hb3g/Vv8KzX5HcDOsX1l
/yRR5I75LHEHsHGtr+1Pzln3Y/M/GYezZ0Dgjb3aCqcyp4MKDuDgFnlnz3f8
jPCHWeYO4OCKeW8f3H9mkvUNEwcArse+yw==
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 12.167932093686922`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7169924128917933`*^9, 3.716992418090558*^9}, 
   3.7169925812241783`*^9, 3.7169926530097218`*^9, 3.717242105796678*^9, {
   3.7172422493973503`*^9, 3.717242261213429*^9}, 3.717242523762535*^9, 
   3.71724275292083*^9, 3.717242791054893*^9, 3.717242898741521*^9, 
   3.717242936777426*^9, 3.717245733641032*^9, 3.717245949079588*^9, 
   3.71724614895021*^9, {3.717246325654545*^9, 3.717246350518664*^9}, 
   3.717247167664641*^9, 3.7172479220336447`*^9, 3.71724826430812*^9, 
   3.717249284526443*^9, 3.717249328449562*^9, 3.71759512318419*^9, 
   3.717595431161059*^9, 3.7175957751156883`*^9, 3.717596646091332*^9, {
   3.717596913635283*^9, 3.71759693163865*^9}, 3.7175969677620573`*^9, 
   3.717687540570559*^9, 3.717687648569111*^9, 3.7176879149757442`*^9, 
   3.717688078950831*^9, 3.717688149974285*^9, 3.7176913361639843`*^9, 
   3.71775687481733*^9, 3.717758709131124*^9, 3.717765714204103*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Punto 6: Probabilidades de estados en 3 formas -> te\
\[OAcute]rico, simulado y en base a la propiedad PASTA", "Chapter"]], \
"Section",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7172429664871407`*^9, 3.717242968860093*^9}, {
  3.7172430653935623`*^9, 3.717243120833254*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Teorico", "Subchapter",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.717243169700512*^9, 3.7172431711636057`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProbabilidadTeorica", "[", 
   RowBox[{"lamda_", ",", "mu_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ro", ",", "probabilidad", ",", "probEstadosTeo", ",", "i"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"probEstadosTeo", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ro", "=", 
      RowBox[{"lamda", "/", "mu"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "<", "30"}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"probabilidad", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "ro"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"ro", "^", "i"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"probEstadosTeo", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"probEstadosTeo", ",", 
           RowBox[{"{", "probabilidad", "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "probEstadosTeo", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.717243222497591*^9, 3.7172433673987303`*^9}, {
  3.717243400269216*^9, 3.717243401689555*^9}, {3.71724838376506*^9, 
  3.7172485497554502`*^9}, {3.717249198554511*^9, 3.7172492009400053`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"probTeo", "=", 
   RowBox[{
    RowBox[{"ProbabilidadTeorica", "[", 
     RowBox[{"80", ",", "100"}], "]"}], "//", "N"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.717248515011361*^9, 3.7172485402926598`*^9}, {
   3.717249206246956*^9, 3.7172492066772947`*^9}, 3.717249304497388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulado", "Subchapter",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.717243482829136*^9, 3.717243483863594*^9}, {
  3.717598694948719*^9, 3.717598695377757*^9}, {3.71759873820163*^9, 
  3.717598752490161*^9}}],

Cell["\<\
A partir de la lista de numero de usuarios y en que tiempo suceden los \
cambios se van acumulando los tiempos en los que el sistema se encuentra en \
un estado concreto (un n\[UAcute]mero de usuarios) y luego se divide ese \
tiempo entre el tiempo total.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7175987570982113`*^9, 3.7175988493668423`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProbabilidadSimulada", "[", "usuarios_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "proEstados", ",", "tiempo", ",", "n", ",", "i", ",", "acum", ",", 
      "prob"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tiempo", "=", 
      RowBox[{
       RowBox[{"usuarios", "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", "usuarios", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"proEstados", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"n", "<", "30"}], ",", "\[IndentingNewLine]", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"acum", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "usuarios", "]"}], "-", "1"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"usuarios", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "n"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{"usuarios", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "n"}]}], ",", 
             RowBox[{"acum", "=", 
              RowBox[{"acum", "+", 
               RowBox[{
                RowBox[{"usuarios", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{
                RowBox[{"usuarios", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"prob", "=", 
         RowBox[{"acum", "/", "tiempo"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"proEstados", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"proEstados", ",", 
           RowBox[{"{", "prob", "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "proEstados", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.717243533556904*^9, 3.7172435800705423`*^9}, {
  3.7172436309271717`*^9, 3.7172436582814713`*^9}, {3.717243693680147*^9, 
  3.7172437325521917`*^9}, {3.7172437846545563`*^9, 3.717243815595647*^9}, {
  3.7172438457278757`*^9, 3.717243896496853*^9}, {3.717243933827656*^9, 
  3.717243963320705*^9}, {3.717244013264584*^9, 3.717244073624196*^9}, {
  3.7172441194613323`*^9, 3.717244164458427*^9}, {3.7172442416243687`*^9, 
  3.717244372379229*^9}, {3.717244411236611*^9, 3.717244517345725*^9}, {
  3.717244559739468*^9, 3.717244654164628*^9}, {3.717244778887072*^9, 
  3.7172447793715076`*^9}, {3.7172454018711653`*^9, 3.717245402215231*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"probSimu", "=", 
   RowBox[{"ProbabilidadSimulada", "[", "usuarios", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.717248354690364*^9, 3.717249217099861*^9, 3.7172493015773373`*^9, {
   3.7175987318798513`*^9, 3.717598734675024*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PASTA", "Subchapter",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.71724496929246*^9, 3.7172449700104637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NumUsersArrival", "[", 
   RowBox[{"arrivals_", ",", "departures_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "users", ",", "usuarios"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"usuarios", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", "1"}], ";", 
        RowBox[{"j", "=", "1"}], ";", 
        RowBox[{"users", "=", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "<", 
         RowBox[{"Length", "[", "arrivals", "]"}]}], "&&", 
        RowBox[{"j", "<", 
         RowBox[{"Length", "[", "departures", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"arrivals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[LessEqual]", 
           RowBox[{"departures", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"usuarios", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"usuarios", ",", 
              RowBox[{"{", "users", "}"}]}], "]"}]}], ";", 
           RowBox[{"users", "++"}], ";", 
           RowBox[{"i", "++"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"users", "--"}], ";", 
           RowBox[{"j", "++"}], ";"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "usuarios", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.717247197779311*^9, 3.717247203532798*^9}, {
  3.717247241822125*^9, 3.717247265133934*^9}, {3.7172472976952753`*^9, 
  3.7172473071507177`*^9}, {3.717247440277514*^9, 3.717247455332879*^9}, {
  3.717595315461731*^9, 3.71759535680191*^9}}],

Cell["\<\
Para calcular la probabilidad partiendo de la propiedad PASTA lo que hacemos \
es fijarnos solo en las llegadas y mirar justo en el instante anterior \
cuantos usuarios habia y luego dividir cuantas veces hemos encontrado que \
estaba en un estado entre el numero total de veces que hemos muestreado, y \
seg\[UAcute]n la propiedad PASTA el resultado se debe ajustar de forma \
bastante precisa a la realidad, tal y como se demuestra a \
continuaci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.717598857461335*^9, 3.7175988715930758`*^9}, {
  3.717598914507598*^9, 3.717598998869104*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProbabilidadPASTA", "[", "usuarios_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "i", ",", "proEstados", ",", "prob", ",", "acum"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"proEstados", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"n", "=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"n", "<", "30"}], ",", "\[IndentingNewLine]", 
       RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"acum", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"i", "<", 
           RowBox[{"Length", "[", "usuarios", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"usuarios", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "n"}], ",", 
             RowBox[{"acum", "++"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"prob", "=", 
         RowBox[{"acum", "/", 
          RowBox[{"N", "[", 
           RowBox[{"Length", "[", "usuarios", "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"proEstados", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"proEstados", ",", 
           RowBox[{"{", "prob", "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "proEstados", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.717247531836812*^9, 3.717247705426065*^9}, {
  3.7172477584424334`*^9, 3.7172478046220713`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lamda", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muestras", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InterArrivalsTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "lamda", "]"}], ",", "muestras"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArrivalsTime", " ", "=", " ", 
   RowBox[{"Accumulate", "[", "InterArrivalsTime", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ServTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "mu", "]"}], ",", "muestras"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Departu", "=", 
   RowBox[{"FifoSchedulling", "[", 
    RowBox[{"ArrivalsTime", ",", "ServTime"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"usuariosArrival", "=", 
   RowBox[{"NumUsersArrival", "[", 
    RowBox[{"ArrivalsTime", ",", "Departu"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.717247867711381*^9, 3.717247908684808*^9}, 
   3.7172480307195168`*^9, {3.717248313390628*^9, 3.717248326281386*^9}, 
   3.717595153717052*^9, {3.717595423379834*^9, 3.717595424156083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"probPASTA", "=", 
   RowBox[{"ProbabilidadPASTA", "[", "usuariosArrival", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.717247966843446*^9, 3.717247983571871*^9}, 
   3.7172492991221533`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CrearLista", "[", "prob_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "lista"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lista", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "prob", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lista", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"lista", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", 
             RowBox[{"prob", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Partition", "[", 
       RowBox[{"lista", ",", "2"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.717595847215275*^9, 3.717596076662615*^9}, {
  3.71759612283116*^9, 3.7175961260631857`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ListaProbTeo", "=", 
   RowBox[{"CrearLista", "[", "probTeo", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListaProbSimu", "=", 
   RowBox[{"CrearLista", "[", "probSimu", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListaProbPASTA", "=", 
   RowBox[{"CrearLista", "[", "probPASTA", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ListaProbTeo", ",", "ListaProbSimu", ",", "ListaProbPASTA"}], 
    "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Teorico\>\"", ",", "\"\<Simulado\>\"", ",", "\"\<PASTA\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.717596047832644*^9, 3.717596091320863*^9}, {
  3.717596149516622*^9, 3.7175962142388153`*^9}, {3.7175963420629263`*^9, 
  3.717596362701933*^9}, {3.717596416200873*^9, 3.717596498842843*^9}, {
  3.717599009932577*^9, 3.717599020088278*^9}, {3.71775923693605*^9, 
  3.717759237074844*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQOzZoLASXsI74N9tcg694dVR6B8Boc/Kz9e8k06
AOVzOOg6y7x+ZLYLyhdw+JjxuGPrjy1QvohD79utC74f2wDlSzh4rN8z69P1
VVC+jINVj8GjvsqlUL6Cw9Rrai+49RZC+UoOu/dev3m/ZjaUr+IwNaXyYf3f
qVC+moPgK93GmdMnQvkaDk1lnhmHVHugfC2H2doL22a3tEH5Og5iYc/nrWdu
gvL1HPZ03pi+6VINlG/gMP2Km9tXvnIo39BhjfOli7FFRVC+kcOaS9v8Tzbn
QvnGDspOk3gWzkmH8k0c/GfzcW15nATlmzo8ixMXULCMg/LNHII2CTls1o2A
8s0dVvStmHkoPBjKt3C4UXvr64VPflC+pYPw6XVHHA55QPlWDgI2n8xmnXOG
8q0dpBIC9n3bYA/l2zh4bF72Ly7KEsq3dZh/6PU/bw8TewBTJ4gu
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQNdN6OSdOacsofwPtg/Kcnsdhc4CuUzOOQe/tf5
4PgBKJ/DITOdbcOVD7uhfAEH3tvzlD5mboPyRRzyO2SuWURsgvIlHF69Lgyc
l7kWypdx+KYw3/yH43IoX8EhukN6/wuRRVC+ksPfyKedq3hnQ/kqDvq6nGW3
gydB+WoOOt8/TWit74HyNRxSE8vvztRohvK1HFTb1k1d+6ccytdx4I2+Eaaw
vQjK13OIuMa/N6ytAMo3cOC+rhkgXpEH5Rs6xFpU8kdvi4LyjRwUk/kORgSF
QvnGDvxbnE8903aE8k0czs7bekL6gymUb+qQV8JgcNPBGMo3c4hQMy37rsoL
5Zs7MKAACzS+JRrfCo1vjca3QePbwvkAC7hiaw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQOrpz1as6/8lD2E98F+28kdf0+IHIHyGRyS7E7b
aKYegPI5HCxVXq45e3YHlC/gEJZxxaxJcAuUL+JgED7p953r66F8CYeLdqc+
8yxbCeXLOEyr0ZWPK14K5Ss43DH5rzfFeCGUr+Qgb7TLzG3nLChfxcFufrPX
xClToHw1h+VrG3pfBE+C8jUcFu9YfEQuD8bXcjD/zaVsbtYF5es4MOh5iwe9
bIXy9RwmPNFf+P1aE5Rv4LBmUWzYJksY39Bho94DLVWRWijfyKGgPK13ze8K
KN/YQTtpq5Hwp3wo38ThwuyVdgXv06B8U6j9XlC+mQPT3WeljxIdoHxzqLwW
lG/hwIACLNH4Vmh8azS+DRrfFs4HACvbZ8g=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 29.}, {0, 0.20789103319630114`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 29.}, {0, 0.20789103319630114`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Teorico\"", "\"Simulado\"", "\"PASTA\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7175963564452953`*^9, 3.717596363448984*^9}, 
   3.71759649972162*^9, 3.717596647135682*^9, {3.717596916500511*^9, 
   3.717596932493452*^9}, 3.717596970692276*^9, {3.717599013498431*^9, 
   3.71759902108587*^9}, 3.717687543490649*^9, 3.717687651522406*^9, 
   3.717687917861813*^9, 3.717688082051016*^9, 3.7176881530613737`*^9, 
   3.717691339091074*^9, 3.717756877932084*^9, 3.717758711932271*^9, 
   3.717765717912768*^9}]
}, Open  ]],

Cell["\<\
En este caso se ve claro como los diferentes resultados son muy similares, es \
decir, la simulacion realizada es correcta y ademas es visible que la \
propiedad PASTA se cumple\
\>", "Text",
 CellChangeTimes->{{3.7175990241049767`*^9, 3.7175990714079847`*^9}}],

Cell[TextData[StyleBox["Punto 7: Rendimiento de colas", "Chapter"]], "Section",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7172429664871407`*^9, 3.717242968860093*^9}, {
  3.7172430653935623`*^9, 3.717243120833254*^9}, {3.71759669150452*^9, 
  3.717596691778512*^9}, {3.717757191907743*^9, 3.717757199003924*^9}, {
  3.7177580898116817`*^9, 3.717758100278487*^9}, {3.717758691821629*^9, 
  3.717758693751371*^9}}],

Cell[CellGroupData[{

Cell["M/M/2", "Section",
 CellChangeTimes->{{3.717599553725218*^9, 3.717599565800077*^9}}],

Cell["\<\
En primera instancia el modelo M/M/2 empieza como el M/M/1 porque le \
mecanismo de llegadas es el mismo, es decir se puede calcular igual; sin \
embargo para las salida los tiempos de servicio siguen una \
distribuci\[OAcute]n diferente en el caso en el que se esta con un paquete y \
cuando se est\[AAcute] con mas de uno ya sea tratandolos o en espera. La idea \
que yo planteo es generar un array de checktime donde se van guardando los \
tiempos de salida, de forma que no solo se sepa el ultimo tiempo de salida \
sino que comparando los indice de ambos arrays se pueda saber si el utlimo \
paquete que ha salido era justo el anterior y por tanto la cola est\[AAcute] \
vacia o no para aplicar un tiempo de servicio de mu o de 2*mu. Para \
realizarlo he hecho la simplificaci\[OAcute]n de es una \[UAcute]nica cola de \
salida que sirve con tiempo \[OpenCurlyDoubleQuote]mu\[CloseCurlyDoubleQuote] \
si hay un solo usuario o \[OpenCurlyDoubleQuote]2*mu\[CloseCurlyDoubleQuote] \
si hay mas de un usuario.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.717599655005578*^9, 3.717599702206449*^9}, {
   3.71759974026512*^9, 3.717599809288928*^9}, {3.717599922682455*^9, 
   3.71759997658705*^9}, 3.7176868998884563`*^9, {3.7176910394290447`*^9, 
   3.717691113399858*^9}, {3.717691163022896*^9, 3.7176912442097692`*^9}, {
   3.717691698593546*^9, 3.717691731019833*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lamda", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numMuestras", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "\"\</home/josu/PRM/RRT/RandomData.m\>\""}], "\[IndentingNewLine]"}], \
"Input",
 CellChangeTimes->{{3.7175998540238323`*^9, 3.717599865071437*^9}, {
  3.71759999580912*^9, 3.7176000169553003`*^9}, {3.71769073922036*^9, 
  3.7176907395353203`*^9}, {3.717691246613887*^9, 3.7176912504332037`*^9}, {
  3.717758312724786*^9, 3.7177583150151043`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterArrivalsTime", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "lamda", "]"}], ",", "numMuestras"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArrivalsTimes", " ", "=", " ", 
   RowBox[{"Accumulate", "[", "InterArrivalsTime", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ServiceTimeMu", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", "mu", "]"}], ",", "numMuestras"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ServiceTime2Mu", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomExp", "[", 
      RowBox[{"2", "*", "mu"}], "]"}], ",", "numMuestras"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.71759985041015*^9, 3.717599850701304*^9}, {
   3.717599991648699*^9, 3.717600057849456*^9}, {3.717600127939061*^9, 
   3.717600146335102*^9}, {3.717600214727083*^9, 3.717600304316646*^9}, {
   3.717600356707019*^9, 3.7176003854110317`*^9}, {3.717600424955868*^9, 
   3.717600574518121*^9}, {3.717600664873815*^9, 3.717600761736642*^9}, 
   3.717600943433358*^9, {3.717600978938128*^9, 3.717601023786305*^9}, {
   3.7176010550645247`*^9, 3.717601169373581*^9}, {3.717601211658173*^9, 
   3.71760123943501*^9}, {3.7176012826506977`*^9, 3.7176013166414223`*^9}, {
   3.717601391940611*^9, 3.7176013924154243`*^9}, {3.717601429798424*^9, 
   3.717601432805994*^9}, 3.717601504329726*^9, {3.717601624216482*^9, 
   3.717601669632907*^9}, {3.717601771639065*^9, 3.717601772010354*^9}, {
   3.717601892342628*^9, 3.717601991976982*^9}, {3.717602023034354*^9, 
   3.7176020702364492`*^9}, {3.717602132856666*^9, 3.7176021634789877`*^9}, {
   3.7176023178523607`*^9, 3.71760234113873*^9}, {3.71760243418328*^9, 
   3.717602434684716*^9}, {3.717602466934886*^9, 3.71760249317496*^9}, {
   3.717602550553834*^9, 3.7176025531311693`*^9}, {3.717602599661083*^9, 
   3.71760263039681*^9}, {3.7176027580300217`*^9, 3.7176027600638123`*^9}, {
   3.7176028211013002`*^9, 3.717602824887041*^9}, {3.717602869423848*^9, 
   3.717602878655856*^9}, {3.71760291473564*^9, 3.717602920740059*^9}, {
   3.717687087514461*^9, 3.717687272051387*^9}, {3.717687302805825*^9, 
   3.7176873180697107`*^9}, {3.71768736129846*^9, 3.717687378625825*^9}, {
   3.7176874184975758`*^9, 3.7176875200116262`*^9}, {3.717687682681217*^9, 
   3.717687746998477*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeparturesMM2", "[", "arrivals_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "users", ",", "checkTime"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"checkTime", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"users", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"checkTime", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"checkTime", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"arrivals", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"RandomExp", "[", "mu", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", "1"}], ";", 
        RowBox[{"j", "=", "1"}], ";", 
        RowBox[{"users", "=", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "arrivals", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"checkTime", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "<=", " ", 
          RowBox[{"arrivals", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"users", "--"}], ";", 
          RowBox[{"j", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "==", "i"}], ",", 
            RowBox[{"checkTime", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"checkTime", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"arrivals", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "+", 
                 RowBox[{"RandomExp", "[", "mu", "]"}]}], "}"}]}], "]"}]}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "!=", "i"}], ",", 
            RowBox[{"checkTime", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"checkTime", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"checkTime", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "+", 
                 RowBox[{"RandomExp", "[", 
                  RowBox[{"2", "*", "mu"}], "]"}]}], "}"}]}], "]"}]}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"users", "++"}], ";", 
          RowBox[{"i", "++"}], ";"}]}], "]"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "checkTime", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.717687727957621*^9, 3.7176877494881573`*^9}, {
   3.7176878731412897`*^9, 3.717687874258136*^9}, {3.717688283566615*^9, 
   3.717688307654353*^9}, {3.7176883963038883`*^9, 3.717688489144188*^9}, {
   3.717688542543598*^9, 3.717688543828122*^9}, {3.717688622033845*^9, 
   3.7176886225013313`*^9}, {3.7176886687700043`*^9, 3.717688678054727*^9}, 
   3.717688717593011*^9, {3.7176887489804583`*^9, 3.717688789467496*^9}, {
   3.71768890981645*^9, 3.717688912122129*^9}, {3.7176889711254272`*^9, 
   3.717689032726818*^9}, {3.717689139458619*^9, 3.717689141142891*^9}, {
   3.7176892896958313`*^9, 3.717689290742618*^9}, {3.717689350479364*^9, 
   3.7176893561943073`*^9}, 3.717689474611834*^9, 3.717690109763338*^9, {
   3.717690146326704*^9, 3.717690186068569*^9}, {3.717690304786189*^9, 
   3.717690313393911*^9}, {3.717690352301094*^9, 3.7176903817287493`*^9}, {
   3.717690520087687*^9, 3.717690549859058*^9}, {3.717690604921472*^9, 
   3.7176906091725817`*^9}, 3.717690669195838*^9, {3.7176907587333107`*^9, 
   3.7176909335689983`*^9}, 3.717690975729186*^9, {3.7177577159928217`*^9, 
   3.717757823659575*^9}, {3.717757975763432*^9, 3.717758000563753*^9}, {
   3.717758039037141*^9, 3.717758043562933*^9}, {3.7177581286039877`*^9, 
   3.717758225062438*^9}, {3.7177582809271393`*^9, 3.717758283888708*^9}, {
   3.7177583674989967`*^9, 3.717758420662855*^9}, {3.717758465465913*^9, 
   3.717758482866496*^9}, {3.7177585249091187`*^9, 3.717758532917694*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Departures", "=", 
   RowBox[{"DeparturesMM2", "[", "ArrivalsTimes", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7176877535422583`*^9, 3.717687771313547*^9}, 
   3.717691025639718*^9, {3.717691257841198*^9, 3.717691264524704*^9}, {
   3.7177578324054203`*^9, 3.717757834673458*^9}, 3.717758015761551*^9, 
   3.717758228491503*^9, 3.717758490192441*^9, {3.717758777908543*^9, 
   3.71775878005354*^9}, 3.717758890702116*^9, 3.71775894686635*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeparturesOrdered", "=", 
   RowBox[{"Sort", "[", "Departures", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7177587836293993`*^9, 3.717758806749482*^9}, {
  3.717758887260893*^9, 3.717758889528534*^9}, {3.717758985417776*^9, 
  3.717759033090837*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"usuariosMM2", "=", 
   RowBox[{"NumUsers", "[", 
    RowBox[{"ArrivalsTimes", ",", "DeparturesOrdered"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7169891850560093`*^9, 3.7169892046012897`*^9}, 
   3.716989348957137*^9, 3.7169894605529222`*^9, {3.716991777186656*^9, 
   3.716991784821947*^9}, {3.7172427386259203`*^9, 3.717242740647992*^9}, {
   3.717242924134203*^9, 3.717242930497307*^9}, 3.717243466902399*^9, 
   3.7172458111948633`*^9, 3.7172460805431356`*^9, 3.717246307123158*^9, {
   3.717691308985795*^9, 3.7176913105062447`*^9}, {3.717691383974389*^9, 
   3.71769138431749*^9}, 3.71775783748178*^9, 3.717758568347386*^9, {
   3.7177590249226*^9, 3.717759026286407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "usuariosMM2", "]"}]], "Input",
 CellChangeTimes->{{3.716989327610087*^9, 3.7169893292151327`*^9}, 
   3.716989461525221*^9, {3.717691314440783*^9, 3.717691315384038*^9}, {
   3.717758497261405*^9, 3.717758517324847*^9}, {3.717758592936398*^9, 
   3.717758593641417*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJx11XtMFXQUB/AjCFzQ5r2AWYkDNONRwZbxUITfD+9MUEh5DEFFBURMA4Tk
ZRbgwokIqZALSFPioTIfARMRId6XEEPeIE8DGwbCD3whxqXbX22t79nOfvts
56/zOzvH2D/UPVCNiHpV+c/734iy8UyK2LGf/b8FO6ZYMCeOHgIm7hIzL7rU
LQJYMPex2txVDTHARFqaH527G3AaWLBOs+lu0+SzwEQht2d/NDK8DCxYyM+p
ZR1LbwATLV9c0vfnGLJgy1wo3c6sAJioUtspsdgDWTDrUPswk4xCYOLHzTe1
WVYjC6aplK1tvlYETLSm6UniF5/eAhbMZvnUxXmxyKr61hcJOuPIgl11e5qk
9V4JMPGzPcH6W62QJTzL0zpJ/n4ZMPFUg6/kk+uRBQsvPBh3Qb8cmGgzleUf
eIgs2L53Kqw94iqAiTfm8SndHZXAghVsUVw2MqgCVs2r/8ZR5lMNLNg93fP7
9LYjE3Xc8NOZaq4BFszkW2ffvBO1wMSPaDpajCcjS/iM+p3qwL11wFLuGjn3
tlyBLOHOfsfD0rcogKU89k5K9FQvsoR/kynztJ5AJl7R4W35uqseWLCPrzj9
Mv85MtGVV+q8KrgBWDUv8h7tkRJkIsPIkoissbvAgsn3rti14GQjMPGvP9tZ
KF4gC7Zn4rGVrd49YKIjeWORpY+RBXOMStj1geFvwMT9282DzrgjCxax7uLW
2ZfIxGXqOmcaw5qABZNmzyW4WdwHJoofUuabOiELNtglfdrljUy8wXlVls4t
ZAnv6z4UpBvRAky8blb6rCsFWTBP9XrPB7JWYKIvHXQuqBshCxYvkaT2BSMT
2YY6mwQWtwELVu5a5uXk3g5MVJOpsYbKO4AFS4lPV2uO6wQmmijySKs27wYW
bODcT/kxix4AE3kX92rYDfcAq+7lVHvSu4+QiapHMsIaAnqBBft1Wm3i+iVk
ooXpI0q7l8iCeXzv19cyvw+YaP2owsfrfD+wYAdMog8r7QaAiZ71VH+4NhZZ
sAC9+I5lOciqjbfIPsnHdhBY1e+KNxQZvshE3+kp74/vRxZsybXByedhyEQr
L5WedpM9BBZMZjbQ0HAKmbjcgW3LqUCWcI11My4e9chSbtnZ5JK9+ndgfV5T
5VprYY8s5U+MZmZC3ZAl3DHtLd25QGTiu5VaKw4nIqv+OzdKYV6ETPTK090+
pQxZsFYtq4D+IWSiJSeNXTwmkVX78uBCNeOVQ8BEsiCdae+dyII1WucpFFeR
iW+3a3lt0IYsWImB14ZKzWFg4pFa0R03bZElvCg7PG1kA7KUV5xY+onJTWQJ
D8mxH+LlyMT7TzX/ZVqPLFh6eOzoarVHwETaRaNHM92RBbs9nLh50zZkojqH
kYHkCGTB3mzeY8OuIxNPE2a+aoXIEu472ZyYW4cs5QWlu40XO/8BrM9/KNPd
OPP5v/4b/hHk0w==
      "]], LineBox[CompressedData["
1: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
b0QDJBo=
      "]], 
     LineBox[{{2.680802535151135, 5.}, {2.682184768265511, 5.}}], 
     LineBox[CompressedData["
1:eJx10lsow2EYBvAXmSWyaRIXROLCHaHUfC9CIbQiIsmh3EgpmuWQw1JkSv/C
bpYSF44rciElp3KKGsqpWO7IPodMmRg3rp63np5+l0+9MbXNhgZfIsr35reb
TcPuxFZ/pr/T8Um09cBoRNawtTw3b6IDWc2avfrZp05k4vE2V0FIN7KaN5wZ
Ifs9yBrWTbUaTL3IarYEl5r0fcjErq1nT1w/shQD2uRVixmZ6PqoPHVsCFmK
0tGXFLMd2bu3ZN3hs4wshd+01a2sIhMFdBi/tOfIUvikPwxW3SMTnxUWO5ef
kKW4jMxpWXxGJrLbaa3zG1mKiHx9RqOvCphoMtXlKItElqIofirbkYVMVJug
eJzVyFK8zrS/h9Ygez/6czit14QshXP3uMbWhUwc6Np+HTEjS/FxGn1jGUIm
9lzNBS4pyN6927ELih2Z2BY+/2bbRJZCVVn9aNhBJlpQ3X43fSJLMXdwJzI9
yMTzoQ9J+qAAYDWvJLgr+rTIGj68iKrjMGQdrxwq61ux//4BfZgnvw==
      "]], 
     LineBox[CompressedData["
1:eJx11n9M1HUYB/Bnjnbfg4QjL6Br5w+IEZyALCsg3OezWCCXR+4QRopCyJ1i
5lEZkJKAzFVmDKsNtIEZHCg7wTFPTgJZqI3TLcgWB6gHcUYlEz50Jz+UXFf/
9Nf72Z49e/3x7PnnebZnTb5Jb1hGRH3e/LeqdaGzY5EyTv+FknfGJXV9HIWs
4CG72CdrNcgSX+fRv/M4Gpl4b8IZ00QMsmDuhBm5nCMTXYx69ZfmN5EFq9m3
7oOn85GJKpayP99nQhbM/yOlVbYfmbj794VTQ6XIgt3XXCz6qwyZaDG5fmrs
S2TBCmw1GkstMlH6dpc7vw9ZMGNg+F1fFzJR3cn3nlkVJAEL1mvcKX8uHJnI
vdw4o9mILJhG1l/dp0UmagiPUnnSkQU78ajJ7LsFmXh1UVWlLBNZ4iFpcW2l
W5GJn141fdO2DVmw3CsrVi7lIBO59L1ztQ3Igi3j79671o5MfMeh+GI7tGAV
nfM+NeeRiZs3zY5kXUAW7GH3dZ0VmrhK7T7UaUWW+B/2kJZHTmTiB9Tq/N7f
kAW7ysMCfoAm8ks5etoyhSxYhj3jqdw5ZOLGz5qy7kAL9iy/1lY2j0yUbOib
HPCRAwt25Hn71xkqZOKXJkLnxtXIEt8zHbolZTUy8a0rRtJTQ5EFi70rHfwm
DJnoWMdo9ng0smDtZ09JPS8gE8X7t+29oUMWrOThQNeZt5CJr70l7x99G1mw
zOU3rseYkL0NU0khed8iC7bm17qq6CZk4o8LFifDW5AFCxgfmGi0IhPNDt5z
+v+ELJgsq27Hg2FkItut4T2b3ciC5V31Mw6rfIGJP+EwO1pXIwu2+Hf3j0MR
yN57CR69/EoksmDBAeUiOAqZaPLOMVNJArJgYY23LY4kZO++zhSoxjiyYN/n
eKozk5GJdz1pdZanIAumePlsRmEaMpHD6epK3o7s/RfqK3dvNCATX5nuDPTf
iyzYa3kVS4nQROYN2nbDEWTBgiyXdy4cRyY+c84eqG5GFmz/YHGHpxWZ6GRl
jD2iA9k7zyNF9F9AJjrX0l//oQ1ZsF3z9rL4K8hEuti0npERZMGcrYWbfFzI
xJV6bcnNP5Elfin2JeWn95EVPK74q/UnHiAr+WCiZ3p4vR+wgoc1bjuc+yKy
xAt2H++xxCMT1/tozV8kInv/paqF282pyERDDY6g828gC1b6XUJ3bQ4y8ezX
JyL1BmSJ/zxmS9UWISu4cSjbWXgAWckPbz76vq78f/8DLir4oA==
      "]], 
     LineBox[CompressedData["
1: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
Pza9zZ0=
      "]], LineBox[CompressedData["
1:eJx11W1M1XUUB/ADJPuvaP7RPzDujTFSBBEHCiga+js0lYzQBgx5WI2HaRRk
ouB1osjlITM0AlMCDIilFizRJNckZGKCcGPZMK4oWBT3YuXDLwmvgI5uverN
92xnZ5+XZ+fsHJ/0d2I3OxJRpz3/rT3uu0JX/+XJ9F9oPGT1DvwUWuX3O/Mv
To0jazwrMmR45G9klZ0X3vrWdwJZ4R3P5k6lTCITG9RVNaEzyFLMUdZ3BTvo
gIkbw5oS/3BElqK3Z3VAqxMysVs1vahTkRWe2XQ+qXYuMvG0zWY9pUOWotUQ
PxbujWzvt/6YrswHWYq5G+73ec1DJlpsGqizBCFLse7Oj8HpS5GJLLrs6UVr
kKUYP+IW6RiFTGyJaCp69BKywo/GG4oPxiKrXFdzb1VjHLLC7u+aGwzxyMSy
h05qCchSeKU+k3IjCZmorqhZ35iMbJ+X81VbDzRxaH1OuVsKssKWnzSnNdAq
R2d96GN6DVnjlo1BvZXZyCqPVvVUzs9B1njybvhZ/Q5klQ297XPM0Ar//MX5
cq9cZJVLuy+PeuQhK3wmPOrM9p3IxEGnMzOz9iBLUZLtH/xZATLx9grrJ2cL
kaVoibkxbDAiE5WGVcckHkKW4p5X/ymXD5CJv7/TkfhNBbLCjgVPHjRVIxNH
GJ/yiKhFlqJqSdLQyElkYr+80ucnPkeWIiFoxOFJEzLRNs38xv12ZCkuJRZf
L+9Atne09UCl/0VkKXSbh2y53yETH9wi/B93IyuccKHer/sKsspt+/f91tyP
rPHCwLYV2waQVfa965HxlhlZ4ULTxwlV0MQBmW7OkTeRpXgleWbi9WFkovba
kpdP3EKWoiuoZbBsFJlohKw7984gS+G6fGLtCQc9MHFbx6WvjzshSyEzYp5e
5IpMZGspyzIuQJYir7Qz2eiHTPRl9LmhkCXIUmQUzguoCEEmmko7Mq4PRZbC
V25ttYQhE0X9avyzbwWyFPuPHoi/CW2/N3E1pscrkaXwdCkcDlmLTPxcWrFh
9jpkKaofhpTc3oBMVBAbvakwFlmKtKs5y7bEIRMfXqm9F5iObP/XV2Z1L9+N
TJyXlep3PB/Zvi/Lhi+8vReZyHiu4XJgAbIUt/XHDo1BE+U8WOzuWoksRao5
7uHkUWTi7MGl6zc2Iyv86r78Ae8+ZJVPp+1Onv4BWeHf6U3Trn5klWd/9VGX
yzVkjT3nj+355TqyykVNLyzoGkTW2Hot9vDk//wPlqr1fQ==
      "]], 
     LineBox[CompressedData["
1:eJx112k411kfBvCvJf0q8h9pkoRkCYMpzWgxnZNkVIpkWqbF2makZWLKlko7
miZmSqlo1EiWybQiS8sMSoSmlKJR+hOOpMb+/J/nzfPqPi/OuT7XdV6e731f
Z5zPRvfVykTkoNj+e05ti87UrRnD6X9Lmxfem3rfAFrGt5y5OL4TWuKFB418
e58iE7f75/6wDS+QBcuL4YYxdchEaU2RFhEvkQUreKf/8rwcmehKa36PRjOy
YJfmleTmtyATvf9IqZ7dyIItWfF2UOMAMvG9KfbftUFLfJi/yuDPVPWAiY8a
kRjxYBCyYK/3xZT3DUUmUptx+vaD4ciCTVira2uliUzk73pM2csIWbCsV6ti
90MTGcx/vrXCGFmwSRa1aUETkIk/yuVrD1oiC1abfbUhzwaZeMbj8iTniciC
nXYwW+k1DZnIpbhWfbIbsmBLGwY8jN2RicekB/4ZAi3xeLsFJS+WIxMPqfD7
ZPBKZMGUzIaV/bwKmfg4WcLaEmjBHrXU1533QiYaEzI7a50PsmDLPAuDA/yQ
ie6fHa9iEIgs2PnTH9N3b0Um6jrbnpYfhizYne5tb2/tRCae5qh6M3sXsmC6
ujpellHIxHVMZe3ae5EFu6LuErkrBploy60Ynf2/IgvWdq3c1eo8MtFPhc/N
knOQBZsbrVOWWopM3FI66R1wD1nilhYzeuweIhNv/jFwU2QlsmD13qxB/xEy
cQetiPdZfyNLfHr32OdKj5GJR1dWHTeEFsxgxcGgznpkIo1AuYdlB7JgIxv8
A270IRMvzZCXvBwxFlji+5T8Ev8xRJbx9vXpBcvMkCV+tfeY03Vo4nMcs7as
sEIWbOMijaJYG2QivdBWp+QvkQV77nZguNccZOI2tSpBJvOQBZsW31Wx3wWZ
qO3rx8/sPZAFS32Xpzt9KTLRs8zwzpmrkAXzOhsbr++FTDTUUXvZjUBkwRrM
1ozfuhGZSNU+KMMmCFmRd5lXdIqgibsfjpO5hSIr5m3KarUV+5CJP4+LMIze
jyzYsLl/Tpx5EFmRd+lRCVcPISv67m6UrXU0MlFv/bXG3UeRBTtUMs2nPA6Z
6Prb2JDUBGTB5inp5XxIQib+rtzq0KVkZIk7Hsyo8LmOLOPRau5Xnf5Elvi/
CaWHRSmyjK8pO+ARfw9Z4uvOjq6fXYas6IuJKWfHliML1mISaJ1dgUzcaGhg
dDu0YNvvzflgXolM1DwwcrjWE2TBvJX8xpRAE182e8s3mjXIEr+95PvQa3XI
xH0NRn5cVI8s8dIp6xorXyIT7ze/86pHjiyYf7l18dE2ZKI7+Y+CWjuQBdv5
wCskvhuZeEGtZoRvH7JgDz5bOYkPIBN1y9/pbVHWBxbs89zPqiJUkYnvNFk4
PU9CVrzXzd+E/a6JTPy7kpqqXGjBsscb2PyshUzU5zYx/zddZMFezVk7ys0c
mSg1b5bx+nnIgk3eHHMJm2h78uFmv++QBVPp+OXrwcHIRLcLKxe570UWLNTC
tX9KLDLxqnD5qxvHkCW+mG0stTyOTLzdM6xu7AlkwfpPvemsTEEmslvn1Bp2
EVmwKr9I75JMZKKguG2L03KQBdtj+oV3eD4y0Zmwl3pvipAVfeFfdu7BLWSi
nMf9hcdLkQWLO9Ok9qEcmSjU8O9dlpXIgnV+vtpyVhUyUeWm3Z8seIIsWO8b
1RjbOmTiS/JPeoxsRFbcD56Q+aMcmfgXG7Rf57UiS9wsOd06vA2Z+IX4q65q
H5AFc2nT+lXWj0yk4lTu7KhpACyY9sSEod/LkImrmDpFa41AFmz262Jeo4NM
dCpSNnfCGGTB/JI7PcfqIROvOLG+JHI8ssTr7Avsa0yQiacfnxnsa4os2BT6
qtLXHpnotbLeyAtOyIIZ62VUv5+DTLxvWdyqlrnIEq8qz7Bt9EYmblvS63Z9
NbLEcyvaMuRrkYm/Xl09yC8AWTCza1d2RAQiE9foiRctG5EVed173vLOZmQi
h89r9z4OQRbsfqbxza/DkYneLf1xw+koZMG6VZWypxxEVuSFUV+r8SVkwWJL
POXzi5CJXnQ0J9fVIAs2wsKjwKIWmSjczlHvZ4EsWHrULN+mTmSi/rw5dlb9
yII9nlda3UWGwESeKrOcdiojC3bq0NYlN4YgE8/6Xi1huwayYAn5y9XroInz
eweCfWXIElcP9Tl5A5r4s4KnQ3KhBXu0Rt2aPkEmKvVxzg/+FFmwMQke/RdG
IxONllvlR+khCza99UjuMkNkoo5Of3ObCciCdVWnJd+CJv7W6lTjCGtkwQoc
TshMoImsnxxdc2QGsmDu/5hmDubIRNMaNTK8oQVzltxvfjUTmShAdF/51xlZ
sGfnlv66xBWZ+GGL0SmJ0BK//seJcXkLkYnH2Q4aIndHFuxp5YsZmmuQiVom
pV0Y2IwsWPL0JHniNmQix2kvU1LCkAUzd8lcKN+FTDy2yic4fC+yYD1HXIxW
7Ecmrm6ye7LaAWTBjtYuLnOMQSY6Z9yl0haLLJhqtN3NPUeRiQ84nzN3jEMW
7C+P/IBoaOJba2uGZP6CLFizS5GH1glkIpt0Sze1k8iCGY2fUrsnEZmoJrL/
SNV5ZMHGOiSVVP+GTPzMeq+K9FRkwbRG/f2t7UVkIrUcb4fIdGTBZvkemz42
A5lofOjHwyGZyILt70ic+1cWMpFmb8c+ld+RBTu0YGnvuUvIRIkJl1nJZWTB
1hUvcM26iUy0us3N1i8fWTDXLfrRPUXIRAb/Hlq8qgRZMa+XR2+6DE1818cl
3+4rQ5Z4zmTbHYbVyDJuuTuty6oWWeI2Ywo3RUIr5v10aWIBtGDjUpvMLz5H
JoqynuqlVo8s2E+T30dufYlM/F2nkuvFN8gSb9q2g7rlyDK+/KFBa243ssS3
5BXNDe5BJt5wotgkHlqwqw+V+sP7kYnWdRUcPCaNAxasTWeSxbwhyMQ3NYys
uj4UWeLrD6sH3IWWcbU8TbMGaG1+I6K49a46soxfdm7RnaWBLPE8o6r5G6CJ
79e3DGoYjizYvY1PBwJkyMTna0Zm6Y9AVuTtYGXTnZ8iE08L+kFzkQ6yxFdO
/Sn1FDTxzJw91wJHIwsmu5Ui7HSRFf8N1ZnKeqbIgi287FCRPwGZuI/yot03
LZEFW9vQzqxskIn8R92e2TkJWbBhb6uHVdgiE2+zysh6Di1YyvChhRPskYnS
Tm5yOeqILJhpi/7hb1yQidb4bffwWoAsmFWWv1vUQmSivofZzlaLkAWrnkiP
jRYjE787takx7Vtkid8wqMyOWI4s4+0PAxckrkSW+BObWW++XIVM/IekOq07
0IKVlb8vlnkiE9k1/TF/RTCyYEllF0f7b0MmHtJkrn0OWuIjDH4z6AtBlnH5
7Oak2DBkbT5Jv0a6vvv//g+k9ecd
      "]], LineBox[CompressedData["
1:eJx1x11Ik2EYxvEbA3sGgRutJKhANyeGm0uznSTPfZINJWJpjFUnCUoRo3hR
DEsiT1q4Fg2TGERK0QflR/CuLAghD6KVEWpJVivWhlZSz9b60Cz7OOnouuDP
xa+g4cD2xhwiavjT35/wRXZZAgVM/2bmxZEV82+gjVzr9u+InEAWnF+70l8V
RCYuD0ZD3SeRBT+Y2pYfDSETN3aMb/acQlbyyVzxF1MYmUg7bp1NRJCV3GvR
bOkeZKKs4VPecC+ykju1uu+Ll5GJHTXuPVuvIQseOzdsO3Qd2cjTa02hJLTg
7mz50sF+ZGKvr/2ZZQBZybN9oxOV0MSp0iPeHmjBMa7QKnVkI3P2oa/4JrLg
zlXnN7TfQiZO+vszm4aQlRy84vJU3EEmClqLqqvGkZXUU4VzGjSxYcgVdjxF
FryFV5+uhyZ+pJe2tkwiK1l9sK1Ohybe+CsTdD9HVrJrfSh9CZr4fbL1zO04
spLposffXK+RiXTdviyVQFYy8faqx5xEJs4NePvappGVlPaxQASaqPPiwL36
D8hKvnC2RI+mkYlndt8VHzPIgn/YO+IX5pGJm7vWvYwtICs5O5lT4lxSCExU
5jg21ZuLrCQvvLMeNiATf236ucaZhyx4fyx8f9SIbORXN5pnPpuQzRy3leyr
Wf7fvwGwJJMe
      "]], LineBox[CompressedData["
1:eJx112lcjdv7BvA7UY+h065oIDQop8mckFqraC4ipUyJokEllCFHicpcUUql
Q6VjShQ5wjGHTBlCSagjB2GZZfw9///7a7/Zn+/zZn+evda61n0ZzoqeGNKB
iAZ2JPq/79i9P+fm6hpx+v9Pd+6QbehWqYes4Os6xpn374ks8XkaiWpWvZGJ
h6l1Lb8DLVilrtmjb32QiVe8tVhk0xdZMLXX54akGyAT/Yq6nlRqiCxYVuWV
+0P6IRM1Jqu6uZoiC+Z/rfOzjmbIRH5xXwPNzZEFi1FMs/KzQCaKURmactsW
WbCub6yyljggE2++8OCHrguyxOsiN3TPckNWcK2RJ/z3QXfn524Gz4rzQFbw
Mblr7Q5CS/y9Vrfxdp7IxLVmzhoX4oUs2K/3r35um4xMXPV8yOwf0IKZ9vQo
8/FHJgofEvE6JAxZsHPrSr8Mi0AmrtLh+W4XaMFuvXRQMotEJn78+ZitF6EF
8ylsr1gWjUz8YKLz9PkLkQUL8mv5vhCaaKH5VvtLi5AFu7RvB8+JRSZSFR1U
9Jcjy+uVnbH/GzRRwqTM7ZqJyIJZGW0a+TYZmXjx8dPttqnIEr+gN/Hb2TRk
4oNH+g/QzkAWzGP3ldvXtiAT+Uc6Le5RiCxYg3rCJfUiZKIhcyaxTvuRBVO2
mndjDzTRVqOY6O/nkQX7Xr10zKJLyESLw8tG7axBFoyHPFYOvY4s542Z/fr4
G8iCNSanzbsBTTSil9Md9ZvIgvVYtflq3m1keb/FdDjd6R6yYKuejHtr3IhM
XNvR4s06aMFKOoR6azchEz22Vi/1a0EWTD/At3IPNNFcVeGS+hxZzoupR+JK
2pCJPqwIKNv6FVmwd2XrQxN/IhNlTVhgr/iFLNhcu91fv0ATD9LcvqNYyRhY
MEeDh4HGnZCJCtt9MxPUkQXL7/HryHYNZKIJD8TUIE1kwWI9EkzVuiMTaf+t
WvZIB1k+704nP/rpIhP3Gmfz0FUfWbDkDo2HTPsgE1l6bwo4bIYsWP8fJUd6
WiIT91n+qE+ZFbLE3avGqDyGJn79TNuqBQOQBZvxft6lImginS4lul2tkQUr
s+t9O2s0MvFnouK3DXbIEu99wX1CMbSCT+wcH23BkSUe2u+e3xlo4gvWfZlT
74gsmIrd8MW9xiITuVupNds4IwvmfCi/3+zJyMRvVK0elwst8Rt7Jn54PwOZ
+MLqZ9pOgciC1Su87HbNRCZqP7v5SUowsmDBM9vmbAhFJp6XanPm9zBkiVct
83bzhSY+o75G9AtHFqxGecYE9XnIxLu2PU4KiEQWzLg4fF4KNPHN2RmTNkJL
PNvo9unDUcjEu+waqlYFLVha/N3OF6CJPzLRvOIbjSxYy+w2J4sFyERJw9bv
2bUQWbBZg7OzteKQicbumpuzFlowVZPm1oLFyMSvXRjgbhePLPFRKWdGBi1H
lufdPdP090ALNu3CmlDjJGSil/ucWgelIgvWqTGvZfcaZKKL3WbeK8tAFsy6
c2zfX7nIct+1edB1cx6yYPvjehz6BU20qrTByGA7smB9jh3Ynl2ATNTlkKXS
hx3IgunuV7NTLUIm8tR71ScRWp43kvnTV9BEZpdWvjr+F7JgQ3Rivyzei0z8
09ANZwoOIAu2of+J2X2OIhPZKgIOrIAW7OHweVqmJ5GJPC5G/jboIrJgueVX
WldfQibuFG3jVQUtcfX70z4EX0YmvnTOibYL0HLed802e3sVWcEHver9QP8a
ssRVegT2XQNN3Fd/0kl+HVmwa4nL3E7XIhMF9D+1xbABWc4rp2Er7R4hEz+s
99Q8DFowt2l1SQXQRFV+u8bGPUYW7LO327G5zchEAyZoViQ/RRZsQpjxgvPQ
RB267/4a9wxZMNshxaU73iITv9Ux/X3+O2SJP/WNtH4LTTw0euWcQ++RBXtt
lDAy8jOy3FcrXMY7/EIWTHFm6fVz0EQpw/9Lvq7oByxYuolF7RYtZKLK6PLS
lv7IghXWmqqYD0SWf69V37HzEGTBqv999+9ea2S5b+nGf84cjiyYyyzXttgR
yMTZ3ofHXEchCzZxr2tThi0y8U6neHIztGAd85TLI+yRiZs6V6u/ghbMK/MP
9xwHZKLDgZYerq7IgnWp1rnlAS0/2Xbsy5lJyIIZqpi7fvNDJj616mVR5XRk
wdRrmpWVZyITxcUfq1EKQhbs/qQawyhooj+jt6yaNhdZvu96PnBcAU28Ofzd
oDWhyHJeRm7k08OQievGWfiEQgv2148OIXURyMQLLlunj41CFszfWcvpIjTx
r0V590qjkQWr+BisfCIGWc57tQH2S2ORBfOLXPApKg6ZKFi/p+7eRGTBSiex
9/WpyPK8FLEoyn8DsmC7DB8f/A+aqP5VQV1gGrJgdT32rzubjkz8RI9rUZ4Z
yBJ//rAydOFmZAVfpDs2wyULWeL3C9ysqqGJr3/iqNIALdh/m694/rsVmcgm
w8NHKR9ZsFNqBhZdC5CJ19V+Hnp9B7Jg04+sybtfiEy0JeXN+d92IwvW2la+
prUMmXhWyrZvFyuQBRttGxObegSZ6J5uemHdcWTB8levcPc/iUy0bmSxymlo
wYob3W6Gn0Imclt67bZGNbJgS53SJgVfQSau4uVx8Pg1ZIkXmrecZrXIxBf5
+h5RvYks2JkGq1HrbyET/b7xakD8HWTByovehJz/D5lIO3N9jNZzZMFSFlWF
fHqJTLRCz/Tvz6+RBXv//tOpc2+QibfGL33E3yELVvlqSsuX98jEyUqpako7
ssQzBntqBkETH3PhxZLmH8gSfx1nNuL6T2Tii9vXtdf+QhZsvnJuYCWZAMt5
e7+4QFMDWbCj0U9rdbWRic+44JUXDy2v16RbWfd0kInyiz44juuNLM8bWut+
M+mDTPQwwGTDagNkwRZe0e+xAZp4L+3pL3qbIUt8AFtcscEcWcFHhaeWrrVC
lrj/70ZvzQcgy/e1jVPvoMHI8vsO0/hmOQSZSHPL2OQie2TBrpiXNH3nyMQr
u8b+6TgGWeI1HRsDNJyQFXzPkAXnwz2QJd55kfEeNU9k4lqdk1ePhhasbXSm
no4XMvGPb7L/PgYtWL3HCSPrccjEQ9x7/5E3Hlnisees7TS8kYk/nzs1x3ki
stw3l3U+5TsJmXjgwMTXEb7Igm1tc6irhSZarfOsV/xkZME25lvYVk1BJsrT
js6qDEEWzOD7k+mfw5CJG/8zftnHGGSJRyWsil+8EJl4teoTvaeLkQV762jS
13gJMpG9dGTpzCRkwUR66eC6VchEg36R9t+pyIKxBr5zYyYy0eh+w0Zcy0IW
rNZkzV7LbGTi7R3XBm/LQZa4bdaYnKACZOLlYyOfjd2BLNjl5vvNq6CJfni6
vDMqQhasanJc2PQSZOJ554qnNB9EFkzt081FayuQiUIDZjQcuoksmOrNTpPH
3UEmynocub64FVmwV9tG/nj8HJm4Xt8Cl+svkAUbqn1lwmto4o+3/NiV+hJZ
sGRH/U2L2pCJ/EWXla9eIwvmqVLbL/EdMlHb1WFGwQpTYMFOOsdb9tJEJjLo
GVWR0xNZsDkGm2aZ9EEm/s2ianAJtGAD7h/9ProvMtHlTdv67TdEFiyp4LSP
lREy8eUdLT8dNUYWzGvrwKSz0ERf9N5c0emHLNhF+w4v2k2RiSbuHGXbbo0s
mNLRppW9RiITd9p5udnBFlkww2FFkS4OyESPjT4b1EMLpqObsP2dKzLxlafP
+i/2QJa4ZVPs9yAvZOLn1pZYzB+HLNjXXle83ScgE5Urn+s+BVqwdEWMw4yJ
yETZAaVDj05CFqzG/W5qawAy0fFMoxaNQGTB/C/Zag6EJm6TZ2IZNAtZ4vaX
Gsr9ZyMT/8ejZrR1CLJgJs2lBimhyEQnVM/vi49EFuy8S7ihVRQy8dIneUWn
5yNL/I9qCm+MQSb+IMcz+vxCZLnvr34QtWsJMnHDiPU/IpYhC/bCbJZ57XJk
4hGz77j3/wNZsFNNAxoGJSATqeaudTm8Glmwib1aS15AE0+YUyJdTEGWeNJB
f/X6NGTitXrvnixMRxbshsqU6uAsZKLDGocsyrciy337skS++chEC9btWhC6
E1meF7YeTs8pRCb+5njNnOVFyBI3TvOPHbkbWcFv7l0TnwfdnYd9nxsetAdZ
wcsiSENlH7K8XxUnC+buR1bwiWe7VQtoibdS/eWIUmTiLs5ezVug5bx2Pzhs
ywFkomY/t1HHy5AFc89KrikpR5bv6ySHJI8qZHle+2ym3e04MvG1O7O7TPkH
WbBLe1oCm04hEy35NivT/yqyYC9bdPcsq0Umnl7v7dl4G1mwlrNjFlbeRyau
v8K2i2E9ssSV7f2SqRFZwb3U+jY+fYgs972IledeQhNf7WLSXacJWbCK5MU+
yx8jE906lHhWtwVZsFtfiir9oYn33mUZGQwt2BvbLql//4tMZNZ+ZEDBa2TB
HCq/6u2EJhpWdu0Q/4osWJrbA0NB/YGJqoe/HP5VE1met6gm07k7svxk111D
tx7Igi0+2vXYSG1kol42AeFZ0HJe+kzpqqKLTNxo2c/LyT2RJd7Qf3xqZG9k
4lM8Qox5H2SJ7xw3qvMsaOJR2/5tnQstWC/7oy7+/ZCJ74ut80+Alv/vddO3
l0ETFYQVbFo6CFmwCTrTiyOHIBPv1nFJXzNrZLlvf1g1RmM4MlFK5ug3N6AF
m9s/3uzNaGTiLa3bm3QZssQf3k45NJYjE+8nNMNmOyALNuyWa9SfjshEUd1W
jvcdiyyYz4bGgyedkImupA3JT3JDFuxpQvn33PHIxP1MtvV09UYWLNfmUaeP
0MTT7t6OGOmDLJj5hFtmntBEZ17tnTjKF1mwQxYvjb5CEy397rAowR9ZsMnO
Xrs3ByATf631sK/1VGTBjj7o8CwBmsjws75LHrTcNyJnXayZjkx00v9vE/UZ
yIIp5w+PqYcmqjz2ce23eciCFarYvy6NQSZuXbvKuWIpssRVc6eMVyQhE7/1
TPNLQgqyxM/UHgjJT0UmvrSoxwPzdciCef46GeIJTaT1X2tE303Ict77LbA7
loZMdCxZqfupDGTBto24rHIiC5l4YPHxfWa5yBKPWf4rzTkPWcF9ks8eph3I
Ev+5xuFZITTxsk8Hu07biSzY1BElIhea6Pt8vn7mSWTB/qpsSLH9B5nodnjO
ghRoue/d7ux/8RwyccVvUtxNaMFsTT9kbzqPTPSX38ejWy8gC9Yp+/vn+TXI
RNt3dNoXAy3Y7F6q71dCEx/ddDQ36gayxJtvHrQ9Wous4BFRL1b/By1xz1E3
SrCJ15T+nO5zB1mwiOEDmxugiVv2z7C+UYcsWN0j7WUad5GJ1vt5k8E9ZMFs
pPYHTo3IRHqBPz91e4ksWLRfh8QwgUx83JmwKqV3yPJ6T71Qqg9N9ORqxtUm
1d+BBYuqNrd9q4FM9Nr9+YcPvZEFy9mXHnLDAJm4etnCf+6YIAu2Z4Fy//u/
IxP1tHT48nEQsmBKvkMvVAxFJj6UFcYk2yAL1qPCPaWHAzLRugPzp9k5Isv7
7fCGPwaNQSaqOtB4OXEsspw35zsUnHZCJj5XP7/a2xlZ4i/8lf40dEVW8HlB
kUf6uCFLnL/XrLOCls97dk8je2h53jEdvkrHHZnoeobSp0BvZLnvN4Yr7kxA
Jl6pUtXNxg9ZnlfXFNn4QBOvV/k24eVkZHm9EgMy7P2RiQKPmUw9Mg1ZMO+K
r0F3ZyITtTvGPaoORhYsdX5B+LAwZHm/N7QePhaNLJhW07lrw2KQie5YRIqf
i5EFK6sxnrUiHpl4yMDeQUnJyIIlntBxrExFJurLqvvvXI8s2AHt56bLNyLL
7zvv4ODWTciC3fHfqmKbhkxU+GZJWHo6smBNNZ6Hv2QiE61Uv7rwaj6yYJvW
/lb1pRBZPq+DNXYO2Y0s8XHeZ+8X7kNW8MQpNTl6pcgSf/D9m9I2aOKTNq1+
vhda7ssNUrJZGTLxnIqPPwzKkQW7/UOzRq0CmWjrrKLTAceRBRux48LmKdBE
Teecb7RcRxZMUajsu/wOMvHZzzKep9UhSzy4ekSB611k4uWPfbQuQwuWmVAw
M6EemXiHHUdG+z9CFqyt2PbVBmii/wH68Fvj
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 12.436622060328283`}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7176913393604918`*^9, 3.717691392759551*^9, 
  3.717756878556411*^9, 3.717758712107069*^9, 3.717759047125722*^9, 
  3.717765718603997*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"usuariosMM2", "[", 
     RowBox[{"[", 
      RowBox[{"origin", ";;", 
       RowBox[{"origin", "+", "width"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "usuariosMM2", "]"}], "-", "width"}], ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"width", ",", "10", ",", "50", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.717759066637179*^9, 3.717759071653036*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`origin$$ = 1, $CellContext`width$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`origin$$], 1, 
      Dynamic[Length[$CellContext`usuariosMM2] - $CellContext`width$$], 1}, {
      Hold[$CellContext`width$$], 10, 50, 1}}, Typeset`size$$ = {
    360., {111., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`origin$2274$$ = 
    0, $CellContext`width$2275$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`origin$$ = 1, $CellContext`width$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`origin$$, $CellContext`origin$2274$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$2275$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Part[$CellContext`usuariosMM2, 
         Span[$CellContext`origin$$, $CellContext`origin$$ + \
$CellContext`width$$]]], "Specifications" :> {{$CellContext`origin$$, 1, 
         Dynamic[Length[$CellContext`usuariosMM2] - $CellContext`width$$], 
         1}, {$CellContext`width$$, 10, 50, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {168., 175.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.717759072565054*^9, 3.717765718669141*^9}]
}, Open  ]],

Cell["\<\
Se puede apreciar como ahora que nos encontramos en un modelo con 2 colas el \
n\[UAcute]mero m\[AAcute]ximo de usuarios que llega a encontrar en el sistema \
esta en torno a los 7 usuarios mientras que para el mismo valor de mu y lamda \
en el caso de M/M/1 hab\[IAcute]a momentos en los que llegabamos a encontrar \
hasta 20 usuarios; esta simulaci\[OAcute]n demuestra que una cola M/M/2 sirve \
a los usuarios m\[AAcute]s r\[AAcute]pido que una cola M/M/1.\
\>", "Text",
 CellChangeTimes->{{3.7176915085392437`*^9, 3.7176916439477777`*^9}, 
   3.717759112252241*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"probSimuMM2", "=", 
   RowBox[{"ProbabilidadSimulada", "[", "usuariosMM2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListaProbSimuMM2", "=", 
   RowBox[{"CrearLista", "[", "probSimuMM2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ListaProbSimuMM2", ",", "ListaProbSimu"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<M/M/2\>\"", ",", "\"\<M/M/1\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7177591471893997`*^9, 3.71775930511981*^9}, 
   3.71775935522402*^9, 3.717759498578925*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQNeW3fxu7PetYfwPtjXlDzlq7O8DOUzOOyyVmSr
zT4I5XM4+M+XzmXx2QjlCzjIPJ9zU9xhJpQv4jBz11ut7avaoXwJBw4J/V/5
PzKhfBmHsKvCrjeknaF8BYeI3dbFE7SSoXwlh/JTS8/+aNCC8lUcGFCAGhpf
A42vhcbXQeProfEN0PiGaHwjNL4xGt8EjW+KxjdD45uj8S3Q+JZofCs0vjUa
3waNbwvnAwCKTTFd
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQNdN6OSdOacsofwPtg/Kcnsdhc4CuUzOOQe/tf5
4PgBKJ/DITOdbcOVD7uhfAEH3tvzlD5mboPyRRzyO2SuWURsgvIlHF69Lgyc
l7kWypdx+KYw3/yH43IoX8EhukN6/wuRRVC+ksPfyKedq3hnQ/kqDvq6nGW3
gydB+WoOOt8/TWit74HyNRxSE8vvztRohvK1HFTb1k1d+6ccytdx4I2+Eaaw
vQjK13OIuMa/N6ytAMo3cOC+rhkgXpEH5Rs6xFpU8kdvi4LyjRwUk/kORgSF
QvnGDvxbnE8903aE8k0czs7bekL6gymUb+qQV8JgcNPBGMo3c4hQMy37rsoL
5Zs7MKAACzS+JRrfCo1vjca3QePbwvkAC7hiaw==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 29.}, {0, 0.14361607418541272`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 29.}, {0, 0.14361607418541272`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"M/M/2\"", "\"M/M/1\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.717759278068461*^9, 3.717759306013836*^9}, 
   3.717759355962161*^9, 3.717759504299982*^9, 3.717765719318955*^9}]
}, Open  ]],

Cell["\<\
En este caso tambi\[EAcute]n vemos claramente como para el caso de M/M/2 las \
probabilidades son mayores para estados cercanos a 0 mientras que la \
probabilidad se hace menor para valores altos de usuarios esperando en cola.\
\>", "Text",
 CellChangeTimes->{{3.717759331125807*^9, 3.7177593759181356`*^9}, {
  3.7177594621672983`*^9, 3.717759492139463*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1855, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 151, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[734, 26, 135, 1, 65, "Section"],
Cell[872, 29, 571, 14, 63, "Input"],
Cell[CellGroupData[{
Cell[1468, 47, 166, 3, 32, "Input"],
Cell[1637, 52, 9191, 232, 233, "Output"]
}, Open  ]],
Cell[10843, 287, 352, 10, 77, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11232, 302, 318, 5, 64, "Section"],
Cell[11553, 309, 342, 9, 40, "Input"],
Cell[11898, 320, 317, 6, 33, "Text"],
Cell[CellGroupData[{
Cell[12240, 330, 169, 3, 32, "Input"],
Cell[12412, 335, 9008, 147, 242, "Output"]
}, Open  ]],
Cell[21435, 485, 209, 4, 32, "Input"],
Cell[21647, 491, 227, 4, 33, "Text"],
Cell[21877, 497, 248, 7, 32, "Input"],
Cell[22128, 506, 1063, 30, 55, "Input"],
Cell[23194, 538, 1411, 20, 99, "Text"],
Cell[24608, 560, 276, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[24909, 571, 417, 11, 32, "Input"],
Cell[25329, 584, 3368, 64, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28734, 653, 728, 21, 32, "Input"],
Cell[29465, 676, 3338, 62, 356, "Output"]
}, Open  ]],
Cell[32818, 741, 311, 5, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33166, 751, 246, 6, 64, "Section"],
Cell[33415, 759, 3780, 86, 305, "Input"],
Cell[37198, 847, 607, 10, 55, "Text"],
Cell[37808, 859, 517, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[38350, 872, 166, 3, 32, "Input"],
Cell[38519, 877, 241693, 3976, 245, 223989, 3684, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280249, 4858, 615, 17, 32, "Input"],
Cell[280867, 4877, 2161, 42, 360, "Output"]
}, Open  ]]
}, Open  ]],
Cell[283055, 4923, 216, 5, 64, "Section"],
Cell[CellGroupData[{
Cell[283296, 4932, 180, 3, 57, "Subchapter"],
Cell[283479, 4937, 492, 14, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284008, 4956, 96, 1, 65, "Subchapter"],
Cell[284107, 4959, 332, 6, 33, "Text"],
Cell[284442, 4967, 2219, 51, 341, "Input"],
Cell[286664, 5020, 326, 5, 33, "Text"],
Cell[286993, 5027, 1845, 42, 253, "Input"],
Cell[288841, 5071, 310, 8, 55, "Input"],
Cell[CellGroupData[{
Cell[289176, 5083, 274, 5, 32, "Input"],
Cell[289453, 5090, 5260, 97, 238, "Output"]
}, Open  ]],
Cell[294728, 5190, 311, 5, 71, "Section"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295076, 5200, 129, 2, 73, "Subchapter"],
Cell[295208, 5204, 1575, 36, 283, "Input"],
Cell[296786, 5242, 317, 7, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297140, 5254, 225, 4, 73, "Subchapter"],
Cell[297368, 5260, 381, 7, 41, "Text"],
Cell[297752, 5269, 3491, 78, 407, "Input"],
Cell[301246, 5349, 272, 6, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301555, 5360, 126, 2, 73, "Subchapter"],
Cell[301684, 5364, 2053, 51, 283, "Input"],
Cell[303740, 5417, 600, 10, 55, "Text"],
Cell[304343, 5429, 1954, 47, 385, "Input"],
Cell[306300, 5478, 1316, 35, 209, "Input"],
Cell[307619, 5515, 231, 6, 32, "Input"],
Cell[307853, 5523, 1250, 31, 231, "Input"],
Cell[CellGroupData[{
Cell[309128, 5558, 1035, 27, 99, "Input"],
Cell[310166, 5587, 17517, 361, 241, "Output"]
}, Open  ]],
Cell[327698, 5951, 271, 5, 33, "Text"],
Cell[327972, 5958, 424, 6, 71, "Section"],
Cell[CellGroupData[{
Cell[328421, 5968, 90, 1, 51, "Section"],
Cell[328514, 5971, 1404, 21, 107, "Text"],
Cell[329921, 5994, 605, 13, 121, "Input"],
Cell[330529, 6009, 2402, 46, 99, "Input"],
Cell[332934, 6057, 4233, 91, 341, "Input"],
Cell[337170, 6150, 483, 8, 32, "Input"],
Cell[337656, 6160, 290, 6, 32, "Input"],
Cell[337949, 6168, 725, 13, 32, "Input"],
Cell[CellGroupData[{
Cell[338699, 6185, 315, 5, 32, "Input"],
Cell[339017, 6192, 25817, 446, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364871, 6643, 572, 16, 32, "Input"],
Cell[365446, 6661, 2121, 41, 360, "Output"]
}, Open  ]],
Cell[367582, 6705, 579, 9, 55, "Text"],
Cell[CellGroupData[{
Cell[368186, 6718, 667, 18, 77, "Input"],
Cell[368856, 6738, 12715, 266, 274, "Output"]
}, Open  ]],
Cell[381586, 7007, 369, 6, 33, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

